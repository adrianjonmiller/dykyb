<?php
$php_minimum = '5.1'; // User's PHP must be equal or newer to this version.

if ( version_compare( PHP_VERSION, $php_minimum ) < 0 ) {
	die( 'ERROR #9013. See <a href="http://ithemes.com/codex/page/BackupBuddy:_Error_Codes#9013">this codex page for details</a>. Sorry! PHP version ' . $php_minimum . ' or newer is required for BackupBuddy to properly run. You are running PHP version ' . PHP_VERSION . '.' );
}


define( 'ABSPATH', dirname( __FILE__ ) . '/' );
define( 'PB_BB_VERSION', '3.4.0.7' );
define( 'PB_PASSWORD', 'dad333640f272ef5a96f54383fafa80b' );


// Try to put an index.htm file in place during import to help prevent against file browsing. Only do if not a defined step OR a non-numeric defined step OR a defined numeric step < 5.
if (
	( ! isset( $_GET['step'] ) )
	||
	( isset( $_GET['step'] ) && !is_numeric( $_GET['step'] ) )
	||
	( isset( $_GET['step'] ) && is_numeric( $_GET['step'] ) && ( $_GET['step'] < 5 ) )
	)
{
	if ( ! file_exists( ABSPATH . 'index.htm' ) ) {
		@file_put_contents( ABSPATH . 'index.htm', '<html></html>' );
	}
}


// Unpack importbuddy files into importbuddy directory.
if ( !file_exists( ABSPATH . 'importbuddy' ) || ( ( count( $_GET ) == 0 ) && ( count( $_POST ) == 0 ) ) ) {
	$unpack_importbuddy = true;
	if ( file_exists( ABSPATH . 'importbuddy' ) ) { // ImportBuddy directory already exists. We may need to re-unpack it if this file has been updated since.
		$signature = @file_get_contents( ABSPATH . 'importbuddy/_signature.php' );
		$signature = trim( str_replace( '<?php die(); ?>', '', $signature ) );
		if ( md5( PB_BB_VERSION . PB_PASSWORD ) != $signature ) { // Signature mismatch. We will need to delete and unpack again to update.
			echo '<!-- unlinking existing importbuddy directory. -->';
			recursive_unlink( ABSPATH . 'importbuddy' );
		} else {
			$unpack_importbuddy = false;
		}
	}
	if ( true === $unpack_importbuddy ) {
		unpack_importbuddy();
		@file_put_contents( ABSPATH . 'importbuddy/_signature.php', '<?php die(); ?>' . md5( PB_BB_VERSION . PB_PASSWORD ) ); // Create a hash of this ImportBuddy version & password. On accessing importbuddy.php's authentication page all importbuddy files will be freshly unpacked if the importbuddy.php version and/or password mismatches to allow users to just replace importbuddy.php to upgrade ImportBuddy or password.
	}
}



date_default_timezone_set( @date_default_timezone_get() ); // Prevents date() from throwing a warning if the default timezone has not been set.


if ( isset( $_GET['api'] ) && ( $_GET['api'] != '' ) ) { // API ACCESS
	if ( $_GET['api'] == 'ping' ) {
		die( 'pong' );
	} else {
		die( 'Unknown API access action.' );
	}
} else { // NORMAL ACCESS.
	if ( !file_exists( ABSPATH . 'importbuddy/init.php' ) ) {
		die( 'Error: Unable to find file `' . ABSPATH . 'importbuddy/init.php`. Make sure that you downloaded this script from within BackupBuddy. Copying importbuddy files from inside the plugin directory is not sufficient as many file additions are made on demand.' );
	} else {
		require_once( ABSPATH . 'importbuddy/init.php' );
	}
}



function recursive_unlink( $path ) {
  return is_file($path)?
    @unlink($path):
    array_map('recursive_unlink',glob($path.'/*'))==@rmdir($path);
}



/**
*	unpack_importbuddy()
*
*	Unpacks required files encoded in importbuddy.php into stand-alone files.
*
*	@return		null
*/
function unpack_importbuddy() {
	if ( !is_writable( ABSPATH ) ) {
		echo 'Error #224834. This directory is not write enabled. Please verify write permissions to continue.';
		die();
	} else {
		$unpack_file = '';
		
		// Make sure the file is complete and contains all the packed data to the end.
		if ( false === strpos( file_get_contents( ABSPATH . 'importbuddy.php' ), '###PACKDATA' . ',END' ) ) { // Concat here so we don't false positive on this line when searching.
			die( 'ERROR: It appears your importbuddy.php file is incomplete.  It may have not finished uploaded completely.  Please try re-downloading the script from within BackupBuddy in WordPress (do not just copy the file from the plugin directory) and re-uploading it.' );
		}
		
		$handle = @fopen( ABSPATH . 'importbuddy.php', 'r' );
		if ( $handle ) {
			while ( ( $buffer = fgets( $handle ) ) !== false ) {
				if ( substr( $buffer, 0, 11 ) == '###PACKDATA' ) {
					$packdata_commands = explode( ',', trim( $buffer ) );
					array_shift( $packdata_commands );
					
					if ( $packdata_commands[0] == 'BEGIN' ) {
						// Start packed data.
					} elseif ( $packdata_commands[0] == 'FILE_START' ) {
						$unpack_file = $packdata_commands[2];
					} elseif ( $packdata_commands[0] == 'FILE_END' ) {
						$unpack_file = '';
					} elseif ( $packdata_commands[0] == 'END' ) {
						return;
					}
				} else {
					if ( $unpack_file != '' ) {
						if ( !is_dir( dirname( ABSPATH . $unpack_file ) ) ) {
							$mkdir_result = mkdir( dirname( ABSPATH . $unpack_file ), 0777, true ); // second param makes recursive.
							if ( $mkdir_result === false ) {
								echo 'Error #54455. Unable to mkdir `' . dirname( ABSPATH . $unpack_file ) . '`<br>';
							}
						}
						$fileput_result = file_put_contents( ABSPATH . $unpack_file, trim( base64_decode( $buffer ) ) );
						if ( $fileput_result === false ) {
							echo 'Error #65656. Unable to put file contents to `' . ABSPATH . $unpack_file . '`.<br>';
						}
					}
				}
			}
			if ( !feof( $handle ) ) {
				echo "Error: unexpected fgets() fail.<br>";
			}
			fclose( $handle );
		} else {
			echo 'ERROR #54455: Unable to open importbuddy.php file for reading in packaged data.<br>';
		}
	}
}
die();
?>
<?php /*
###PACKDATA,BEGIN
###PACKDATA,FILE_START,/_importbuddy/importbuddy/history.txt,importbuddy/history.txt
My4wLjAgLSAyMDEyLTAxLTA2IC0gRHVzdGluIEJvbHRvbgo=
###PACKDATA,FILE_END,/_importbuddy/importbuddy/history.txt,importbuddy/history.txt
###PACKDATA,FILE_START,/_importbuddy/importbuddy/history_archived.txt,importbuddy/history_archived.txt
Mi4yLjIgLSAyMDExLTA5LTE5IC0gRHVzdGluIEJvbHRvbgoJSW1wb3J0QnVkZHkgQkVUQToKCQlBQlNQQVRIIG5vdyBpbmNsdWRlcyB0cmFpbGluZyBzbGFzaCB0byBtYXRjaCBXb3JkUHJlc3MuIEZpeGVzIHppcCBkZXRlY3Rpb24gb24gbWFueSBMaW51eCBzeXN0ZW1zLgoJCUZpeGVkIGlzX3dyaXRhYmxlIGJsb2dnaW5nIGxvZyBjcmVhdGlvbiBpbiBsb2coKSBmdW5jdGlvbi4KMi4yLjEgLSAyMDExLTA5LTE2IC0gRHVzdGluIEJvbHRvbgoJSW1wb3J0QnVkZHkgQkVUQTogQWRkZWQgYWRkc2xhc2hlcygpIGludG8gc3RhdHVzIGZ1bmN0aW9uIGZvciBqYXZhc2NyaXB0IHBhc3NpbmcuIFByZXZlbnRlZCBzbGFzaGVzIGZyb20gZGlzYXBwZWFyaW5nLgoyLjAuMCAtIDIwMTEtMDgtMjMgLSBEdXN0aW4gQm9sdG9uCglJbXBvcnRCdWRkeSBCRVRBOiAKCQlHZW5lcmFsIFVJIGNsZWFudXAgYW5kIHBvbGlzaGluZy4KCQlBZGRlZCBTZXJ2ZXIgSW5mby4gcGFnZSdzIFNlcnZlciBDb25maWd1cmF0aW9uIHNlY3Rpb24gd2l0aGluIG5ldyAnU2VydmVyIEluZm9ybWF0aW9uJyBidXR0b24gb24gU3RlcCAxLgoJCUFkZGVkIGFiaWxpdHkgdG8gdXBsb2FkIGJhY2t1cHMgZnJvbSBsb2NhbCBjb21wdXRlciB0byBzZXJ2ZXIgKG9ubHkgaWYgaW1wb3J0YnVkZHkgcGFzc3dvcmQgaXMgc2V0OyBmb3Igc2VjdXJpdHkpLgoJCUFkZGVkIG1vcmUgQWR2YW5jZWQgQ29uZmlndXJhdGlvbiBvcHRpb25zIGZvciBmYWxsYmFjayB1bnppcCBtb2Rlcy4KCQlBZGRlZCBtb3JlIGRldGFpbGVkIHN0YXR1cyBsb2dnaW5nIHRvIGVhY2ggc3RlcCBpbiBhIHRleHRhcmVhLgoJCVJlLWFycmFuZ2VkIGFuZCByZWR1Y2VkIHN0ZXAgY291bnQgZm9yIHN0cmVhbWxpbmluZyBpbXBvcnRzLgoJCVdoZW4gJ3dpcGUgZGF0YWJhc2UnIG9wdGlvbiBpcyBzZWxlY3RlZCB0aGUgbXlzcWwgdGVzdCBub3cgcmVwb3J0cyB3YXJuaW5ncyBhbmQgbm90ZXMgaXQgd2lsbCB3aXBlIGlmIGl0IGZpbmRzIGFuIGV4aXN0aW5nIGRhdGFiYXNlIHJhdGhlciB0aGFuIGVycm9ycy4KCQlSYXRoZXIgdGhhbiBBTEwgcm93cyBvZiBBTEwgZGF0YWJhc2VzIGhhdmluZyBVUkxzIGFuZCBwYXRocyAnbWlncmF0ZWQnLCBrbm93biB0YWJsZXMvcm93cyB3aGVyZSBubyBzZXJpYWxpemVkIGRhdGEgc2hvdWxkIGV2ZXIgc2hvdyB1cCBhcmUgc2tpcHBlZCBmb3IgaW5jcmVhdGUgbWlncmF0aW9uIHBlcmZvcm1hbmNlLiBBbGwgdW5rbm93biB0YWJsZXMvcm93cyBhcmUgc2Nhbm5lZCBhbmQgdXBkYXRlZCBpZiBuZWVkZWQuCgkJTm93IGFsc28gZGVsZXRpbmcgdGhlIGltcG9ydCBkaXJlY3Rvcnkgb24gY2xlYW51cCBzdGVwLgoJCUJyb2tlIG91dCBhbGwgaW1wb3J0YnVkZHkgZnVuY3Rpb25hbGl0eSBpbnRvIHNlcGFyYXRlIGZpbGVzIGluIHRoZSBpbXBvcnRidWRkeSBkaXJlY3RvcnkuIFRoaXMgZGlyZWN0b3J5IGFuZCBjb250ZW50cyBhcmUgJ2V4dHJhY3RlZCcgZnJvbSBpbXBvcnRidWRkeS5waHAgaWYgdGhleSBkbyBub3QgZXhpc3QuCgkJQnJva2Ugb3V0IGRhdGFiYXNlIG1pZ3JhdGlvbiBmdW5jdGlvbnMgaW50byBhIG5ldyBjbGFzcyBmb3IgZWFzaWVyIHVwZGF0aW5nIHRvIGhhbmRsZSBuZXcgZGF0YWJhc2VzIGFuZCBzY2VuYXJpb3MuCgkJTm93IHVzaW5nIFppcEJ1ZGR5IGNsYXNzIGZvciBmdWxsIHppcCBjb21wYXRpYmlsaXR5IGZhbGxiYWNrcyBpbmNsdWRpbmcgWmlwQXJjaGl2ZSAmIFBDTFppcC4gSXNzdWVzICMxMCwgIzM2LgoJCVBDTFppcCBubyBsb25nZXIgdGhyb3dzIHVuZGVmaW5lZCBjb25zdGFudCBub3RpY2VzLiBJc3N1ZSAjMTQuCgkJTm8gbG9uZ2VyIHJlLWVuYWJsZWQgY29tbWVudGVkIG91dCBXUF9TSVRFVVJMICYgV1BfSE9NRSBpbnN0YW5jZXMgaW4gd3AtY29uZmlnLnBocC4gSXNzdWUgIzUyLgoJCUJldHRlciB0ZXN0aW5nIC8gaGFuZGxpbmcgb2Ygc2VyaWFsaXplZCBkYXRhLiBJc3N1ZSAjNjIsICMyOS4KCQlVcGRhdGVkIGltcG9ydGJ1ZGR5IHRvIHVzZSBCYWNrdXBCdWRkeSdzIGdyZWVkeSBzY3JpcHQgbGltaXRzIGZ1bnRpb25hbGl0eS4gSXNzdWUgIzY5LgoJCUltcHJvdmVkIEltcG9ydEJ1ZGR5IGVycm9yIG1lc3NhZ2VzLiBJc3N1ZSAjMzguCgkJQmV0dGVyIHBhcnNpbmcgb2YgY29uZmlndXJhdGlvbnMgaW4gd3AtY29uZmlnLnBocC4gSXNzdWUgIzMzLgoyLjIuMCAtIDIwMTEtMDgtMjMgLSBEdXN0aW4gQm9sdG9uCglVcGRhdGVkIEFCU1BBVEggdG8gdXNlIFdvcmRQcmVzcyBzdHlsZSB3aXRoIHRyYWlsaW5nIHNsYXNoLiBVcGRhdGVkIGFsbCB1c2VzLiBJc3N1ZSAjCglGaXhlZCBhbGwgc2l0ZXMgYmVpbmcgZGV0ZWN0ZWQgYXMgTXVsdGlzaXRlIGluc3RhbmNlcy4gSXNzdWUgIzk3LgoJRml4ZWQgdGFibGUgYnJ1dGVmb3JjaW5nIGRpc3BsYXlpbmcgYFdvcmtpbmdgIHNlZW1pbmdseSBlbmRsZXNzbHkgb24gdmVyeSBsYXJnZSB0YWJsZXMuIENvdWxkIGNhdXNlIG15c3FsIHRvIGdvIGF3YXkgYWxzby4gSXNzdWUgIzk4LgoJUG9zdCBHVUlEcyBhcmUgbm8gbG9uZ2VyIHVwZGF0ZWQgZHVyaW5nIG1pZ3JhdGlvbnMgYXMgcGVyIGh0dHA6Ly9jb2RleC53b3JkcHJlc3Mub3JnL0NoYW5naW5nX1RoZV9TaXRlX1VSTCNJbXBvcnRhbnRfR1VJRF9Ob3RlICAuLiBJc3N1ZSAjOTYuCglBZGRlZCBhZGRzbGFzaGVzKCkgaW50byBpbXBvcnRidWRkeSBzdGF0dXMgZnVuY3Rpb24gZm9yIGphdmFzY3JpcHQgcGFzc2luZy4KMi4yLjEgLSAyMDExLTExLTI2IC0gRHVzdGluIEJvbHRvbgoJaW1wb3J0YnVkZHk6IFByb2JsZW0gd2l0aCBNdWx0aXNpdGUgYmFja3VwIGRldGVjdGlvbiBpbiBpbXBvcnQgY2F1c2luZyBwcm9ibGVtcyBmb3Igc3RhbmRhbG9uZSBtaWdyYXRpb25zIHdpdGggY3VzdG9tIGhvbWUgdXJsLiBJc3N1ZSAjMTMwLgoJaW1wb3J0YnVkZHk6IFByb2JsZW0gd2l0aCBNdWx0aXNpdGUgYmFja3VwIGRldGVjdGlvbiBpbiBpbXBvcnQgY2F1c2luZyBwcm9ibGVtcyBmb3Igc3RhbmRhbG9uZSBtaWdyYXRpb25zIHdpdGggc3BsaXQgdXJsLiBJc3N1ZSAjMTMxLgoJaW1wb3J0YnVkZHk6IEZpeGVkIGFiaWxpdHkgdG8gc2tpcCBkYXRhYmFzZSBpbXBvcnQuIElzc3VlICMxMTQuCglpbXBvcnRidWRkeTogRGF0YWJhc2UgdGVzdCBpbmNvcnJlY3RseSBzdGF0ZWQgdGhhdCB0aGUgZGF0YWJhc2Ugd291bGQgYmUgd2lwZWQgZXZlbiB3aGVuIHdpcGluZyBpcyBub3QgZW5hYmxlZC4gSXNzdWUgIzEwMy4KCWltcG9ydGJ1ZGR5OiBFeHBsaWNpdGx5IHNldHRpbmcgUEhQIHRpbWV6b25lIHRvIGF2b2lkIHdhcm5pbmdzLiBJc3N1ZSAjMTMyLgoyLjIuMyAtIDIwMTItMDEtMDYgLSBEdXN0aW4gQm9sdG9uCglTcGxpdCBVUkwgbWlncmF0aW9ucyBtb2RpZmllZCB0byB1cGRhdGUgYm90aCBzaXRlIFVSTCBhbmQgaG9tZSBVUkwgaW4gdGhlIHByb3BlciBvcmRlciB3aGVuIGRvaW5nIG1hc3MgcmVwbGFjZW1lbnRzLgoJRml4ZWQgcHJlZ19yZXBsYWNlIGJhY2tyZWZlcmVuY2UgaXNzdWUgd2l0aCB3cC1jb25maWcgcGFzc3dvcmQgcmVwbGFjZW1lbnQuIE5vdyBmaWx0ZXJpbmcgcGFzc3dvcmQgdGhyb3VnaCBwcmVnX3JlcGxhY2VfYmFjaygpLg==
###PACKDATA,FILE_END,/_importbuddy/importbuddy/history_archived.txt,importbuddy/history_archived.txt
###PACKDATA,FILE_START,/_importbuddy/importbuddy/index.php,importbuddy/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/_importbuddy/importbuddy/index.php,importbuddy/index.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/init.php,importbuddy/init.php
PD9waHAKLyoqCiAqCiAqCVBsdWdpbiBOYW1lOiBJbXBvcnRCdWRkeQogKglQbHVnaW4gVVJJOiBodHRwOi8vcGx1Z2luYnVkZHkuY29tLwogKglEZXNjcmlwdGlvbjogQmFja3VwQnVkZHkgSW1wb3J0ZXIKICoJVmVyc2lvbjogMS4wLjIKICoJQXV0aG9yOiBEdXN0aW4gQm9sdG9uCiAqCUF1dGhvciBVUkk6IGh0dHA6Ly9kdXN0aW5ib2x0b24uY29tLwogKgogKglJbnN0YWxsYXRpb246CiAqIAogKgkxLiBEb3dubG9hZCBhbmQgdW56aXAgdGhlIGxhdGVzdCByZWxlYXNlIHppcCBmaWxlLgogKgkyLiBJZiB5b3UgdXNlIHRoZSBXb3JkUHJlc3MgcGx1Z2luIHVwbG9hZGVyIHRvIGluc3RhbGwgdGhpcyBwbHVnaW4gc2tpcCB0byBzdGVwIDQuCiAqCTMuIFVwbG9hZCB0aGUgZW50aXJlIHBsdWdpbiBkaXJlY3RvcnkgdG8geW91ciBgL3dwLWNvbnRlbnQvcGx1Z2lucy9gIGRpcmVjdG9yeS4KICoJNC4gQWN0aXZhdGUgdGhlIHBsdWdpbiB0aHJvdWdoIHRoZSAnUGx1Z2lucycgbWVudSBpbiBXb3JkUHJlc3MgQWRtaW5pc3RyYXRpb24uCiAqIAogKglVc2FnZToKICogCiAqCTEuIE5hdmlnYXRlIHRvIHRoZSBuZXcgcGx1Z2luIG1lbnUgaW4gdGhlIFdvcmRwcmVzcyBBZG1pbmlzdHJhdGlvbiBQYW5lbC4KICoKICoJTk9URTogRE8gTk9UIEVESVQgVEhJUyBPUiBBTlkgT1RIRVIgUExVR0lOIEZJTEVTLiBOTyBVU0VSLUNPTkZJR1VSQUJMRSBPUFRJT05TIFdJVEhJTi4KICovCgplcnJvcl9yZXBvcnRpbmcoIEVfRVJST1IgfCBFX1dBUk5JTkcgfCBFX1BBUlNFIHwgRV9OT1RJQ0UgKTsgLy8gSElHSApkZWZpbmUoICdQQl9TVEFOREFMT05FJywgdHJ1ZSApOwpkZWZpbmUoICdQQl9JTVBPUlRCVUREWScsIHRydWUgKTsKCiRwbHVnaW5idWRkeV9zZXR0aW5ncyA9IGFycmF5KAoJCQkJJ3NsdWcnCQkJCT0+CQknYmFja3VwYnVkZHknLAoJCQkJJ3BocF9taW5pbXVtJwkJPT4JCSc1LjInLAoJCQkJJ3NlcmllcycJCQk9PgkJJycsCgkJCQknZGVmYXVsdF9vcHRpb25zJwk9PgkJYXJyYXkoCgkJCQkJCQkJCQkJCSdiYl92ZXJzaW9uJwkJCQk9PglQQl9CQl9WRVJTSU9OLAkvLyBCQiB2ZXJzaW9uIHRvIGJlIGZpbGxlZCBpbiBvbiBkb3dubG9hZC4KCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCSdkaXNwbGF5X21vZGUnCQkJCT0+CSdub3JtYWwnLCAvLyBub3JtYWwsIGVtYmVkLCBvciBhcGkKCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCSdzdGVwJwkJCQkJCT0+CTEsCgkJCQkJCQkJCQkJCSdtYXhfZXhlY3V0aW9uX3RpbWUnCQk9PgkzMCwKCQkJCQkJCQkJCQkJJ2RhdF9maWxlJwkJCQkJPT4JYXJyYXkoKSwKCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCSdza2lwX2ZpbGVzJwkJCQk9PglmYWxzZSwKCQkJCQkJCQkJCQkJJ3dpcGVfZGF0YWJhc2UnCQkJCT0+CWZhbHNlLAoJCQkJCQkJCQkJCQknd2lwZV9kYXRhYmFzZV9hbGwnCQkJPT4JZmFsc2UsCgkJCQkJCQkJCQkJCSdza2lwX2RhdGFiYXNlX2ltcG9ydCcJCT0+CWZhbHNlLAoJCQkJCQkJCQkJCQknbXlzcWxidWRkeV9jb21wYXRpYmlsaXR5Jwk9PglmYWxzZSwKCQkJCQkJCQkJCQkJJ3NraXBfZGF0YWJhc2VfbWlncmF0aW9uJwk9PglmYWxzZSwKCQkJCQkJCQkJCQkJJ3NraXBfZGF0YWJhc2VfYnJ1dGVmb3JjZScJPT4JZmFsc2UsCgkJCQkJCQkJCQkJCSdza2lwX2h0YWNjZXNzJwkJCQk9PglmYWxzZSwKCQkJCQkJCQkJCQkJJ2ZvcmNlX2NvbXBhdGliaWxpdHlfbWVkaXVtJz0+CWZhbHNlLAoJCQkJCQkJCQkJCQknZm9yY2VfY29tcGF0aWJpbGl0eV9zbG93Jwk9PglmYWxzZSwKCQkJCQkJCQkJCQkJJ2ZvcmNlX2hpZ2hfc2VjdXJpdHknCQk9PglmYWxzZSwKCQkJCQkJCQkJCQkJJ3Nob3dfcGhwX3dhcm5pbmdzJwkJCT0+CWZhbHNlLAoJCQkJCQkJCQkJCQknaWdub3JlX3NxbF9lcnJvcnMnCQkJPT4JZmFsc2UsCgkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQknc2l0ZXVybCcJCQkJCT0+CScnLAoJCQkJCQkJCQkJCQknaG9tZScJCQkJCQk9PgknJywKCQkJCQkJCQkJCQkJJ2RvbWFpbicJCQkJCT0+CScnLAkJLy8JKG11bHRpc2l0ZSkKCQkJCQkJCQkJCQkJJ2RiX3NlcnZlcicJCQkJCT0+CScnLAoJCQkJCQkJCQkJCQknZGJfdXNlcicJCQkJCT0+CScnLAoJCQkJCQkJCQkJCQknZGJfcGFzc3dvcmQnCQkJCT0+CScnLAoJCQkJCQkJCQkJCQknZGJfbmFtZScJCQkJCT0+CScnLAoJCQkJCQkJCQkJCQknZGJfcHJlZml4JwkJCQkJPT4JJycsCgkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQknbG9nX2xldmVsJwkJCQkJPT4JJzEnLAkJCQkJCS8vIExldmVsIG9mIGVycm9yIGxvZ2dpbmcuCgkJCQkJCQkJCQkJKSwKCQkJCSdtb2R1bGVzJwkJCT0+CQlhcnJheSgKCQkJCQkJCQkJCQkJJ3VwZGF0ZXInCQkJCT0+CWZhbHNlLAkJCQkJCS8vIExvYWQgUGx1Z2luQnVkZHkgYXV0b21hdGljIHVwZ3JhZGVzLgoJCQkJCQkJCQkJCQknZG93bnNpemVyJwkJCQk9PglmYWxzZSwJCQkJCQkvLyBMb2FkIHRodW1ibmFpbCBpbWFnZSBkb3duc2l6ZXIuCgkJCQkJCQkJCQkJCSdmaWxlc3lzdGVtJwkJCT0+CXRydWUsCQkJCQkJLy8gRmlsZSBzeXN0ZW0gaGVscGVyIG1ldGhvZHMuCgkJCQkJCQkJCQkJCSdmb3JtYXQnCQkJCT0+CXRydWUsCQkJCQkJLy8gVGV4dCAvIGRhdGEgZm9ybWF0dGluZyBoZWxwZXIgbWV0aG9kcy4KCQkJCQkJCQkJCQkpCgkJCSk7CgoKCi8vICRzZXR0aW5ncyBpcyBleHBlY3RlZCB0byBiZSBwb3B1bGF0ZWQgcHJpb3IgdG8gaW5jbHVkaW5nIFBsdWdpbkJ1ZGR5IGZyYW1ld29yay4gRG8gbm90IGVkaXQgYmVsb3cuCnJlcXVpcmUoIGRpcm5hbWUoIF9fRklMRV9fICkgLiAnL3BsdWdpbmJ1ZGR5L19wbHVnaW5idWRkeS5waHAnICk7CgoKPz4K
###PACKDATA,FILE_END,/_importbuddy/importbuddy/init.php,importbuddy/init.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/init_admin.php,importbuddy/init_admin.php
PD9waHAKcGJfYmFja3VwYnVkZHk6OmxvYWQoKTsKCi8vICoqKioqKioqKiogQUNUSU9OUyAoYWRtaW4pICoqKioqKioqKioKCgoKLy8gKioqKioqKioqKiBBSkFYIChhZG1pbikgKioqKioqKioqKgoKCgovLyAqKioqKioqKioqIERBU0hCT0FSRCAoYWRtaW4pICoqKioqKioqKioKCgoKLy8gKioqKioqKioqKiBGSUxURVJTIChhZG1pbikgKioqKioqKioqKgoKCgovLyAqKioqKioqKioqIFBBR0VTIChhZG1pbikgKioqKioqKioqKgoKCgovLyAqKioqKioqKioqIExJQlJBUklFUyAmIENMQVNTRVMgKGFkbWluKSAqKioqKioqKioqCnJlcXVpcmVfb25jZSggJ2NsYXNzZXMvY29yZS5waHAnICk7CnBiX2JhY2t1cGJ1ZGR5OjokY2xhc3Nlc1snY29yZSddID0gbmV3IHBiX2JhY2t1cGJ1ZGR5X2NvcmUoKTsKCnJlcXVpcmVfb25jZSggJ2NsYXNzZXMvaW1wb3J0LnBocCcgKTsKcGJfYmFja3VwYnVkZHk6OiRjbGFzc2VzWydpbXBvcnQnXSA9IG5ldyBwYl9iYWNrdXBidWRkeV9pbXBvcnQoKTsKCgovLyAqKioqKioqKioqIE9USEVSIChhZG1pbikgKioqKioqKioqKgoKCgo/Pg==
###PACKDATA,FILE_END,/_importbuddy/importbuddy/init_admin.php,importbuddy/init_admin.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/init_global.php,importbuddy/init_global.php
PD9waHAKCmlmICggcGJfYmFja3VwYnVkZHk6Ol9HRVQoICdkaXNwbGF5X21vZGUnICkgPT0gJ2VtYmVkJyApIHsKCXBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snZGlzcGxheV9tb2RlJ10gPSAnZW1iZWQnOwoJcGJfYmFja3VwYnVkZHk6OnNhdmUoKTsKfQoKLy8gKioqKioqKioqKiBBQ1RJT05TIChnbG9iYWwpICoqKioqKioqKioKCgoKLy8gKioqKioqKioqKiBBSkFYIChnbG9iYWwpICoqKioqKioqKioKCgoKLy8gKioqKioqKioqKiBDUk9OIChnbG9iYWwpICoqKioqKioqKioKCgoKLy8gKioqKioqKioqKiBGSUxURVJTIChnbG9iYWwpICoqKioqKioqKioKCgoKLy8gKioqKioqKioqKiBXSURHRVRTIChnbG9iYWwpICoqKioqKioqKioKCgoKPz4=
###PACKDATA,FILE_END,/_importbuddy/importbuddy/init_global.php,importbuddy/init_global.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/init_public.php,importbuddy/init_public.php
PD9waHAKCgoKLy8gKioqKioqKioqKiBBQ1RJT05TIChwdWJsaWMpICoqKioqKioqKioKCgoKLy8gKioqKioqKioqKiBBSkFYIChwdWJsaWMpICoqKioqKioqKioKCgoKLy8gKioqKioqKioqKiBGSUxURVJTIChwdWJsaWMpICoqKioqKioqKioKCgoKLy8gKioqKioqKioqKiBTSE9SVENPREVTIChwdWJsaWMpICoqKioqKioqKioKCgoKPz4K
###PACKDATA,FILE_END,/_importbuddy/importbuddy/init_public.php,importbuddy/init_public.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/license.txt,importbuddy/license.txt

###PACKDATA,FILE_END,/_importbuddy/importbuddy/license.txt,importbuddy/license.txt
###PACKDATA,FILE_START,/_importbuddy/importbuddy/readme.txt,importbuddy/readme.txt
ICogV2Vic2l0ZTogaHR0cDovL3BsdWdpbmJ1ZGR5LmNvbQogKgogKiBJbnN0YWxsYXRpb246CiAqIAogKiAxLiBEb3dubG9hZCBhbmQgdW56aXAgdGhlIGxhdGVzdCByZWxlYXNlIHppcCBmaWxlCiAqIDIuIElmIHlvdSB1c2UgdGhlIFdvcmRQcmVzcyBwbHVnaW4gdXBsb2FkZXIgdG8gaW5zdGFsbCB0aGlzIHBsdWdpbiBza2lwIHRvIHN0ZXAgNC4KICogMy4gVXBsb2FkIHRoZSBlbnRpcmUgcGx1Z2luIGRpcmVjdG9yeSB0byB5b3VyIGAvd3AtY29udGVudC9wbHVnaW5zL2AgZGlyZWN0b3J5CiAqIDQuIEFjdGl2YXRlIHRoZSBwbHVnaW4gdGhyb3VnaCB0aGUgJ1BsdWdpbnMnIG1lbnUgaW4gV29yZFByZXNzIEFkbWluaXN0cmF0aW9uCiAqIAogKiBVc2FnZToKICogCiAqIDEuIE5hdmlnYXRlIHRvIHRoZSBuZXcgbWVudSBmb3IgdGhpcyBwbHVnaW4gaW4gdGhlIFdvcmRwcmVzcyBBZG1pbmlzdHJhdGlvbiBQYW5lbAogKiAyLiBTZWxlY3QgJ0dldHRpbmcgU3RhcnRlZCcgZm9yIGluc3RydWN0aW9ucyBhbmQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbi4KICo=
###PACKDATA,FILE_END,/_importbuddy/importbuddy/readme.txt,importbuddy/readme.txt
###PACKDATA,FILE_START,/_importbuddy/importbuddy/classes/auth.php,importbuddy/classes/auth.php
PD9waHAKY2xhc3MgQXV0aCB7CgkKCQoJCgljb25zdCBNQVhfTE9HSU5fQVRURU1QVFNfQUxMT1dFRCA9IDQ7IC8vIE1heGltdW0gbnVtYmVyIG9mIGludmFsaWQgbG9naW4gYXR0ZW1wdHMgYmVmb3JlIGxvY2tpbmcgaW1wb3J0YnVkZHkuCgljb25zdCBSRVNFVF9ERUZBVUxUU19PTl9JTlZBTElEX0xPR0lOID0gZmFsc2U7IC8vIFdoZXRoZXIgb3Igbm90IHJlc2V0IGFsbCBzZXR0aW5ncy9vcHRpb25zIGJhY2sgdG8gZGVmYXVsdHMgb24gbG9naW4gZmFpbHVyZS4KCXByaXZhdGUgc3RhdGljICRfYXV0aGVudGljYXRlZCA9IGZhbHNlOyAvLyBXaGV0aGVyIHVzZXIgaXMgdmFsaWRseSBhdXRoZW50aWNhdGVkIG9yIG5vdC4KCXByaXZhdGUgc3RhdGljICRfY2hlY2tlZCA9IGZhbHNlOyAvLyBXaGV0aGVyIGNoZWNrKCkgaGFzIGJlZW4gcnVuIHlldC4KCQoJCgkKCS8qIGNoZWNrKCkKCSAqCgkgKiBDaGVjayBhdXRoZW50aWNhdGlvbiBiYXNlZCBvbiBmb3JtIGRhdGEgc3VibWl0dGVkLiBUaGlzIG9ubHkgbmVlZHMgdG8gYmUgcnVuIG9uY2UuIFVzZSBpc19hdXRoZW50aWNhdGVkKCkgdG8gZGV0ZXJtaW5lIGF1dGggc3RhdHVzLgoJICoKCSAqIEBwYXJhbQlmb3JjZV9jaGVjawkJYm9vbAlJZiB0cnVlIHRoZW4gd2lsbCByZS1jaGVjayBldmVuIGlmIGNoZWNrKCkgaGFzIGFscmVhZHkgYmVlbiBydW4gdGhpcyBzZXNzaW9uLgoJICoKCSAqLwoJcHVibGljIHN0YXRpYyBmdW5jdGlvbiBjaGVjayggJGZvcmNlX2NoZWNrID0gZmFsc2UgKSB7CgkJCgkJaWYgKCAoIHRydWUgPT09IHNlbGY6OiRfY2hlY2tlZCApICYmICggJGZvcmNlX2NoZWNrID09PSBmYWxzZSApICkgeyAvLyBTa2lwIGNoZWNraW5nIGlmIGFscmVhZHkgc2tpcHBlZCB1bmxlc3MgZm9yY2luZy4KCQkJcmV0dXJuIHNlbGY6OiRfYXV0aGVudGljYXRlZDsKCQl9CgkJCgkJJGxvZ2luX2F0dGVtcHRfZmlsZSA9IEFCU1BBVEggLiAnaW1wb3J0YnVkZHkvX2xvZ2luX2F0dGVtcHRzLnBocCc7CgkJJGxvZ2luX2F0dGVtcHRzID0gMTsKCQlpZiAoIGZpbGVfZXhpc3RzKCAkbG9naW5fYXR0ZW1wdF9maWxlICkgKSB7CgkJCSRsb2dpbl9hdHRlbXB0cyA9IEBmaWxlX2dldF9jb250ZW50cyggJGxvZ2luX2F0dGVtcHRfZmlsZSApOwoJCX0KCQlpZiAoIGZhbHNlICE9PSAkbG9naW5fYXR0ZW1wdHMgKSB7CgkJCSRsb2dpbl9hdHRlbXB0cyA9IHRyaW0oIHN0cl9yZXBsYWNlKCAnPD9waHAgZGllKCk7ID8+JywgJycsICRsb2dpbl9hdHRlbXB0cyApICk7CgkJCWlmICggJGxvZ2luX2F0dGVtcHRzID4gc2VsZjo6TUFYX0xPR0lOX0FUVEVNUFRTX0FMTE9XRUQgKSB7CgkJCQlkaWUoICdBY2Nlc3MgRGVuaWVkLiBNYXhpbXVtIGxvZ2luIGF0dGVtcHRzIGV4Y2VlZGVkLiBZb3UgbXVzdCBkZWxldGUgdGhlIGZpbGUgIl9sb2dpbl9hdHRlbXB0cy5waHAiIGluIHRoZSBpbXBvcnRidWRkeSBkaXJlY3Rvcnkgb24geW91ciBzZXJ2ZXIgdG8gdW5sb2NrIHRoaXMgSW1wb3J0QnVkZHkgdG8gYWxsb3cgaXQgdG8gY29udGludWUuJyApOwoJCQl9CgkJfQoJCQoJCSRhY3R1YWxfcGFzc19oYXNoID0gUEJfUEFTU1dPUkQ7CgkJaWYgKCAoICcjUEFTU1dPUkQjJyA9PSAkYWN0dWFsX3Bhc3NfaGFzaCApIHx8ICggJycgPT0gJGFjdHVhbF9wYXNzX2hhc2ggKSApIHsgZGllKCAnRXJyb3IgIzg0NTc4NDU5NzQ1LiBBIHBhc3N3b3JkIG11c3QgYmUgc2V0LicgKTsgfQoJCQoJCWlmICggcGJfYmFja3VwYnVkZHk6Ol9QT1NUKCAncGFzc3dvcmQnICkgIT0gJycgKSB7CgkJCSRzdXBwbGllZF9wYXNzX2hhc2ggPSBtZDUoIHBiX2JhY2t1cGJ1ZGR5OjpfUE9TVCggJ3Bhc3N3b3JkJyApICk7CgkJfSBlbHNlIHsKCQkJaWYgKCBwYl9iYWNrdXBidWRkeTo6X0dFVCggJ3YnICkgIT0gJycgKSB7IC8vIEhhc2ggc3VibWl0dGVkIGJ5IG1hZ2ljIG1pZ3JhdGlvbi4KCQkJCSRzdXBwbGllZF9wYXNzX2hhc2ggPSBwYl9iYWNrdXBidWRkeTo6X0dFVCggJ3YnICk7CgkJCX0gZWxzZSB7IC8vIE5vcm1hbCBmb3JtIHN1Ym1pdHRlZCBoYXNoLgoJCQkJaWYgKCBwYl9iYWNrdXBidWRkeTo6X1BPU1QoICdwYXNzX2hhc2gnICkgIT0gJycgKSB7CgkJCQkJJHN1cHBsaWVkX3Bhc3NfaGFzaCA9IHBiX2JhY2t1cGJ1ZGR5OjpfUE9TVCggJ3Bhc3NfaGFzaCcgKTsKCQkJCX0gZWxzZWlmICggcGJfYmFja3VwYnVkZHk6Ol9QT1NUKCAncGJfYmFja3VwYnVkZHlfcGFzc19oYXNoJyApICE9ICcnICkgewoJCQkJCSRzdXBwbGllZF9wYXNzX2hhc2ggPSBwYl9iYWNrdXBidWRkeTo6X1BPU1QoICdwYl9iYWNrdXBidWRkeV9wYXNzX2hhc2gnICk7CgkJCQl9IGVsc2UgewoJCQkJCSRzdXBwbGllZF9wYXNzX2hhc2ggPSAnJzsKCQkJCX0KCQkJfQoJCX0KCQkKCQlpZiAoICRzdXBwbGllZF9wYXNzX2hhc2ggPT0gJGFjdHVhbF9wYXNzX2hhc2ggKSB7CgkJCXNlbGY6OiRfYXV0aGVudGljYXRlZCA9IHRydWU7CgkJfSBlbHNlIHsgLy8gSW5jb3JyZWN0IGhhc2guIFJlc2V0IHNldHRpbmdzICYgdHJhY2sgYXR0ZW1wdHMuCgkJCWlmICggJycgIT0gJHN1cHBsaWVkX3Bhc3NfaGFzaCApIHsgLy8gRG9udCBjb3VudCBibGFuayBoYXNoIGFzIGFuIGF0dGVtcHQuCgkJCQlpZiAoIHRydWUgPT09IHNlbGY6OlJFU0VUX0RFRkFVTFRTX09OX0lOVkFMSURfTE9HSU4gKSB7CgkJCQkJcGJfYmFja3VwYnVkZHk6OnJlc2V0X2RlZmF1bHRzKCk7CgkJCQl9CgkJCQlpZiAoIGZhbHNlICE9PSAkbG9naW5fYXR0ZW1wdHMgKSB7CgkJCQkJZ2xvYmFsICRwYl9sb2dpbl9hdHRlbXB0czsKCQkJCQkkcGJfbG9naW5fYXR0ZW1wdHMgPSAkbG9naW5fYXR0ZW1wdHM7CgkJCQkJQGZpbGVfcHV0X2NvbnRlbnRzKCAkbG9naW5fYXR0ZW1wdF9maWxlLCAnPD9waHAgZGllKCk7ID8+JyAuICggJGxvZ2luX2F0dGVtcHRzICsgMSApICk7CgkJCQl9CgkJCX0KCQl9CgkJCgkJc2VsZjo6JF9jaGVja2VkID0gdHJ1ZTsKCQkKCQlyZXR1cm4gc2VsZjo6JF9hdXRoZW50aWNhdGVkOwoJCQoJfSAvLyBFbmQgY2hlY2soKS4KCQoJCgkKCS8qIGlzX2F1dGhlbnRpY2F0ZWQoKQoJICoKCSAqIERldGVybWluZSB3aGV0aGVyIHVzZXIgaXMgZnVsbHkgYXV0aGVudGljYXRlZCBvciBub3QuCgkgKgoJICogQHJldHVybgkJYm9vbAkJVHJ1ZSBpZiBmdWxseSBhdXRoZW50aWNhdGVkLCBvdGhlcndpc2UgZmFsc2UuCgkgKgoJICovCglwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGlzX2F1dGhlbnRpY2F0ZWQoKSB7CgkJCgkJcmV0dXJuIHNlbGY6OiRfYXV0aGVudGljYXRlZDsKCQkKCX0gLy8gRW5kIGF1dGhlbnRpY2F0ZWQoKS4KCQoJCgkKCS8qIHJlcXVpcmVfYXV0aGVudGljYXRpb24oKQoJICoKCSAqIFJlcXVpcmVzIHZhbGlkIGF1dGhlbnRpY2F0aW9uIHRvIGFsbG93IHByb2NlZWRpbmcuIGRpZSgpIGlmIG5vdCBsb2dnZWQgaW4uCgkgKgoJICovCglwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHJlcXVpcmVfYXV0aGVudGljYXRpb24oKSB7CgkJCgkJc2VsZjo6Y2hlY2soKTsKCQlpZiAoIHRydWUgPT09IHNlbGY6OmlzX2F1dGhlbnRpY2F0ZWQoKSApIHsKCQkJcmV0dXJuIHRydWU7CgkJfSBlbHNlIHsKCQkJZGllKCAnQWNjZXNzIERlbmllZC4gWW91IG11c3QgbG9nIGluIGZpcnN0LiBQbGVhc2UgcmV0dXJuIHRvIFN0ZXAgMSB0byBhdXRoZW50aWNhdGUuJyApOwoJCX0KCQkKCX0gLy8gRW5kIHJlcXVpcmVfYXV0aG9yaXphdGlvbigpOwoJCn0gLy8gRW5kIGNsYXNzLgoKCg==
###PACKDATA,FILE_END,/_importbuddy/importbuddy/classes/auth.php,importbuddy/classes/auth.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/controllers/ajax.php,importbuddy/controllers/ajax.php
PD9waHAKY2xhc3MgcGJfYmFja3VwYnVkZHlfYWpheCBleHRlbmRzIHBiX2JhY2t1cGJ1ZGR5X2FqYXhjb3JlIHsKfQo/Pg==
###PACKDATA,FILE_END,/_importbuddy/importbuddy/controllers/ajax.php,importbuddy/controllers/ajax.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/css/style.css,importbuddy/css/style.css

###PACKDATA,FILE_END,/_importbuddy/importbuddy/css/style.css,importbuddy/css/style.css
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/bb-logo.png,importbuddy/images/bb-logo.png

###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/bb-logo.png,importbuddy/images/bb-logo.png
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/bluebutton.jpg,importbuddy/images/bluebutton.jpg

###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/bluebutton.jpg,importbuddy/images/bluebutton.jpg
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/bullet_error.png,importbuddy/images/bullet_error.png
iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhlJREFUeNrEk7tuE0EUhv/ZC7aBOJItItkoOGBjJSkR4REsFyBEkVQUEBcoDQ0SJQ15ApooRVJQJi+AoKFDSCCiiODEBmyMkIXiS3bjy3pn5gyzhgY2XQr+0ezsnjn7aeb8M0wphdPIwCllBQ/1pAQWoJiRBNGiMuxl2HZeKQk5HFao720S8e3RcNj2PR9Tz1/9DfijGXBa45OJIkulYQoPjOmoGV2gem1B/mzc1l8rutdP2kJCCVrnqemilcvBdA7BJpNg8SSsbhPR2TmwS/kiSVoPckMA8vmSP5EoWOkU8Ok95Oc94OY94NZ9+OUyxM47xKYzYMl0QXKxFAJI0ygZqYtA8zvE0RGUGfk9Gzik32WrDfGtjlgmC2kYpRBAmeasFbUhfjR0IW0QJx2kcYIcCZCO+bUaDDs6zg25IIWEkgTF9ah/VkIHR6PAFQ1Tek73oEntis4JAfhxb9/s+deNC2mISgWKWZDPVmFwoRkGRH+AM9mr4EMPfq+3H9qC7zgbg+oBWGoGiMYhXBfmo6dgj1fhtVzgXBxm5jK65R34x85GaAUE2hrUq3dwNlY4f+0GWO0LnIclXUNCZG4e9pUcOge76FZ2X+rlbYUAWh1J8kH3w9s177BVnMjOI5KYGpvAJUfzzWs41Y8vdLVWmGF1TgIEqhOJu25lb9FtfF1mlpVXROOj7PfdTQ3b1uVo/3sX2H+/jb8EGAB6SgK2ePksLgAAAABJRU5ErkJggg==
###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/bullet_error.png,importbuddy/images/bullet_error.png
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/bullet_go.png,importbuddy/images/bullet_go.png
iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAEsSURBVDjLY/j//z8DJZhhmBuQvdj8a+p8w//xc3U5yTIgeb7h18bNUf/DZ2j8958qz0nQgPyltv9zF5v/TV9o/Ddxrv7fmvWh/1ednvi/ZLX/f9d+8b+23YI8eA0AOvn/hnPT/q89OwWsccXpCf8n7Cn5v/B41/+MpW7/TdvZ/+o2M/LjNADoZLDmvl35/zt3ZP9v3Zb2v2Fz4v+mren/Zxxq/h+zwOa/aj3DH5wGRM/W/L/y1IT/S0/0/l94rOv/vKMdQEOy/k8/1PQ/banHf8VahlfSlQwGOA0InK74z3Oi9D/nftF/1t38/+LmW/2fdrDhf9Jit//ytQzPJSsZtEiKBe1mxq/xC53/y1czPAFqVic5GoFO/ipXzfxftJJBkeyUKFzOwDm48wIAh5XH+g7drOwAAAAASUVORK5CYII=
###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/bullet_go.png,importbuddy/images/bullet_go.png
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/button-grad.png,importbuddy/images/button-grad.png
iVBORw0KGgoAAAANSUhEUgAAAAUAAAAeCAYAAADkftS9AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAACF0RVh0U29mdHdhcmUATWFjcm9tZWRpYSBGaXJld29ya3MgNC4w6iYndQAAABZ0RVh0Q3JlYXRpb24gVGltZQAxMS8xNy8wONpsdXEAAABGSURBVHicY9Ts2fWfAQ2wMPzHEGNg+f//H6Ygwz9sgthU/sdmJlbtlFpEgpOwWoTszv+Dz0lUtOg/ukoSfATT+5+gSkxBAOqCS3dTeDKPAAAAAElFTkSuQmCC
###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/button-grad.png,importbuddy/images/button-grad.png
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/collapsed.gif,importbuddy/images/collapsed.gif
R0lGODlhBgAHALMKAM7Ozr6+vq6urp6enoWFhaampt7e3u/v742NjX19ff///wAAAAAAAAAAAAAAAAAAACH5BAEAAAoALAAAAAAGAAcAAAQVEAFFVUrD0HvF4RfCEYGVFAeFaFUEADs=
###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/collapsed.gif,importbuddy/images/collapsed.gif
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/expanded.gif,importbuddy/images/expanded.gif
R0lGODlhBwAGALMKAM7Ozr6+vq6urp6enoWFhaampt7e3u/v742NjX19ff///wAAAAAAAAAAAAAAAAAAACH5BAEAAAoALAAAAAAHAAYAAAQWEKU5kaETqEKHUgcxGZ8SJEL5IccXAQA7
###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/expanded.gif,importbuddy/images/expanded.gif
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/gray-grad.png,importbuddy/images/gray-grad.png
iVBORw0KGgoAAAANSUhEUgAAAAUAAAAfCAIAAACgQJBPAAAAA3NCSVQICAjb4U/gAAAACXBIWXMAAAsSAAALEgHS3X78AAAAIXRFWHRTb2Z0d2FyZQBNYWNyb21lZGlhIEZpcmV3b3JrcyA0LjDqJid1AAAAFnRFWHRDcmVhdGlvbiBUaW1lADEwLzI0LzA4KQ6r+wAAAClJREFUeJxjfPv2LQMSYPn//z8yn4kBFaDzqa0eXZ5U9QMtT6l5tFYPADsXLPcJwrwLAAAAAElFTkSuQmCC
###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/gray-grad.png,importbuddy/images/gray-grad.png
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/icon_16x16.png,importbuddy/images/icon_16x16.png
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
###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/icon_16x16.png,importbuddy/images/icon_16x16.png
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/icon_32x32.png,importbuddy/images/icon_32x32.png
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
###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/icon_32x32.png,importbuddy/images/icon_32x32.png
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/loading.gif,importbuddy/images/loading.gif
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
###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/loading.gif,importbuddy/images/loading.gif
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/loading_large.gif,importbuddy/images/loading_large.gif

###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/loading_large.gif,importbuddy/images/loading_large.gif
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/pb-logo.png,importbuddy/images/pb-logo.png

###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/pb-logo.png,importbuddy/images/pb-logo.png
###PACKDATA,FILE_START,/_importbuddy/importbuddy/images/white-grad.png,importbuddy/images/white-grad.png
iVBORw0KGgoAAAANSUhEUgAAAAUAAAAeCAYAAADkftS9AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAACF0RVh0U29mdHdhcmUATWFjcm9tZWRpYSBGaXJld29ya3MgNC4w6iYndQAAABZ0RVh0Q3JlYXRpb24gVGltZQAxMS8xNy8wONpsdXEAAAAlSURBVHicY/z///9/BjTAhC7AwMDAwIJFIXbBoaJ9qLhz+IUSAIMMOibeSzRBAAAAAElFTkSuQmCC
###PACKDATA,FILE_END,/_importbuddy/importbuddy/images/white-grad.png,importbuddy/images/white-grad.png
###PACKDATA,FILE_START,/_importbuddy/importbuddy/js/importbuddy.js,importbuddy/js/importbuddy.js
alF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHsKCWpRdWVyeSh3aW5kb3cpLmxvYWQoZnVuY3Rpb24oKXsKCQlpZiAoIGpRdWVyeSgnI3BiX2ltcG9ydGJ1ZGR5X3dvcmtpbmcnKS5pcygnOnZpc2libGUnKSApIHsKCQkJalF1ZXJ5KCcjcGJfaW1wb3J0YnVkZHlfd29ya2luZycpLnJlcGxhY2VXaXRoKAoJCQkJalF1ZXJ5KCcjcGJfaW1wb3J0YnVkZHlfYmxhbmthbGVydCcpLmh0bWwoKS5yZXBsYWNlKCAnI1RJVExFIycsICdQSFAgVGltZW91dCBvciBGYXRhbCBFcnJvciBPY2N1cnJlZCcgKS5yZXBsYWNlKCAnI01FU1NBR0UjJywgJ1RoZSBwYWdlIGRpZCBub3QgZmluaXNoIGxvYWRpbmcgYXMgZXhwZWN0ZWQuICBUaGUgbW9zdCBjb21tb24gY2F1c2UgZm9yIHRoaXMgaXMgdGhlIFBIUCBwcm9jZXNzIHRha2luZyBtb3JlIHRpbWUgdGhhbiBpdCBoYXMgYmVlbiBhbGxvd2VkIGJ5IHlvdXIgaG9zdCAocGhwLmluaSBzZXR0aW5nIDxpPm1heF9leGVjdXRpb25fdGltZTwvaT4pLiBJZiBhIFBIUCBlcnJvciBpcyBkaXNwbGF5ZWQgYWJvdmUgdGhpcyBjYW4gYWxzbyBjYXVzZSB0aGlzIGVycm9yLicgKQoJCQkpOwoJCX0KCX0pOwp9KTsKCmpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7CglqUXVlcnkoJy5wbHVnaW5idWRkeV90aXAnKS50b29sdGlwKHsKCQl0cmFjazogdHJ1ZSwKCQlkZWxheTogMCwKCQlzaG93VVJMOiBmYWxzZSwKCQlzaG93Qm9keTogIiAtICIsCgkJZmFkZTogMjUwCgl9KTsKCQoJalF1ZXJ5KCcudG9nZ2xlJykuY2xpY2soZnVuY3Rpb24oZSkgewoJCWpRdWVyeSggJyN0b2dnbGUtJyArIGpRdWVyeSh0aGlzKS5hdHRyKCdpZCcpICkuc2xpZGVUb2dnbGUoKTsKCX0pOwoJCglqUXVlcnkoJy5vcHRpb25fdG9nZ2xlJykuY2hhbmdlKGZ1bmN0aW9uKGUpIHsKCQlpZiAoalF1ZXJ5KHRoaXMpLmF0dHIoJ2NoZWNrZWQnKSkgewoJCQlqUXVlcnkoJy4nICsgalF1ZXJ5KHRoaXMpLmF0dHIoJ2lkJykgKyAnX3RvZ2dsZScgKS5zbGlkZVRvZ2dsZSgpOwoJCX0gZWxzZSB7CgkJCWpRdWVyeSgnLicgKyBqUXVlcnkodGhpcykuYXR0cignaWQnKSArICdfdG9nZ2xlJyApLnNsaWRlVG9nZ2xlKCk7CgkJfQoJfSk7CgkKCQoJalF1ZXJ5KCcjcGx1Z2luYnVkZHktdGFicycpLnRhYnMoKTsKfSk7
###PACKDATA,FILE_END,/_importbuddy/importbuddy/js/importbuddy.js,importbuddy/js/importbuddy.js
###PACKDATA,FILE_START,/_importbuddy/importbuddy/js/jquery.js,importbuddy/js/jquery.js

###PACKDATA,FILE_END,/_importbuddy/importbuddy/js/jquery.js,importbuddy/js/jquery.js
###PACKDATA,FILE_START,/_importbuddy/importbuddy/js/jquery.leanModal.min.js,importbuddy/js/jquery.leanModal.min.js
Ly8gbGVhbk1vZGFsIHYxLjEgYnkgUmF5IFN0b25lIC0gaHR0cDovL2ZpbmVseXNsaWNlZC5jb20uYXUKLy8gRHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGFuZCBHUEwKCihmdW5jdGlvbigkKXskLmZuLmV4dGVuZCh7bGVhbk1vZGFsOmZ1bmN0aW9uKG9wdGlvbnMpe3ZhciBkZWZhdWx0cz17dG9wOjEwMCxvdmVybGF5OjAuNSxjbG9zZUJ1dHRvbjpudWxsfTt2YXIgb3ZlcmxheT0kKCI8ZGl2IGlkPSdsZWFuX292ZXJsYXknPjwvZGl2PiIpOyQoImJvZHkiKS5hcHBlbmQob3ZlcmxheSk7b3B0aW9ucz0kLmV4dGVuZChkZWZhdWx0cyxvcHRpb25zKTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIG89b3B0aW9uczskKHRoaXMpLmNsaWNrKGZ1bmN0aW9uKGUpe3ZhciBtb2RhbF9pZD0kKHRoaXMpLmF0dHIoImhyZWYiKTskKCIjbGVhbl9vdmVybGF5IikuY2xpY2soZnVuY3Rpb24oKXtjbG9zZV9tb2RhbChtb2RhbF9pZCl9KTskKG8uY2xvc2VCdXR0b24pLmNsaWNrKGZ1bmN0aW9uKCl7Y2xvc2VfbW9kYWwobW9kYWxfaWQpfSk7dmFyIG1vZGFsX2hlaWdodD0kKG1vZGFsX2lkKS5vdXRlckhlaWdodCgpO3ZhciBtb2RhbF93aWR0aD0kKG1vZGFsX2lkKS5vdXRlcldpZHRoKCk7CiQoIiNsZWFuX292ZXJsYXkiKS5jc3MoeyJkaXNwbGF5IjoiYmxvY2siLG9wYWNpdHk6MH0pOyQoIiNsZWFuX292ZXJsYXkiKS5mYWRlVG8oMjAwLG8ub3ZlcmxheSk7JChtb2RhbF9pZCkuY3NzKHsiZGlzcGxheSI6ImJsb2NrIiwicG9zaXRpb24iOiJmaXhlZCIsIm9wYWNpdHkiOjAsInotaW5kZXgiOjExMDAwLCJsZWZ0Ijo1MCsiJSIsIm1hcmdpbi1sZWZ0IjotKG1vZGFsX3dpZHRoLzIpKyJweCIsInRvcCI6by50b3ArInB4In0pOyQobW9kYWxfaWQpLmZhZGVUbygyMDAsMSk7ZS5wcmV2ZW50RGVmYXVsdCgpfSl9KTtmdW5jdGlvbiBjbG9zZV9tb2RhbChtb2RhbF9pZCl7JCgiI2xlYW5fb3ZlcmxheSIpLmZhZGVPdXQoMjAwKTskKG1vZGFsX2lkKS5jc3MoeyJkaXNwbGF5Ijoibm9uZSJ9KX19fSl9KShqUXVlcnkpOwo=
###PACKDATA,FILE_END,/_importbuddy/importbuddy/js/jquery.leanModal.min.js,importbuddy/js/jquery.leanModal.min.js
###PACKDATA,FILE_START,/_importbuddy/importbuddy/js/jquery.simple-expand.min.js,importbuddy/js/jquery.simple-expand.min.js
LyogQ29weXJpZ2h0IChDKSAyMDEyIFN5bHZhaW4gSGFtZWwKUHJvamVjdDogaHR0cHM6Ly9naXRodWIuY29tL3JlZGhvdHNseS9zaW1wbGUtZXhwYW5kCk1JVCBMaWNlbmNlOiBodHRwczovL3Jhdy5naXRodWIuY29tL3JlZGhvdHNseS9zaW1wbGUtZXhwYW5kL21hc3Rlci9saWNlbmNlLW1pdC50eHQgKi8KKGZ1bmN0aW9uKCQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBlKCl7dmFyIGU9dGhpcztlLmRlZmF1bHRzPXtoaWRlTW9kZToiZmFkZVRvZ2dsZSIsZGVmYXVsdFNlYXJjaE1vZGU6InBhcmVudCIsZGVmYXVsdFRhcmdldDoiLmNvbnRlbnQiLHRocm93T25NaXNzaW5nVGFyZ2V0OiEwLGtlZXBTdGF0ZUluQ29va2llOiExLGNvb2tpZU5hbWU6InNpbXBsZS1leHBhbmQifSxlLnNldHRpbmdzPXt9LCQuZXh0ZW5kKGUuc2V0dGluZ3MsZS5kZWZhdWx0cyksZS5maW5kTGV2ZWxPbmVEZWVwPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gZS5maW5kKHQpLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiEkKHRoaXMpLnBhcmVudHNVbnRpbChlLG4pLmxlbmd0aH0pfSxlLnNldEluaXRpYWxTdGF0ZT1mdW5jdGlvbih0LG4pe3ZhciByPWUucmVhZFN0YXRlKHQpO3I/KHQucmVtb3ZlQ2xhc3MoImNvbGxhcHNlZCIpLmFkZENsYXNzKCJleHBhbmRlZCIpLGUuc2hvdyhuKSk6KHQucmVtb3ZlQ2xhc3MoImV4cGFuZGVkIikuYWRkQ2xhc3MoImNvbGxhcHNlZCIpLGUuaGlkZShuKSl9LGUuaGlkZT1mdW5jdGlvbih0KXtlLnNldHRpbmdzLmhpZGVNb2RlPT09ImZhZGVUb2dnbGUiP3QuaGlkZSgpOmUuc2V0dGluZ3MuaGlkZU1vZGU9PT0iYmFzaWMiJiZ0LmhpZGUoKX0sZS5zaG93PWZ1bmN0aW9uKHQpe2Uuc2V0dGluZ3MuaGlkZU1vZGU9PT0iZmFkZVRvZ2dsZSI/dC5zaG93KCk6ZS5zZXR0aW5ncy5oaWRlTW9kZT09PSJiYXNpYyImJnQuc2hvdygpfSxlLmNoZWNrS2VlcFN0YXRlSW5Db29raWVQcmVjb25kaXRpb25zPWZ1bmN0aW9uKCl7aWYoZS5zZXR0aW5ncy5rZWVwU3RhdGVJbkNvb2tpZSYmJC5jb29raWU9PT11bmRlZmluZWQpdGhyb3cgbmV3IEVycm9yKCJzaW1wbGUtZXhwYW5kOiBrZWVwU3RhdGVJbkNvb2tpZSBvcHRpb24gcmVxdWlyZXMgJC5jb29raWUgdG8gYmUgZGVmaW5lZC4iKX0sZS5yZWFkQ29va2llPWZ1bmN0aW9uKCl7dmFyIHQ9JC5jb29raWUoZS5zZXR0aW5ncy5jb29raWVOYW1lKTtyZXR1cm4gdD09PW51bGx8fHQ9PT0iIj97fTpKU09OLnBhcnNlKHQpfSxlLnJlYWRTdGF0ZT1mdW5jdGlvbih0KXtpZighZS5zZXR0aW5ncy5rZWVwU3RhdGVJbkNvb2tpZSlyZXR1cm4hMTt2YXIgbj10LmF0dHIoIklkIik7aWYobj09PXVuZGVmaW5lZClyZXR1cm47dmFyIHI9ZS5yZWFkQ29va2llKCksaT1yW25dPT09ITB8fCExO3JldHVybiBpfSxlLnNhdmVTdGF0ZT1mdW5jdGlvbih0LG4pe2lmKCFlLnNldHRpbmdzLmtlZXBTdGF0ZUluQ29va2llKXJldHVybjt2YXIgcj10LmF0dHIoIklkIik7aWYocj09PXVuZGVmaW5lZClyZXR1cm47dmFyIGk9ZS5yZWFkQ29va2llKCk7aVtyXT1uLCQuY29va2llKGUuc2V0dGluZ3MuY29va2llTmFtZSxKU09OLnN0cmluZ2lmeShpKSx7cmF3OiEwLHBhdGg6d2luZG93LmxvY2F0aW9uLnBhdGhuYW1lfSl9LGUudG9nZ2xlPWZ1bmN0aW9uKHQsbil7dmFyIHI9ZS50b2dnbGVDc3ModCk7cmV0dXJuIGUuc2V0dGluZ3MuaGlkZU1vZGU9PT0iZmFkZVRvZ2dsZSI/bi5mYWRlVG9nZ2xlKDE1MCk6ZS5zZXR0aW5ncy5oaWRlTW9kZT09PSJiYXNpYyI/bi50b2dnbGUoKTokLmlzRnVuY3Rpb24oZS5zZXR0aW5ncy5oaWRlTW9kZSkmJmUuc2V0dGluZ3MuaGlkZU1vZGUodCxuLHIpLGUuc2F2ZVN0YXRlKHQsciksITF9LGUudG9nZ2xlQ3NzPWZ1bmN0aW9uKGUpe3JldHVybiBlLmhhc0NsYXNzKCJleHBhbmRlZCIpPyhlLnRvZ2dsZUNsYXNzKCJjb2xsYXBzZWQgZXhwYW5kZWQiKSwhMSk6KGUudG9nZ2xlQ2xhc3MoImV4cGFuZGVkIGNvbGxhcHNlZCIpLCEwKX0sZS5maW5kVGFyZ2V0cz1mdW5jdGlvbih0LG4scil7dmFyIGk9W107aWYobj09PSJhYnNvbHV0ZSIpaT0kKHIpO2Vsc2UgaWYobj09PSJyZWxhdGl2ZSIpaT1lLmZpbmRMZXZlbE9uZURlZXAodCxyLHIpO2Vsc2UgaWYobj09PSJwYXJlbnQiKXt2YXIgcz10LnBhcmVudCgpO2RvIGk9ZS5maW5kTGV2ZWxPbmVEZWVwKHMscixyKSxpLmxlbmd0aD09PTAmJihzPXMucGFyZW50KCkpO3doaWxlKGkubGVuZ3RoPT09MCYmcy5sZW5ndGghPT0wKX1yZXR1cm4gaX0sZS5hY3RpdmF0ZT1mdW5jdGlvbih0LG4peyQuZXh0ZW5kKGUuc2V0dGluZ3MsbiksZS5jaGVja0tlZXBTdGF0ZUluQ29va2llUHJlY29uZGl0aW9ucygpLHQuZWFjaChmdW5jdGlvbigpe3ZhciB0PSQodGhpcyksbj10LmF0dHIoImRhdGEtZXhwYW5kZXItdGFyZ2V0Iil8fGUuc2V0dGluZ3MuZGVmYXVsdFRhcmdldCxyPXQuYXR0cigiZGF0YS1leHBhbmRlci10YXJnZXQtc2VhcmNoIil8fGUuc2V0dGluZ3MuZGVmYXVsdFNlYXJjaE1vZGUsaT1lLmZpbmRUYXJnZXRzKHQscixuKTtpZihpLmxlbmd0aD09PTApe2lmKGUuc2V0dGluZ3MudGhyb3dPbk1pc3NpbmdUYXJnZXQpdGhyb3cic2ltcGxlLWV4cGFuZDogVGFyZ2V0cyBub3QgZm91bmQiO3JldHVybiB0aGlzfWUuc2V0SW5pdGlhbFN0YXRlKHQsaSksdC5jbGljayhmdW5jdGlvbigpe3JldHVybiBlLnRvZ2dsZSh0LGkpfSl9KX19d2luZG93LlNpbXBsZUV4cGFuZD1lLCQuZm4uc2ltcGxlZXhwYW5kPWZ1bmN0aW9uKHQpe3ZhciBuPW5ldyBlO3JldHVybiBuLmFjdGl2YXRlKHRoaXMsdCksdGhpc319KShqUXVlcnkpOw==
###PACKDATA,FILE_END,/_importbuddy/importbuddy/js/jquery.simple-expand.min.js,importbuddy/js/jquery.simple-expand.min.js
###PACKDATA,FILE_START,/_importbuddy/importbuddy/js/tooltip.js,importbuddy/js/tooltip.js
LyoKICogalF1ZXJ5IFRvb2x0aXAgcGx1Z2luIDEuMwogKgogKiBodHRwOi8vYmFzc2lzdGFuY2UuZGUvanF1ZXJ5LXBsdWdpbnMvanF1ZXJ5LXBsdWdpbi10b29sdGlwLwogKiBodHRwOi8vZG9jcy5qcXVlcnkuY29tL1BsdWdpbnMvVG9vbHRpcAogKgogKiBDb3B5cmlnaHQgKGMpIDIwMDYgLSAyMDA4IErDtnJuIFphZWZmZXJlcgogKgogKiAkSWQ6IGpxdWVyeS50b29sdGlwLmpzIDU3NDEgMjAwOC0wNi0yMSAxNToyMjoxNlogam9lcm4uemFlZmZlcmVyICQKICogCiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBhbmQgR1BMIGxpY2Vuc2VzOgogKiAgIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwCiAqICAgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2dwbC5odG1sCiAqLzsoZnVuY3Rpb24oJCl7dmFyIGhlbHBlcj17fSxjdXJyZW50LHRpdGxlLHRJRCxJRT0kLmJyb3dzZXIubXNpZSYmL01TSUVccyg1XC41fDZcLikvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksdHJhY2s9ZmFsc2U7JC50b29sdGlwPXtibG9ja2VkOmZhbHNlLGRlZmF1bHRzOntkZWxheToyMDAsZmFkZTpmYWxzZSxzaG93VVJMOnRydWUsZXh0cmFDbGFzczoiIix0b3A6MTUsbGVmdDoxNSxpZDoidG9vbHRpcCJ9LGJsb2NrOmZ1bmN0aW9uKCl7JC50b29sdGlwLmJsb2NrZWQ9ISQudG9vbHRpcC5ibG9ja2VkO319OyQuZm4uZXh0ZW5kKHt0b29sdGlwOmZ1bmN0aW9uKHNldHRpbmdzKXtzZXR0aW5ncz0kLmV4dGVuZCh7fSwkLnRvb2x0aXAuZGVmYXVsdHMsc2V0dGluZ3MpO2NyZWF0ZUhlbHBlcihzZXR0aW5ncyk7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpeyQuZGF0YSh0aGlzLCJ0b29sdGlwIixzZXR0aW5ncyk7dGhpcy50T3BhY2l0eT1oZWxwZXIucGFyZW50LmNzcygib3BhY2l0eSIpO3RoaXMudG9vbHRpcFRleHQ9dGhpcy50aXRsZTskKHRoaXMpLnJlbW92ZUF0dHIoInRpdGxlIik7dGhpcy5hbHQ9IiI7fSkubW91c2VvdmVyKHNhdmUpLm1vdXNlb3V0KGhpZGUpLmNsaWNrKGhpZGUpO30sZml4UE5HOklFP2Z1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBpbWFnZT0kKHRoaXMpLmNzcygnYmFja2dyb3VuZEltYWdlJyk7aWYoaW1hZ2UubWF0Y2goL151cmxcKFsiJ10/KC4qXC5wbmcpWyInXT9cKSQvaSkpe2ltYWdlPVJlZ0V4cC4kMTskKHRoaXMpLmNzcyh7J2JhY2tncm91bmRJbWFnZSc6J25vbmUnLCdmaWx0ZXInOiJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGFJbWFnZUxvYWRlcihlbmFibGVkPXRydWUsIHNpemluZ01ldGhvZD1jcm9wLCBzcmM9JyIraW1hZ2UrIicpIn0pLmVhY2goZnVuY3Rpb24oKXt2YXIgcG9zaXRpb249JCh0aGlzKS5jc3MoJ3Bvc2l0aW9uJyk7aWYocG9zaXRpb24hPSdhYnNvbHV0ZScmJnBvc2l0aW9uIT0ncmVsYXRpdmUnKSQodGhpcykuY3NzKCdwb3NpdGlvbicsJ3JlbGF0aXZlJyk7fSk7fX0pO306ZnVuY3Rpb24oKXtyZXR1cm4gdGhpczt9LHVuZml4UE5HOklFP2Z1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpeyQodGhpcykuY3NzKHsnZmlsdGVyJzonJyxiYWNrZ3JvdW5kSW1hZ2U6Jyd9KTt9KTt9OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXM7fSxoaWRlV2hlbkVtcHR5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpeyQodGhpcylbJCh0aGlzKS5odG1sKCk/InNob3ciOiJoaWRlIl0oKTt9KTt9LHVybDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmF0dHIoJ2hyZWYnKXx8dGhpcy5hdHRyKCdzcmMnKTt9fSk7ZnVuY3Rpb24gY3JlYXRlSGVscGVyKHNldHRpbmdzKXtpZihoZWxwZXIucGFyZW50KXJldHVybjtoZWxwZXIucGFyZW50PSQoJzxkaXYgaWQ9Iicrc2V0dGluZ3MuaWQrJyI+PGgzPjwvaDM+PGRpdiBjbGFzcz0iYm9keSI+PC9kaXY+PGRpdiBjbGFzcz0idXJsIj48L2Rpdj48L2Rpdj4nKS5hcHBlbmRUbyhkb2N1bWVudC5ib2R5KS5oaWRlKCk7aWYoJC5mbi5iZ2lmcmFtZSloZWxwZXIucGFyZW50LmJnaWZyYW1lKCk7aGVscGVyLnRpdGxlPSQoJ2gzJyxoZWxwZXIucGFyZW50KTtoZWxwZXIuYm9keT0kKCdkaXYuYm9keScsaGVscGVyLnBhcmVudCk7aGVscGVyLnVybD0kKCdkaXYudXJsJyxoZWxwZXIucGFyZW50KTt9ZnVuY3Rpb24gc2V0dGluZ3MoZWxlbWVudCl7cmV0dXJuICQuZGF0YShlbGVtZW50LCJ0b29sdGlwIik7fWZ1bmN0aW9uIGhhbmRsZShldmVudCl7aWYoc2V0dGluZ3ModGhpcykuZGVsYXkpdElEPXNldFRpbWVvdXQoc2hvdyxzZXR0aW5ncyh0aGlzKS5kZWxheSk7ZWxzZQpzaG93KCk7dHJhY2s9ISFzZXR0aW5ncyh0aGlzKS50cmFjazskKGRvY3VtZW50LmJvZHkpLmJpbmQoJ21vdXNlbW92ZScsdXBkYXRlKTt1cGRhdGUoZXZlbnQpO31mdW5jdGlvbiBzYXZlKCl7aWYoJC50b29sdGlwLmJsb2NrZWR8fHRoaXM9PWN1cnJlbnR8fCghdGhpcy50b29sdGlwVGV4dCYmIXNldHRpbmdzKHRoaXMpLmJvZHlIYW5kbGVyKSlyZXR1cm47Y3VycmVudD10aGlzO3RpdGxlPXRoaXMudG9vbHRpcFRleHQ7aWYoc2V0dGluZ3ModGhpcykuYm9keUhhbmRsZXIpe2hlbHBlci50aXRsZS5oaWRlKCk7dmFyIGJvZHlDb250ZW50PXNldHRpbmdzKHRoaXMpLmJvZHlIYW5kbGVyLmNhbGwodGhpcyk7aWYoYm9keUNvbnRlbnQubm9kZVR5cGV8fGJvZHlDb250ZW50LmpxdWVyeSl7aGVscGVyLmJvZHkuZW1wdHkoKS5hcHBlbmQoYm9keUNvbnRlbnQpfWVsc2V7aGVscGVyLmJvZHkuaHRtbChib2R5Q29udGVudCk7fWhlbHBlci5ib2R5LnNob3coKTt9ZWxzZSBpZihzZXR0aW5ncyh0aGlzKS5zaG93Qm9keSl7dmFyIHBhcnRzPXRpdGxlLnNwbGl0KHNldHRpbmdzKHRoaXMpLnNob3dCb2R5KTtoZWxwZXIudGl0bGUuaHRtbChwYXJ0cy5zaGlmdCgpKS5zaG93KCk7aGVscGVyLmJvZHkuZW1wdHkoKTtmb3IodmFyIGk9MCxwYXJ0OyhwYXJ0PXBhcnRzW2ldKTtpKyspe2lmKGk+MCloZWxwZXIuYm9keS5hcHBlbmQoIjxici8+Iik7aGVscGVyLmJvZHkuYXBwZW5kKHBhcnQpO31oZWxwZXIuYm9keS5oaWRlV2hlbkVtcHR5KCk7fWVsc2V7aGVscGVyLnRpdGxlLmh0bWwodGl0bGUpLnNob3coKTtoZWxwZXIuYm9keS5oaWRlKCk7fWlmKHNldHRpbmdzKHRoaXMpLnNob3dVUkwmJiQodGhpcykudXJsKCkpaGVscGVyLnVybC5odG1sKCQodGhpcykudXJsKCkucmVwbGFjZSgnaHR0cDovLycsJycpKS5zaG93KCk7ZWxzZQpoZWxwZXIudXJsLmhpZGUoKTtoZWxwZXIucGFyZW50LmFkZENsYXNzKHNldHRpbmdzKHRoaXMpLmV4dHJhQ2xhc3MpO2lmKHNldHRpbmdzKHRoaXMpLmZpeFBORyloZWxwZXIucGFyZW50LmZpeFBORygpO2hhbmRsZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fWZ1bmN0aW9uIHNob3coKXt0SUQ9bnVsbDtpZigoIUlFfHwhJC5mbi5iZ2lmcmFtZSkmJnNldHRpbmdzKGN1cnJlbnQpLmZhZGUpe2lmKGhlbHBlci5wYXJlbnQuaXMoIjphbmltYXRlZCIpKWhlbHBlci5wYXJlbnQuc3RvcCgpLnNob3coKS5mYWRlVG8oc2V0dGluZ3MoY3VycmVudCkuZmFkZSxjdXJyZW50LnRPcGFjaXR5KTtlbHNlCmhlbHBlci5wYXJlbnQuaXMoJzp2aXNpYmxlJyk/aGVscGVyLnBhcmVudC5mYWRlVG8oc2V0dGluZ3MoY3VycmVudCkuZmFkZSxjdXJyZW50LnRPcGFjaXR5KTpoZWxwZXIucGFyZW50LmZhZGVJbihzZXR0aW5ncyhjdXJyZW50KS5mYWRlKTt9ZWxzZXtoZWxwZXIucGFyZW50LnNob3coKTt9dXBkYXRlKCk7fWZ1bmN0aW9uIHVwZGF0ZShldmVudCl7aWYoJC50b29sdGlwLmJsb2NrZWQpcmV0dXJuO2lmKGV2ZW50JiZldmVudC50YXJnZXQudGFnTmFtZT09Ik9QVElPTiIpe3JldHVybjt9aWYoIXRyYWNrJiZoZWxwZXIucGFyZW50LmlzKCI6dmlzaWJsZSIpKXskKGRvY3VtZW50LmJvZHkpLnVuYmluZCgnbW91c2Vtb3ZlJyx1cGRhdGUpfWlmKGN1cnJlbnQ9PW51bGwpeyQoZG9jdW1lbnQuYm9keSkudW5iaW5kKCdtb3VzZW1vdmUnLHVwZGF0ZSk7cmV0dXJuO31oZWxwZXIucGFyZW50LnJlbW92ZUNsYXNzKCJ2aWV3cG9ydC1yaWdodCIpLnJlbW92ZUNsYXNzKCJ2aWV3cG9ydC1ib3R0b20iKTt2YXIgbGVmdD1oZWxwZXIucGFyZW50WzBdLm9mZnNldExlZnQ7dmFyIHRvcD1oZWxwZXIucGFyZW50WzBdLm9mZnNldFRvcDtpZihldmVudCl7bGVmdD1ldmVudC5wYWdlWCtzZXR0aW5ncyhjdXJyZW50KS5sZWZ0O3RvcD1ldmVudC5wYWdlWStzZXR0aW5ncyhjdXJyZW50KS50b3A7dmFyIHJpZ2h0PSdhdXRvJztpZihzZXR0aW5ncyhjdXJyZW50KS5wb3NpdGlvbkxlZnQpe3JpZ2h0PSQod2luZG93KS53aWR0aCgpLWxlZnQ7bGVmdD0nYXV0byc7fWhlbHBlci5wYXJlbnQuY3NzKHtsZWZ0OmxlZnQscmlnaHQ6cmlnaHQsdG9wOnRvcH0pO312YXIgdj12aWV3cG9ydCgpLGg9aGVscGVyLnBhcmVudFswXTtpZih2Lngrdi5jeDxoLm9mZnNldExlZnQraC5vZmZzZXRXaWR0aCl7bGVmdC09aC5vZmZzZXRXaWR0aCsyMCtzZXR0aW5ncyhjdXJyZW50KS5sZWZ0O2hlbHBlci5wYXJlbnQuY3NzKHtsZWZ0OmxlZnQrJ3B4J30pLmFkZENsYXNzKCJ2aWV3cG9ydC1yaWdodCIpO31pZih2Lnkrdi5jeTxoLm9mZnNldFRvcCtoLm9mZnNldEhlaWdodCl7dG9wLT1oLm9mZnNldEhlaWdodCsyMCtzZXR0aW5ncyhjdXJyZW50KS50b3A7aGVscGVyLnBhcmVudC5jc3Moe3RvcDp0b3ArJ3B4J30pLmFkZENsYXNzKCJ2aWV3cG9ydC1ib3R0b20iKTt9fWZ1bmN0aW9uIHZpZXdwb3J0KCl7cmV0dXJue3g6JCh3aW5kb3cpLnNjcm9sbExlZnQoKSx5OiQod2luZG93KS5zY3JvbGxUb3AoKSxjeDokKHdpbmRvdykud2lkdGgoKSxjeTokKHdpbmRvdykuaGVpZ2h0KCl9O31mdW5jdGlvbiBoaWRlKGV2ZW50KXtpZigkLnRvb2x0aXAuYmxvY2tlZClyZXR1cm47aWYodElEKWNsZWFyVGltZW91dCh0SUQpO2N1cnJlbnQ9bnVsbDt2YXIgdHNldHRpbmdzPXNldHRpbmdzKHRoaXMpO2Z1bmN0aW9uIGNvbXBsZXRlKCl7aGVscGVyLnBhcmVudC5yZW1vdmVDbGFzcyh0c2V0dGluZ3MuZXh0cmFDbGFzcykuaGlkZSgpLmNzcygib3BhY2l0eSIsIiIpO31pZigoIUlFfHwhJC5mbi5iZ2lmcmFtZSkmJnRzZXR0aW5ncy5mYWRlKXtpZihoZWxwZXIucGFyZW50LmlzKCc6YW5pbWF0ZWQnKSloZWxwZXIucGFyZW50LnN0b3AoKS5mYWRlVG8odHNldHRpbmdzLmZhZGUsMCxjb21wbGV0ZSk7ZWxzZQpoZWxwZXIucGFyZW50LnN0b3AoKS5mYWRlT3V0KHRzZXR0aW5ncy5mYWRlLGNvbXBsZXRlKTt9ZWxzZQpjb21wbGV0ZSgpO2lmKHNldHRpbmdzKHRoaXMpLmZpeFBORyloZWxwZXIucGFyZW50LnVuZml4UE5HKCk7fX0pKGpRdWVyeSk7
###PACKDATA,FILE_END,/_importbuddy/importbuddy/js/tooltip.js,importbuddy/js/tooltip.js
###PACKDATA,FILE_START,/_importbuddy/importbuddy/js/ui.core.js,importbuddy/js/ui.core.js
LyohCiAqIGpRdWVyeSBVSSAxLjguMTIKICoKICogQ29weXJpZ2h0IDIwMTEsIEFVVEhPUlMudHh0IChodHRwOi8vanF1ZXJ5dWkuY29tL2Fib3V0KQogKiBEdWFsIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgb3IgR1BMIFZlcnNpb24gMiBsaWNlbnNlcy4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKgogKiBodHRwOi8vZG9jcy5qcXVlcnkuY29tL1VJCiAqLwooZnVuY3Rpb24oYyxqKXtmdW5jdGlvbiBrKGEpe3JldHVybiFjKGEpLnBhcmVudHMoKS5hbmRTZWxmKCkuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIGMuY3VyQ1NTKHRoaXMsInZpc2liaWxpdHkiKT09PSJoaWRkZW4ifHxjLmV4cHIuZmlsdGVycy5oaWRkZW4odGhpcyl9KS5sZW5ndGh9Yy51aT1jLnVpfHx7fTtpZighYy51aS52ZXJzaW9uKXtjLmV4dGVuZChjLnVpLHt2ZXJzaW9uOiIxLjguMTIiLGtleUNvZGU6e0FMVDoxOCxCQUNLU1BBQ0U6OCxDQVBTX0xPQ0s6MjAsQ09NTUE6MTg4LENPTU1BTkQ6OTEsQ09NTUFORF9MRUZUOjkxLENPTU1BTkRfUklHSFQ6OTMsQ09OVFJPTDoxNyxERUxFVEU6NDYsRE9XTjo0MCxFTkQ6MzUsRU5URVI6MTMsRVNDQVBFOjI3LEhPTUU6MzYsSU5TRVJUOjQ1LExFRlQ6MzcsTUVOVTo5MyxOVU1QQURfQUREOjEwNyxOVU1QQURfREVDSU1BTDoxMTAsTlVNUEFEX0RJVklERToxMTEsTlVNUEFEX0VOVEVSOjEwOCxOVU1QQURfTVVMVElQTFk6MTA2LApOVU1QQURfU1VCVFJBQ1Q6MTA5LFBBR0VfRE9XTjozNCxQQUdFX1VQOjMzLFBFUklPRDoxOTAsUklHSFQ6MzksU0hJRlQ6MTYsU1BBQ0U6MzIsVEFCOjksVVA6MzgsV0lORE9XUzo5MX19KTtjLmZuLmV4dGVuZCh7X2ZvY3VzOmMuZm4uZm9jdXMsZm9jdXM6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdHlwZW9mIGE9PT0ibnVtYmVyIj90aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZD10aGlzO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtjKGQpLmZvY3VzKCk7YiYmYi5jYWxsKGQpfSxhKX0pOnRoaXMuX2ZvY3VzLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sc2Nyb2xsUGFyZW50OmZ1bmN0aW9uKCl7dmFyIGE7YT1jLmJyb3dzZXIubXNpZSYmLyhzdGF0aWN8cmVsYXRpdmUpLy50ZXN0KHRoaXMuY3NzKCJwb3NpdGlvbiIpKXx8L2Fic29sdXRlLy50ZXN0KHRoaXMuY3NzKCJwb3NpdGlvbiIpKT90aGlzLnBhcmVudHMoKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4vKHJlbGF0aXZlfGFic29sdXRlfGZpeGVkKS8udGVzdChjLmN1ckNTUyh0aGlzLAoicG9zaXRpb24iLDEpKSYmLyhhdXRvfHNjcm9sbCkvLnRlc3QoYy5jdXJDU1ModGhpcywib3ZlcmZsb3ciLDEpK2MuY3VyQ1NTKHRoaXMsIm92ZXJmbG93LXkiLDEpK2MuY3VyQ1NTKHRoaXMsIm92ZXJmbG93LXgiLDEpKX0pLmVxKDApOnRoaXMucGFyZW50cygpLmZpbHRlcihmdW5jdGlvbigpe3JldHVybi8oYXV0b3xzY3JvbGwpLy50ZXN0KGMuY3VyQ1NTKHRoaXMsIm92ZXJmbG93IiwxKStjLmN1ckNTUyh0aGlzLCJvdmVyZmxvdy15IiwxKStjLmN1ckNTUyh0aGlzLCJvdmVyZmxvdy14IiwxKSl9KS5lcSgwKTtyZXR1cm4vZml4ZWQvLnRlc3QodGhpcy5jc3MoInBvc2l0aW9uIikpfHwhYS5sZW5ndGg/Yyhkb2N1bWVudCk6YX0sekluZGV4OmZ1bmN0aW9uKGEpe2lmKGEhPT1qKXJldHVybiB0aGlzLmNzcygiekluZGV4IixhKTtpZih0aGlzLmxlbmd0aCl7YT1jKHRoaXNbMF0pO2Zvcih2YXIgYjthLmxlbmd0aCYmYVswXSE9PWRvY3VtZW50Oyl7Yj1hLmNzcygicG9zaXRpb24iKTsKaWYoYj09PSJhYnNvbHV0ZSJ8fGI9PT0icmVsYXRpdmUifHxiPT09ImZpeGVkIil7Yj1wYXJzZUludChhLmNzcygiekluZGV4IiksMTApO2lmKCFpc05hTihiKSYmYiE9PTApcmV0dXJuIGJ9YT1hLnBhcmVudCgpfX1yZXR1cm4gMH0sZGlzYWJsZVNlbGVjdGlvbjpmdW5jdGlvbigpe3JldHVybiB0aGlzLmJpbmQoKGMuc3VwcG9ydC5zZWxlY3RzdGFydD8ic2VsZWN0c3RhcnQiOiJtb3VzZWRvd24iKSsiLnVpLWRpc2FibGVTZWxlY3Rpb24iLGZ1bmN0aW9uKGEpe2EucHJldmVudERlZmF1bHQoKX0pfSxlbmFibGVTZWxlY3Rpb246ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy51bmJpbmQoIi51aS1kaXNhYmxlU2VsZWN0aW9uIil9fSk7Yy5lYWNoKFsiV2lkdGgiLCJIZWlnaHQiXSxmdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGQoZixnLGwsbSl7Yy5lYWNoKGUsZnVuY3Rpb24oKXtnLT1wYXJzZUZsb2F0KGMuY3VyQ1NTKGYsInBhZGRpbmciK3RoaXMsdHJ1ZSkpfHwwO2lmKGwpZy09cGFyc2VGbG9hdChjLmN1ckNTUyhmLAoiYm9yZGVyIit0aGlzKyJXaWR0aCIsdHJ1ZSkpfHwwO2lmKG0pZy09cGFyc2VGbG9hdChjLmN1ckNTUyhmLCJtYXJnaW4iK3RoaXMsdHJ1ZSkpfHwwfSk7cmV0dXJuIGd9dmFyIGU9Yj09PSJXaWR0aCI/WyJMZWZ0IiwiUmlnaHQiXTpbIlRvcCIsIkJvdHRvbSJdLGg9Yi50b0xvd2VyQ2FzZSgpLGk9e2lubmVyV2lkdGg6Yy5mbi5pbm5lcldpZHRoLGlubmVySGVpZ2h0OmMuZm4uaW5uZXJIZWlnaHQsb3V0ZXJXaWR0aDpjLmZuLm91dGVyV2lkdGgsb3V0ZXJIZWlnaHQ6Yy5mbi5vdXRlckhlaWdodH07Yy5mblsiaW5uZXIiK2JdPWZ1bmN0aW9uKGYpe2lmKGY9PT1qKXJldHVybiBpWyJpbm5lciIrYl0uY2FsbCh0aGlzKTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7Yyh0aGlzKS5jc3MoaCxkKHRoaXMsZikrInB4Iil9KX07Yy5mblsib3V0ZXIiK2JdPWZ1bmN0aW9uKGYsZyl7aWYodHlwZW9mIGYhPT0ibnVtYmVyIilyZXR1cm4gaVsib3V0ZXIiK2JdLmNhbGwodGhpcyxmKTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7Yyh0aGlzKS5jc3MoaCwKZCh0aGlzLGYsdHJ1ZSxnKSsicHgiKX0pfX0pO2MuZXh0ZW5kKGMuZXhwclsiOiJdLHtkYXRhOmZ1bmN0aW9uKGEsYixkKXtyZXR1cm4hIWMuZGF0YShhLGRbM10pfSxmb2N1c2FibGU6ZnVuY3Rpb24oYSl7dmFyIGI9YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLGQ9Yy5hdHRyKGEsInRhYmluZGV4Iik7aWYoImFyZWEiPT09Yil7Yj1hLnBhcmVudE5vZGU7ZD1iLm5hbWU7aWYoIWEuaHJlZnx8IWR8fGIubm9kZU5hbWUudG9Mb3dlckNhc2UoKSE9PSJtYXAiKXJldHVybiBmYWxzZTthPWMoImltZ1t1c2VtYXA9IyIrZCsiXSIpWzBdO3JldHVybiEhYSYmayhhKX1yZXR1cm4oL2lucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b258b2JqZWN0Ly50ZXN0KGIpPyFhLmRpc2FibGVkOiJhIj09Yj9hLmhyZWZ8fCFpc05hTihkKTohaXNOYU4oZCkpJiZrKGEpfSx0YWJiYWJsZTpmdW5jdGlvbihhKXt2YXIgYj1jLmF0dHIoYSwidGFiaW5kZXgiKTtyZXR1cm4oaXNOYU4oYil8fGI+PTApJiZjKGEpLmlzKCI6Zm9jdXNhYmxlIil9fSk7CmMoZnVuY3Rpb24oKXt2YXIgYT1kb2N1bWVudC5ib2R5LGI9YS5hcHBlbmRDaGlsZChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpKTtjLmV4dGVuZChiLnN0eWxlLHttaW5IZWlnaHQ6IjEwMHB4IixoZWlnaHQ6ImF1dG8iLHBhZGRpbmc6MCxib3JkZXJXaWR0aDowfSk7Yy5zdXBwb3J0Lm1pbkhlaWdodD1iLm9mZnNldEhlaWdodD09PTEwMDtjLnN1cHBvcnQuc2VsZWN0c3RhcnQ9Im9uc2VsZWN0c3RhcnQiaW4gYjthLnJlbW92ZUNoaWxkKGIpLnN0eWxlLmRpc3BsYXk9Im5vbmUifSk7Yy5leHRlbmQoYy51aSx7cGx1Z2luOnthZGQ6ZnVuY3Rpb24oYSxiLGQpe2E9Yy51aVthXS5wcm90b3R5cGU7Zm9yKHZhciBlIGluIGQpe2EucGx1Z2luc1tlXT1hLnBsdWdpbnNbZV18fFtdO2EucGx1Z2luc1tlXS5wdXNoKFtiLGRbZV1dKX19LGNhbGw6ZnVuY3Rpb24oYSxiLGQpe2lmKChiPWEucGx1Z2luc1tiXSkmJmEuZWxlbWVudFswXS5wYXJlbnROb2RlKWZvcih2YXIgZT0wO2U8Yi5sZW5ndGg7ZSsrKWEub3B0aW9uc1tiW2VdWzBdXSYmCmJbZV1bMV0uYXBwbHkoYS5lbGVtZW50LGQpfX0sY29udGFpbnM6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZG9jdW1lbnQuY29tcGFyZURvY3VtZW50UG9zaXRpb24/YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNjphIT09YiYmYS5jb250YWlucyhiKX0saGFzU2Nyb2xsOmZ1bmN0aW9uKGEsYil7aWYoYyhhKS5jc3MoIm92ZXJmbG93Iik9PT0iaGlkZGVuIilyZXR1cm4gZmFsc2U7Yj1iJiZiPT09ImxlZnQiPyJzY3JvbGxMZWZ0Ijoic2Nyb2xsVG9wIjt2YXIgZD1mYWxzZTtpZihhW2JdPjApcmV0dXJuIHRydWU7YVtiXT0xO2Q9YVtiXT4wO2FbYl09MDtyZXR1cm4gZH0saXNPdmVyQXhpczpmdW5jdGlvbihhLGIsZCl7cmV0dXJuIGE+YiYmYTxiK2R9LGlzT3ZlcjpmdW5jdGlvbihhLGIsZCxlLGgsaSl7cmV0dXJuIGMudWkuaXNPdmVyQXhpcyhhLGQsaCkmJmMudWkuaXNPdmVyQXhpcyhiLGUsaSl9fSl9fSkoalF1ZXJ5KTs=
###PACKDATA,FILE_END,/_importbuddy/importbuddy/js/ui.core.js,importbuddy/js/ui.core.js
###PACKDATA,FILE_START,/_importbuddy/importbuddy/js/ui.tabs.js,importbuddy/js/ui.tabs.js

###PACKDATA,FILE_END,/_importbuddy/importbuddy/js/ui.tabs.js,importbuddy/js/ui.tabs.js
###PACKDATA,FILE_START,/_importbuddy/importbuddy/js/ui.widget.js,importbuddy/js/ui.widget.js
LyohCiAqIGpRdWVyeSBVSSBXaWRnZXQgMS44LjEyCiAqCiAqIENvcHlyaWdodCAyMDExLCBBVVRIT1JTLnR4dCAoaHR0cDovL2pxdWVyeXVpLmNvbS9hYm91dCkKICogRHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIG9yIEdQTCBWZXJzaW9uIDIgbGljZW5zZXMuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICoKICogaHR0cDovL2RvY3MuanF1ZXJ5LmNvbS9VSS9XaWRnZXQKICovCihmdW5jdGlvbihiLGope2lmKGIuY2xlYW5EYXRhKXt2YXIgaz1iLmNsZWFuRGF0YTtiLmNsZWFuRGF0YT1mdW5jdGlvbihhKXtmb3IodmFyIGM9MCxkOyhkPWFbY10pIT1udWxsO2MrKyliKGQpLnRyaWdnZXJIYW5kbGVyKCJyZW1vdmUiKTtrKGEpfX1lbHNle3ZhciBsPWIuZm4ucmVtb3ZlO2IuZm4ucmVtb3ZlPWZ1bmN0aW9uKGEsYyl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2lmKCFjKWlmKCFhfHxiLmZpbHRlcihhLFt0aGlzXSkubGVuZ3RoKWIoIioiLHRoaXMpLmFkZChbdGhpc10pLmVhY2goZnVuY3Rpb24oKXtiKHRoaXMpLnRyaWdnZXJIYW5kbGVyKCJyZW1vdmUiKX0pO3JldHVybiBsLmNhbGwoYih0aGlzKSxhLGMpfSl9fWIud2lkZ2V0PWZ1bmN0aW9uKGEsYyxkKXt2YXIgZT1hLnNwbGl0KCIuIilbMF0sZjthPWEuc3BsaXQoIi4iKVsxXTtmPWUrIi0iK2E7aWYoIWQpe2Q9YztjPWIuV2lkZ2V0fWIuZXhwclsiOiJdW2ZdPWZ1bmN0aW9uKGgpe3JldHVybiEhYi5kYXRhKGgsCmEpfTtiW2VdPWJbZV18fHt9O2JbZV1bYV09ZnVuY3Rpb24oaCxnKXthcmd1bWVudHMubGVuZ3RoJiZ0aGlzLl9jcmVhdGVXaWRnZXQoaCxnKX07Yz1uZXcgYztjLm9wdGlvbnM9Yi5leHRlbmQodHJ1ZSx7fSxjLm9wdGlvbnMpO2JbZV1bYV0ucHJvdG90eXBlPWIuZXh0ZW5kKHRydWUsYyx7bmFtZXNwYWNlOmUsd2lkZ2V0TmFtZTphLHdpZGdldEV2ZW50UHJlZml4OmJbZV1bYV0ucHJvdG90eXBlLndpZGdldEV2ZW50UHJlZml4fHxhLHdpZGdldEJhc2VDbGFzczpmfSxkKTtiLndpZGdldC5icmlkZ2UoYSxiW2VdW2FdKX07Yi53aWRnZXQuYnJpZGdlPWZ1bmN0aW9uKGEsYyl7Yi5mblthXT1mdW5jdGlvbihkKXt2YXIgZT10eXBlb2YgZD09PSJzdHJpbmciLGY9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpLGg9dGhpcztkPSFlJiZmLmxlbmd0aD9iLmV4dGVuZC5hcHBseShudWxsLFt0cnVlLGRdLmNvbmNhdChmKSk6ZDtpZihlJiZkLmNoYXJBdCgwKT09PSJfIilyZXR1cm4gaDsKZT90aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZz1iLmRhdGEodGhpcyxhKSxpPWcmJmIuaXNGdW5jdGlvbihnW2RdKT9nW2RdLmFwcGx5KGcsZik6ZztpZihpIT09ZyYmaSE9PWope2g9aTtyZXR1cm4gZmFsc2V9fSk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGc9Yi5kYXRhKHRoaXMsYSk7Zz9nLm9wdGlvbihkfHx7fSkuX2luaXQoKTpiLmRhdGEodGhpcyxhLG5ldyBjKGQsdGhpcykpfSk7cmV0dXJuIGh9fTtiLldpZGdldD1mdW5jdGlvbihhLGMpe2FyZ3VtZW50cy5sZW5ndGgmJnRoaXMuX2NyZWF0ZVdpZGdldChhLGMpfTtiLldpZGdldC5wcm90b3R5cGU9e3dpZGdldE5hbWU6IndpZGdldCIsd2lkZ2V0RXZlbnRQcmVmaXg6IiIsb3B0aW9uczp7ZGlzYWJsZWQ6ZmFsc2V9LF9jcmVhdGVXaWRnZXQ6ZnVuY3Rpb24oYSxjKXtiLmRhdGEoYyx0aGlzLndpZGdldE5hbWUsdGhpcyk7dGhpcy5lbGVtZW50PWIoYyk7dGhpcy5vcHRpb25zPWIuZXh0ZW5kKHRydWUse30sdGhpcy5vcHRpb25zLAp0aGlzLl9nZXRDcmVhdGVPcHRpb25zKCksYSk7dmFyIGQ9dGhpczt0aGlzLmVsZW1lbnQuYmluZCgicmVtb3ZlLiIrdGhpcy53aWRnZXROYW1lLGZ1bmN0aW9uKCl7ZC5kZXN0cm95KCl9KTt0aGlzLl9jcmVhdGUoKTt0aGlzLl90cmlnZ2VyKCJjcmVhdGUiKTt0aGlzLl9pbml0KCl9LF9nZXRDcmVhdGVPcHRpb25zOmZ1bmN0aW9uKCl7cmV0dXJuIGIubWV0YWRhdGEmJmIubWV0YWRhdGEuZ2V0KHRoaXMuZWxlbWVudFswXSlbdGhpcy53aWRnZXROYW1lXX0sX2NyZWF0ZTpmdW5jdGlvbigpe30sX2luaXQ6ZnVuY3Rpb24oKXt9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQudW5iaW5kKCIuIit0aGlzLndpZGdldE5hbWUpLnJlbW92ZURhdGEodGhpcy53aWRnZXROYW1lKTt0aGlzLndpZGdldCgpLnVuYmluZCgiLiIrdGhpcy53aWRnZXROYW1lKS5yZW1vdmVBdHRyKCJhcmlhLWRpc2FibGVkIikucmVtb3ZlQ2xhc3ModGhpcy53aWRnZXRCYXNlQ2xhc3MrIi1kaXNhYmxlZCB1aS1zdGF0ZS1kaXNhYmxlZCIpfSwKd2lkZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWxlbWVudH0sb3B0aW9uOmZ1bmN0aW9uKGEsYyl7dmFyIGQ9YTtpZihhcmd1bWVudHMubGVuZ3RoPT09MClyZXR1cm4gYi5leHRlbmQoe30sdGhpcy5vcHRpb25zKTtpZih0eXBlb2YgYT09PSJzdHJpbmciKXtpZihjPT09ailyZXR1cm4gdGhpcy5vcHRpb25zW2FdO2Q9e307ZFthXT1jfXRoaXMuX3NldE9wdGlvbnMoZCk7cmV0dXJuIHRoaXN9LF9zZXRPcHRpb25zOmZ1bmN0aW9uKGEpe3ZhciBjPXRoaXM7Yi5lYWNoKGEsZnVuY3Rpb24oZCxlKXtjLl9zZXRPcHRpb24oZCxlKX0pO3JldHVybiB0aGlzfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKGEsYyl7dGhpcy5vcHRpb25zW2FdPWM7aWYoYT09PSJkaXNhYmxlZCIpdGhpcy53aWRnZXQoKVtjPyJhZGRDbGFzcyI6InJlbW92ZUNsYXNzIl0odGhpcy53aWRnZXRCYXNlQ2xhc3MrIi1kaXNhYmxlZCB1aS1zdGF0ZS1kaXNhYmxlZCIpLmF0dHIoImFyaWEtZGlzYWJsZWQiLGMpO3JldHVybiB0aGlzfSwKZW5hYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NldE9wdGlvbigiZGlzYWJsZWQiLGZhbHNlKX0sZGlzYWJsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zZXRPcHRpb24oImRpc2FibGVkIix0cnVlKX0sX3RyaWdnZXI6ZnVuY3Rpb24oYSxjLGQpe3ZhciBlPXRoaXMub3B0aW9uc1thXTtjPWIuRXZlbnQoYyk7Yy50eXBlPShhPT09dGhpcy53aWRnZXRFdmVudFByZWZpeD9hOnRoaXMud2lkZ2V0RXZlbnRQcmVmaXgrYSkudG9Mb3dlckNhc2UoKTtkPWR8fHt9O2lmKGMub3JpZ2luYWxFdmVudCl7YT1iLmV2ZW50LnByb3BzLmxlbmd0aDtmb3IodmFyIGY7YTspe2Y9Yi5ldmVudC5wcm9wc1stLWFdO2NbZl09Yy5vcmlnaW5hbEV2ZW50W2ZdfX10aGlzLmVsZW1lbnQudHJpZ2dlcihjLGQpO3JldHVybiEoYi5pc0Z1bmN0aW9uKGUpJiZlLmNhbGwodGhpcy5lbGVtZW50WzBdLGMsZCk9PT1mYWxzZXx8Yy5pc0RlZmF1bHRQcmV2ZW50ZWQoKSl9fX0pKGpRdWVyeSk7
###PACKDATA,FILE_END,/_importbuddy/importbuddy/js/ui.widget.js,importbuddy/js/ui.widget.js
###PACKDATA,FILE_START,/_importbuddy/importbuddy/views/_footer.php,importbuddy/views/_footer.php
PD9waHAKaWYgKCAhIGRlZmluZWQoICdQQl9JTVBPUlRCVUREWScgKSB8fCAoIHRydWUgIT09IFBCX0lNUE9SVEJVRERZICkgKSB7CglkaWUoICc8aHRtbD48L2h0bWw+JyApOwp9Cj8+Cgo8L2Rpdj4KPC9kaXY+CgoKCjw/cGhwIGlmICggcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydkaXNwbGF5X21vZGUnXSA9PSAnbm9ybWFsJyApIHsgPz4KCTxkaXYgY2xhc3M9ImZvb3RlciI+PGJyPjxicj4KCQk8Y2VudGVyPgoJCQk8P3BocAoJCQllY2hvICc8YSBocmVmPSJodHRwOi8vcGx1Z2luYnVkZHkuY29tIj48aW1nIHNyYz0iaW1wb3J0YnVkZHkvaW1hZ2VzL3BiLWxvZ28ucG5nIj48L2E+PGJyPic7CgkJCWlmICggcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydiYl92ZXJzaW9uJ10gIT0gJycpIHsKCQkJCWVjaG8gJzxicj48c3BhbiBjbGFzcz0iZm9vdGVyX3RleHQiPkltcG9ydEJ1ZGR5IHYnIC4gcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydiYl92ZXJzaW9uJ10gLiAnIC0gUG93ZXJlZCBieSA8YSBocmVmPSJodHRwOi8vcGx1Z2luYnVkZHkuY29tIj5CYWNrdXBCdWRkeTwvYT48L3NwYW4+JzsKCQkJfQoJCQk/PgoJCTwvY2VudGVyPgoJPC9kaXY+Cjw/cGhwIH0gPz4KCgoKPC9ib2R5Pgo8L2h0bWw+Cg==
###PACKDATA,FILE_END,/_importbuddy/importbuddy/views/_footer.php,importbuddy/views/_footer.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/views/_header.php,importbuddy/views/_header.php

###PACKDATA,FILE_END,/_importbuddy/importbuddy/views/_header.php,importbuddy/views/_header.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/views/html_1.php,importbuddy/views/html_1.php

###PACKDATA,FILE_END,/_importbuddy/importbuddy/views/html_1.php,importbuddy/views/html_1.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/views/html_2.php,importbuddy/views/html_2.php
PD9waHAKaWYgKCAhIGRlZmluZWQoICdQQl9JTVBPUlRCVUREWScgKSB8fCAoIHRydWUgIT09IFBCX0lNUE9SVEJVRERZICkgKSB7CglkaWUoICc8aHRtbD48L2h0bWw+JyApOwp9CgokcGFnZV90aXRsZSA9ICdVbnppcHBpbmcgQmFja3VwIEZpbGUnOwpyZXF1aXJlX29uY2UoICdfaGVhZGVyLnBocCcgKTsKZWNobyAnPGRpdiBjbGFzcz0id3JhcCI+JzsKCmVjaG8gcGJfYmFja3VwYnVkZHk6OiRjbGFzc2VzWydpbXBvcnQnXS0+c3RhdHVzX2JveCggJ0V4dHJhY3RpbmcgYmFja3VwIFpJUCBmaWxlIHdpdGggSW1wb3J0QnVkZHkgdicgLiBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ2JiX3ZlcnNpb24nXSAuICcuLi4gUG93ZXJlZCBieSBCYWNrdXBCdWRkeS4nICk7CmVjaG8gJzxkaXYgaWQ9InBiX2ltcG9ydGJ1ZGR5X3dvcmtpbmciPjxpbWcgc3JjPSInIC4gcGJfYmFja3VwYnVkZHk6OnBsdWdpbl91cmwoKSAuICcvaW1hZ2VzL2xvYWRpbmdfbGFyZ2UuZ2lmIiB0aXRsZT0iV29ya2luZy4uLiBQbGVhc2Ugd2FpdCBhcyB0aGlzIG1heSB0YWtlIGEgbW9tZW50Li4uIj48L2Rpdj4nOwpwYl9iYWNrdXBidWRkeTo6Zmx1c2goKTsKCgovLyBUcnkgdG8gcHV0IGEgLm1haW50ZW5hbmNlIGZpbGUgaW4gcGxhY2UgZHVyaW5nIGltcG9ydCB0byBoZWxwIHByZXZlbnQgYWdhaW5zdCB2aWV3aW5nIHNpdGUgYmVmb3JlIGltcG9ydCBjb21wbGV0ZXMuCmdlbmVyYXRlX21haW50ZW5hbmNlX2ZpbGUoKTsKCgokcmVzdWx0cyA9IGV4dHJhY3RfZmlsZXMoKTsKCgplY2hvICc8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+alF1ZXJ5KCIjcGJfaW1wb3J0YnVkZHlfd29ya2luZyIpLmhpZGUoKTs8L3NjcmlwdD4nOwoKaWYgKCB0cnVlID09PSAkcmVzdWx0cyApIHsgLy8gTW92ZSBvbiB0byBuZXh0IHN0ZXAuCgllY2hvICc8YnI+PGJyPjxwIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij5GaWxlcyBzdWNjZXNzZnVsbHkgZXh0cmFjdGVkLjwvcD4nOwoJZWNobyAnPGZvcm0gYWN0aW9uPSI/c3RlcD0zIiBtZXRob2Q9cG9zdD4nOwoJZWNobyAnPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ib3B0aW9ucyIgdmFsdWU9IicgLiBodG1sc3BlY2lhbGNoYXJzKCBzZXJpYWxpemUoIHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9ucyApICkgLiAnIiAvPic7CgllY2hvICc8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJwYXNzX2hhc2giIGlkPSJwYXNzX2hhc2giIHZhbHVlPSInIC4gIGh0bWxzcGVjaWFsY2hhcnMoIHBiX2JhY2t1cGJ1ZGR5OjpfUE9TVCggJ3Bhc3NfaGFzaCcgKSApIC4gJyI+JzsKCWVjaG8gJzwvZGl2PjwhLS0gL3dyYXAgLS0+JzsKCWVjaG8gJzxkaXYgY2xhc3M9Im1haW5fYm94X2Zvb3QiPjxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9InN1Ym1pdCIgdmFsdWU9Ik5leHQgU3RlcCAmcmFycjsiIGNsYXNzPSJidXR0b24iIC8+PC9kaXY+JzsKCWVjaG8gJzwvZm9ybT4nOwp9IGVsc2UgewoJcGJfYmFja3VwYnVkZHk6OmFsZXJ0KCAnRmlsZSBleHRyYWN0aW9uIHByb2Nlc3MgZGlkIG5vdCBjb21wbGV0ZSBzdWNjZXNzZnVsbHkuIFVuYWJsZSB0byBjb250aW51ZSB0byBuZXh0IHN0ZXAuIE1hbnVhbGx5IGV4dHJhY3QgdGhlIGJhY2t1cCBaSVAgZmlsZSBhbmQgY2hvb3NlIHRvICJTa2lwIEZpbGUgRXh0cmFjdGlvbiIgZnJvbSB0aGUgYWR2YW5jZWQgb3B0aW9ucyBvbiBTdGVwIDEuJywgdHJ1ZSwgJzkwMDUnICk7CgllY2hvICc8cCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI+PGEgaHJlZj0iaHR0cDovL3BsdWdpbmJ1ZGR5LmNvbS90dXRvcmlhbHMvdW56aXAtYmFja3VwLXppcC1maWxlLWluLWNwYW5lbC8iPkNsaWNrIGhlcmUgZm9yIGluc3RydWN0aW9ucyBvbiBtYW51YWwgWklQIGV4dHJhY3Rpb24gYXMgYSB3b3JrLWFyb3VuZC48L2E+PC9wPic7CgllY2hvICc8L2Rpdj48IS0tIC93cmFwIC0tPic7Cn0KCnJlbmFtZV9odGFjY2Vzc190ZW1wKCk7IC8vIFJlbmFtZSAuaHRhY2Nlc3MgdG8gLmh0YWNjZXNzLmJiX3RlbXAgdW50aWwgZW5kIG9mIG1pZ3JhdGlvbi4KCnJlcXVpcmVfb25jZSggJ19mb290ZXIucGhwJyApOyA/Pgo=
###PACKDATA,FILE_END,/_importbuddy/importbuddy/views/html_2.php,importbuddy/views/html_2.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/views/html_3.php,importbuddy/views/html_3.php

###PACKDATA,FILE_END,/_importbuddy/importbuddy/views/html_3.php,importbuddy/views/html_3.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/views/html_4.php,importbuddy/views/html_4.php
PD9waHAKaWYgKCAhIGRlZmluZWQoICdQQl9JTVBPUlRCVUREWScgKSB8fCAoIHRydWUgIT09IFBCX0lNUE9SVEJVRERZICkgKSB7CglkaWUoICc8aHRtbD48L2h0bWw+JyApOwp9CgokcGFnZV90aXRsZSA9ICdEYXRhYmFzZSBJbXBvcnQnOwpyZXF1aXJlX29uY2UoICdfaGVhZGVyLnBocCcgKTsKZWNobyAnPGRpdiBjbGFzcz0id3JhcCI+JzsKCgokZmFpbGVkID0gZmFsc2U7CgoKZWNobyBwYl9iYWNrdXBidWRkeTo6JGNsYXNzZXNbJ2ltcG9ydCddLT5zdGF0dXNfYm94KCAnSW1wb3J0aW5nIGRhdGFiYXNlIGNvbnRlbnQgd2l0aCBJbXBvcnRCdWRkeSB2JyAuIHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snYmJfdmVyc2lvbiddIC4gJy4uLiBQb3dlcmVkIGJ5IEJhY2t1cEJ1ZGR5LicgKTsKZWNobyAnPGRpdiBpZD0icGJfaW1wb3J0YnVkZHlfd29ya2luZyI+PGltZyBzcmM9IicgLiBwYl9iYWNrdXBidWRkeTo6cGx1Z2luX3VybCgpIC4gJy9pbWFnZXMvbG9hZGluZ19sYXJnZS5naWYiIHRpdGxlPSJXb3JraW5nLi4uIFBsZWFzZSB3YWl0IGFzIHRoaXMgbWF5IHRha2UgYSBtb21lbnQuLi4iPjwvZGl2Pic7CgpwYl9iYWNrdXBidWRkeTo6Zmx1c2goKTsKCgokaW1wb3J0X3Jlc3VsdCA9IGltcG9ydF9kYXRhYmFzZSgpOwoKZWNobyAnPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPmpRdWVyeSgiI3BiX2ltcG9ydGJ1ZGR5X3dvcmtpbmciKS5oaWRlKCk7PC9zY3JpcHQ+JzsKCmlmICggJGltcG9ydF9yZXN1bHRbMF0gPT0gdHJ1ZSApIHsKCWlmICggJGltcG9ydF9yZXN1bHRbMV0gIT09IHRydWUgKSB7IC8vIGlmIG5vdCBmaW5pc2hlZC4KCQlwYl9iYWNrdXBidWRkeTo6YWxlcnQoICdEYXRhYmFzZSB0b28gbGFyZ2UgdG8gaW1wb3J0IGluIG9uZSBzdGVwIHNvIGl0IHdpbGwgYmUgaW1wb3J0ZWQgaW4gY2h1bmtzLiBQbGVhc2UgY29udGludWUgdGhlIHByb2Nlc3MgdW50aWwgdGhpcyBzdGVwIGlzIGZpbmlzaGVkLiBUaGlzIG1heSB0YWtlIGEgZmV3IHN0ZXBzIGRlcGVuZGluZyBvbiB0aGUgc2l6ZSBvZiB5b3VyIGRhdGFiYXNlIGFuZCBzZXJ2ZXIgc3BlZWQuJyApOwoJCWVjaG8gJzxicj4nOwoJCWVjaG8gJ1BsZWFzZSBrZWVwIGNvbnRpbnVpbmcgdW50aWwgeW91ciBkYXRhYmFzZSBoYXMgZnVsbHkgaW1wb3J0ZWQuIFRoaXMgbWF5IHRha2UgYSBmZXcgc3RlcHMuJzsKCQllY2hvICc8Zm9ybSBhY3Rpb249Ij9zdGVwPTQiIG1ldGhvZD1wb3N0Pic7CgkJZWNobyAnPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icGFzc19oYXNoIiBpZD0icGFzc19oYXNoIiB2YWx1ZT0iJyAuIGh0bWxzcGVjaWFsY2hhcnMoIHBiX2JhY2t1cGJ1ZGR5OjpfUE9TVCggJ3Bhc3NfaGFzaCcgKSApIC4gJyI+JzsKCQllY2hvICc8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJkYl9jb250aW51ZSIgdmFsdWU9IicgLiAkaW1wb3J0X3Jlc3VsdFsxXSAuICciPic7CgkJZWNobyAnPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ib3B0aW9ucyIgdmFsdWU9IicgLiBodG1sc3BlY2lhbGNoYXJzKCBzZXJpYWxpemUoIHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9ucyApICkgLiAnIiAvPic7CgkJZWNobyAnPC9kaXY+PCEtLSAvd3JhcCAtLT4nOwoJCWVjaG8gJzxkaXYgY2xhc3M9Im1haW5fYm94X2Zvb3QiPjxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9InN1Ym1pdCIgY2xhc3M9ImJ1dHRvbiIgdmFsdWU9IkNvbnRpbnVlIERhdGFiYXNlIEltcG9ydCAmcmFycjsiIC8+PC9kaXY+JzsKCQllY2hvICc8L2Zvcm0+JzsKCX0gZWxzZSB7CgkJZWNobyAnPHAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiPkluaXRpYWwgZGF0YWJhc2UgaW1wb3J0IGNvbXBsZXRlITwvcD48YnI+JzsKCQllY2hvICdOZXh0IHRoZSBkYXRhIGluIHRoZSBkYXRhYmFzZSB3aWxsIGJlIG1pZ3JhdGVkIHRvIGFjY291bnQgZm9yIGFueSBmaWxlIHBhdGggb3IgVVJMIGNoYW5nZXMuJzsKCQllY2hvICc8Zm9ybSBhY3Rpb249Ij9zdGVwPTUiIG1ldGhvZD1wb3N0Pic7CgkJZWNobyAnPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icGFzc19oYXNoIiBpZD0icGFzc19oYXNoIiB2YWx1ZT0iJyAuIGh0bWxzcGVjaWFsY2hhcnMoIHBiX2JhY2t1cGJ1ZGR5OjpfUE9TVCggJ3Bhc3NfaGFzaCcgKSApIC4gJyI+JzsKCQllY2hvICc8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJvcHRpb25zIiB2YWx1ZT0iJyAuIGh0bWxzcGVjaWFsY2hhcnMoIHNlcmlhbGl6ZSggcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zICkgKSAuICciIC8+JzsKCQllY2hvICc8L2Rpdj48IS0tIC93cmFwIC0tPic7CgkJZWNobyAnPGRpdiBjbGFzcz0ibWFpbl9ib3hfZm9vdCI+PGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0ic3VibWl0IiBjbGFzcz0iYnV0dG9uIiB2YWx1ZT0iTmV4dCBTdGVwICZyYXJyOyIgLz48L2Rpdj4nOwoJCWVjaG8gJzwvZm9ybT4nOwoJfQp9IGVsc2UgewoJZWNobyAnPGJyPjxwIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij5EYXRhYmFzZSBpbXBvcnQgZmFpbGVkLiBQbGVhc2UgdXNlIHlvdXIgYmFjayBidXR0b24gdG8gY29ycmVjdCBhbnkgZXJyb3JzLjwvcD4nOwoJZWNobyAnPC9kaXY+PCEtLSAvd3JhcCAtLT4nOwp9CgoKCnJlcXVpcmVfb25jZSggJ19mb290ZXIucGhwJyApOwo/Pgo=
###PACKDATA,FILE_END,/_importbuddy/importbuddy/views/html_4.php,importbuddy/views/html_4.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/views/html_5.php,importbuddy/views/html_5.php

###PACKDATA,FILE_END,/_importbuddy/importbuddy/views/html_5.php,importbuddy/views/html_5.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/views/html_6.php,importbuddy/views/html_6.php
PD9waHAKaWYgKCAhIGRlZmluZWQoICdQQl9JTVBPUlRCVUREWScgKSB8fCAoIHRydWUgIT09IFBCX0lNUE9SVEJVRERZICkgKSB7CglkaWUoICc8aHRtbD48L2h0bWw+JyApOwp9CgokcGFnZV90aXRsZSA9ICdGaW5hbCBDbGVhbnVwJzsKcmVxdWlyZV9vbmNlKCAnX2hlYWRlci5waHAnICk7CmVjaG8gJzxkaXYgY2xhc3M9IndyYXAiPic7CgplY2hvIHBiX2JhY2t1cGJ1ZGR5OjokY2xhc3Nlc1snaW1wb3J0J10tPnN0YXR1c19ib3goICdDbGVhbmluZyB1cCBhZnRlciByZXN0b3JlIHdpdGggSW1wb3J0QnVkZHkgdicgLiBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ2JiX3ZlcnNpb24nXSAuICcuLi4gUG93ZXJlZCBieSBCYWNrdXBCdWRkeS4nICk7CmVjaG8gJzxkaXYgaWQ9InBiX2ltcG9ydGJ1ZGR5X3dvcmtpbmciPjxpbWcgc3JjPSInIC4gcGJfYmFja3VwYnVkZHk6OnBsdWdpbl91cmwoKSAuICcvaW1hZ2VzL2xvYWRpbmdfbGFyZ2UuZ2lmIiB0aXRsZT0iV29ya2luZy4uLiBQbGVhc2Ugd2FpdCBhcyB0aGlzIG1heSB0YWtlIGEgbW9tZW50Li4uIj48L2Rpdj4nOwoKCi8vIEF0dGVtcHQgdG8gZmx1c2ggdGhlIHBhZ2UgYW5kIHBhdXNlIHNvIGFzc2V0cyAoQ1NTLCBpbWFnZXMpIGNhbiBsb2FkIGJlZm9yZSBhY3R1YWwgZmlsZXMgZ2V0IGRlbGV0ZWQgYnkgY2xlYW51cCgpLgpwYl9iYWNrdXBidWRkeTo6Zmx1c2goKTsKc2xlZXAoIDQgKTsgLy8gUGF1c2Ugc2VydmVyLXNpZGUgYnJpZWZseSB0byBnaXZlIHRpbWUgZm9yIHRoZWlyIGJyb3dzZXIgdG8gbG9hZCBhc3NldHMuCnBiX2JhY2t1cGJ1ZGR5OjpmbHVzaCgpOwoKCi8vIENsZWFudXAhCmNsZWFudXAoKTsKCgplY2hvICc8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+alF1ZXJ5KCIjcGJfaW1wb3J0YnVkZHlfd29ya2luZyIpLmhpZGUoKTs8L3NjcmlwdD4nOwoKZWNobyAnVGhpcyBzdGVwIGhhbmRsZXMgY2xlYW51cCBvZiBmaWxlcy4gSXQgaXMgY29tbW9uIHRvIG5vdCBiZSBhYmxlIHRvIGRlbGV0ZSBzb21lIGZpbGVzIGR1ZSB0byBwZXJtaXNzaW9uIGVycm9ycy4gWW91IG1heSBtYW51YWxseSBkZWxldGUgdGhlbS4gPGI+aW1wb3J0YnVkZHkucGhwPC9iPiBzaG91bGQgYWx3YXlzIGJlIGRlbGV0ZWQgYWZ0ZXIgcmVzdG9yZSBmb3IgYmVzdCBzZWN1cml0eS48YnI+PGJyPic7CgplY2hvICc8aDMgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiPllvdXIgc2l0ZSBpcyByZWFkeSB0byBnbyBhdDxicj48YnI+JzsKZWNobyAnPGEgaHJlZj0iJyAuIHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snaG9tZSddIC4gJyIgdGFyZ2V0PSJfbmV3Ij48Yj4nIC4gcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydob21lJ10gLiAnPC9iPjwvYT48YnI+PGJyPic7CmVjaG8gJ1RoYW5rIHlvdSBmb3IgY2hvb3NpbmcgQmFja3VwQnVkZHkhPC9oMz4nOwoKCmVjaG8gJzwvZGl2PjwvZGl2Pjxicj48YnI+PGJyPic7Cj8+Cg==
###PACKDATA,FILE_END,/_importbuddy/importbuddy/views/html_6.php,importbuddy/views/html_6.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/controllers/ajax/cpanel_createdb.php,importbuddy/controllers/ajax/cpanel_createdb.php
PD9waHAKaWYgKCAhIGRlZmluZWQoICdQQl9JTVBPUlRCVUREWScgKSB8fCAoIHRydWUgIT09IFBCX0lNUE9SVEJVRERZICkgKSB7CglkaWUoICc8aHRtbD48L2h0bWw+JyApOwp9CgpBdXRoOjpyZXF1aXJlX2F1dGhlbnRpY2F0aW9uKCk7IC8vIERpZSBpZiBub3QgbG9nZ2VkIGluLgoKLy9wcmludF9yKCBwYl9iYWNrdXBidWRkeTo6X1BPU1QoKSApOwoKJGNwYW5lbF91c2VyID0gcGJfYmFja3VwYnVkZHk6Ol9QT1NUKCAnY3BhbmVsX3VzZXInICk7CiRjcGFuZWxfcGFzc3dvcmQgPSBwYl9iYWNrdXBidWRkeTo6X1BPU1QoICdjcGFuZWxfcGFzcycgKTsKJGNwYW5lbF9ob3N0ID0gcGJfYmFja3VwYnVkZHk6Ol9QT1NUKCAnY3BhbmVsX3VybCcgKTsKJGNwYW5lbF9wb3J0ID0gcGJfYmFja3VwYnVkZHk6Ol9QT1NUKCAnY3BhbmVsX3BvcnQnICk7CiRkYl9uYW1lID0gcGJfYmFja3VwYnVkZHk6Ol9QT1NUKCAnY3BhbmVsX2RibmFtZScgKTsKJGRiX3VzZXIgPSBwYl9iYWNrdXBidWRkeTo6X1BPU1QoICdjcGFuZWxfZGJ1c2VyJyApOwokZGJfcGFzcyA9IHBiX2JhY2t1cGJ1ZGR5OjpfUE9TVCggJ2NwYW5lbF9kYnBhc3MnICk7CgovLyBOZWVkZWQgZm9yIEhUVFAgcmVxdWVzdHMuCiRyZXF1ZXN0Y29yZV9maWxlID0gcGJfYmFja3VwYnVkZHk6OnBsdWdpbl9wYXRoKCkgLiAnL2xpYi9yZXF1ZXN0Y29yZS9yZXF1ZXN0Y29yZS5jbGFzcy5waHAnOwpyZXF1aXJlX29uY2UoICRyZXF1ZXN0Y29yZV9maWxlICk7CgpyZXF1aXJlX29uY2UoIHBiX2JhY2t1cGJ1ZGR5OjpwbHVnaW5fcGF0aCgpIC4gJy9saWIvY3BhbmVsL2NwYW5lbC5waHAnICk7CiRjcmVhdGVfZGJfcmVzdWx0ID0gcGJfYmFja3VwYnVkZHlfY3BhbmVsOjpjcmVhdGVfZGIoICRjcGFuZWxfdXNlciwgJGNwYW5lbF9wYXNzd29yZCwgJGNwYW5lbF9ob3N0LCAkZGJfbmFtZSwgJGRiX3VzZXIsICRkYl9wYXNzLCAkY3BhbmVsX3BvcnQgKTsKCmlmICggJGNyZWF0ZV9kYl9yZXN1bHQgPT09IHRydWUgKSB7CgllY2hvICdTdWNjZXNzISBDcmVhdGVkIGRhdGFiYXNlLCB1c2VyLCBhbmQgYXNzaWduZWQgdXNlciB0byBkYXRhYmFzZS4nOwp9IGVsc2UgewoJZWNobyAiVW5hYmxlIHRvIGF1dG9tYXRpY2FsbHkgY3JlYXRlIGRhdGFiYXNlIHdpdGggdGhlIHByb3ZpZGVkIHNldHRpbmdzLiBDaGVjayBzZXR0aW5ncyBvciBtYW51YWxseSBjcmVhdGUgdGhlIGRhdGFiYXNlIGZyb20geW91ciBob3N0J3MgY29udHJvbCBwYW5lbC4gU2VlIHR1dG9yaWFsIGF0OiAiOwoJZWNobyAiaHR0cDovL3BsdWdpbmJ1ZGR5LmNvbS90dXRvcmlhbC1jcmVhdGUtZGF0YWJhc2UtaW4tY3BhbmVsL1xuXG4iOwoJZWNobyAiRXJyb3IgZGV0YWlsczpcbiIgLiBpbXBsb2RlKCAiXG4iLCAkY3JlYXRlX2RiX3Jlc3VsdCk7Cn0KCmRpZSgpOwo=
###PACKDATA,FILE_END,/_importbuddy/importbuddy/controllers/ajax/cpanel_createdb.php,importbuddy/controllers/ajax/cpanel_createdb.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/controllers/ajax/create_admin.php,importbuddy/controllers/ajax/create_admin.php
PD9waHAKZGllKCAnPGh0bWw+PC9odG1sPicgKTsgLy8gRElTQUJMRUQuCgpBdXRoOjpyZXF1aXJlX2F1dGhlbnRpY2F0aW9uKCk7IC8vIERpZSBpZiBub3QgbG9nZ2VkIGluLgoKaWYgKCAhIGRlZmluZWQoICdQQl9JTVBPUlRCVUREWScgKSB8fCAoIHRydWUgIT09IFBCX0lNUE9SVEJVRERZICkgKSB7CglkaWUoICc8aHRtbD48L2h0bWw+JyApOwp9CgppZiAoIGZpbGVfZXhpc3RzKCBBQlNQQVRIIC4gJ3dwLWxvYWQucGhwJyApICkgewoJb2Jfc3RhcnQoICdvYl9lcnJvcl9oYW5kbGVyJyApOyAvL1N1cHByZXNzIGVycm9ycwoJcmVxdWlyZV9vbmNlKCBBQlNQQVRIIC4gJ3dwLWxvYWQucGhwJyApOwoJb2JfZW5kX2NsZWFuKCk7Cn0gZWxzZSB7CglkaWUoICdVbmFibGUgdG8gZmluZCBXb3JkUHJlc3MgZmlsZXMgdG8gbG9hZCAod3AtbG9hZC5waHApLiBWZXJpZnkgeW91ciBXb3JkUHJlc3Mgc2l0ZSBpcyBmdW5jdGlvbmFsIGFuZCBhYmxlIHRvIGNvbm5lY3QgdG8gdGhlIGRhdGFiYXNlLicgKTsKfQoKJHVzZXIgPSBnZXRfdXNlcl9ieSggJ2xvZ2luJywgJHNlYXJjaF9zdHJpbmcgKTsKaWYgKCAkdXNlciApIGRpZSgganNvbl9lbmNvZGUoICR1c2VyICkgKTsK
###PACKDATA,FILE_END,/_importbuddy/importbuddy/controllers/ajax/create_admin.php,importbuddy/controllers/ajax/create_admin.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/controllers/ajax/mysql_test.php,importbuddy/controllers/ajax/mysql_test.php
PD9waHAKaWYgKCAhIGRlZmluZWQoICdQQl9JTVBPUlRCVUREWScgKSB8fCAoIHRydWUgIT09IFBCX0lNUE9SVEJVRERZICkgKSB7CglkaWUoICc8aHRtbD48L2h0bWw+JyApOwp9CgpBdXRoOjpyZXF1aXJlX2F1dGhlbnRpY2F0aW9uKCk7IC8vIERpZSBpZiBub3QgbG9nZ2VkIGluLgoKJGNhbl9jb25uZWN0ID0gZmFsc2U7CiRjb25uZWN0X2Vycm9yID0gJ04vQSc7CiRjYW5fc2VsZWN0ID0gZmFsc2U7CiRzZWxlY3RfZXJyb3IgPSAnTi9BJzsKJHdvcmRwcmVzc19leGlzdHMgPSBmYWxzZTsKJGZhaWx1cmVfZW5jb3VudGVyZWQgPSBmYWxzZTsKCmlmICggZmFsc2UgPT09IEBteXNxbF9jb25uZWN0KCAkX1BPU1RbJ3NlcnZlciddLCAkX1BPU1RbJ3VzZXInXSwgJF9QT1NUWydwYXNzJ10gKSApIHsgLy8gQ291bGRudCBjb25uZWN0IHRvIHNlcnZlciBvciBpbnZhbGlkIGNyZWRlbnRpYWxzLgoJJGNvbm5lY3RfZXJyb3IgPSBteXNxbF9lcnJvcigpOwp9IGVsc2UgewoJJGNhbl9jb25uZWN0ID0gdHJ1ZTsKCQoJaWYgKCBmYWxzZSA9PT0gQG15c3FsX3NlbGVjdF9kYiggJF9QT1NUWyduYW1lJ10gKSApIHsgLy8gCgkJJGNhbl9zZWxlY3QgPSBmYWxzZTsKCQkkc2VsZWN0X2Vycm9yID0gbXlzcWxfZXJyb3IoKTsKCX0gZWxzZSB7CgkJJGNhbl9zZWxlY3QgPSB0cnVlOwoJCQoJCS8vIENoZWNrIG51bWJlciBvZiB0YWJsZXMgYWxyZWFkeSBleGlzdGluZyB3aXRoIHRoaXMgcHJlZml4LgoJCSRyZXN1bHQgPSBteXNxbF9xdWVyeSggIlNIT1cgVEFCTEVTIExJS0UgJyIgLiBteXNxbF9yZWFsX2VzY2FwZV9zdHJpbmcoIHN0cl9yZXBsYWNlKCAnXycsICdcXycsICRfUE9TVFsncHJlZml4J10gKSApIC4gIiUnIiApOwoJCWlmICggbXlzcWxfbnVtX3Jvd3MoICRyZXN1bHQgKSA+IDAgKSB7CgkJCSR3b3JkcHJlc3NfZXhpc3RzID0gdHJ1ZTsKCQl9IGVsc2UgewoJCQkkd29yZHByZXNzX2V4aXN0cyA9IGZhbHNlOwoJCX0KCQl1bnNldCggJHJlc3VsdCApOwoJfQp9CgoKLy8gQ0FOIENPTk5FQ1QKZWNobyAnMS4gTG9nZ2luZyBpbiB0byBzZXJ2ZXIgLi4uICc7CmlmICggJGNhbl9jb25uZWN0ID09PSB0cnVlICkgewoJZWNobyAnU3VjY2Vzczxicj4nOwp9IGVsc2UgewoJZWNobyAnPGZvbnQgY29sb3I9cmVkPkZhaWxlZDwvZm9udD48YnI+JzsKCWVjaG8gJyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwO0Vycm9yOiAnIC4gJGNvbm5lY3RfZXJyb3IgLiAnPGJyPic7CgkkZmFpbHVyZV9lbmNvdW50ZXJlZCA9IHRydWU7Cn0KCgovLyBDQU4gQUNDRVNTIERBVEFCQVNFIEJZIE5BTUUKZWNobyAnMi4gVmVyaWZ5aW5nIGRhdGFiYXNlIGFjY2VzcyAmIHBlcm1pc3Npb24g4oCmICc7CmlmICggJGNhbl9zZWxlY3QgPT09IHRydWUgKSB7CgllY2hvICdTdWNjZXNzPGJyPic7Cn0gZWxzZSB7CgllY2hvICc8Zm9udCBjb2xvcj1yZWQ+RmFpbGVkPC9mb250Pjxicj4nOwoJZWNobyAnJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7RXJyb3I6ICcgLiAkc2VsZWN0X2Vycm9yIC4gJzxicj4nOwoJJGZhaWx1cmVfZW5jb3VudGVyZWQgPSB0cnVlOwp9CgoKLy8gRE9FUyBXT1JEUFJFU1MgRVhJU1Q/CmVjaG8gJzMuIFZlcmlmeWluZyBubyBleGlzdGluZyBXUCBkYXRhIC4uLiAnOwppZiAoICRmYWlsdXJlX2VuY291bnRlcmVkID09PSB0cnVlICkgewoJZWNobyAnTi9BPGJyPic7Cn0gZWxzZSB7CglpZiAoICR3b3JkcHJlc3NfZXhpc3RzICE9PSB0cnVlICkgeyAvLyBObyBleGlzdGluZyBXb3JkUHJlc3MuCgkJZWNobyAnU3VjY2Vzczxicj4nOwoJfSBlbHNlIHsgLy8gV29yZFByZXNzIGV4aXN0cy4KCQlpZiAoICRfUE9TVFsnd2lwZV9kYXRhYmFzZSddID09ICcxJyApIHsgLy8gT3B0aW9uIHRvIHdpcGUgSlVTVCBNQVRDSElORyBUSElTIFBSRUZJWCBlbmFibGVkLgoJCQllY2hvICc8Zm9udCBjb2xvcj1yZWQ+V2FybmluZzwvZm9udD48YnI+JzsKCQkJZWNobyAnJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7V29yZFByZXNzIGFscmVhZHkgZXhpc3RzIGluIHRoaXMgZGF0YWJhc2Ugd2l0aCB0aGlzIHByZWZpeC48YnI+JzsKCQkJZWNobyAnJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7PGI+VGFibGVzIHdpdGggbWF0Y2hpbmcgcHJlZml4IHdpbGwgYmUgd2lwZWQgcHJpb3IgdG8gaW1wb3J0LiBVc2UgY2F1dGlvbi48L2I+PGJyPic7CgkJfSBlbHNlIHsgLy8gTm90IHdpcGluZy4gV2UgaGF2ZSBhbiBlcnJvci4KCQkJaWYgKCBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ2lnbm9yZV9zcWxfZXJyb3JzJ10gIT0gZmFsc2UgKSB7CgkJCQllY2hvICc8Zm9udCBjb2xvcj1yZWQ+V2FybmluZzwvZm9udD48YnI+JzsKCQkJCWVjaG8gJyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwO09wdGlvbiBzZXQgdG8gaWdub3JlIGV4aXN0aW5nIHRhYmxlcy4gVXNlIGNhdXRpb24uPGJyPic7CgkJCX0gZWxzZSB7CgkJCQlpZiAoICRfUE9TVFsnd2lwZV9kYXRhYmFzZV9hbGwnXSA9PSAnMScgKSB7IC8vIE9wdGlvbiB0byB3aXBlIEFMTCBUQUJMRVMgZW5hYmxlZC4KCQkJCQllY2hvICcmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDtXYXJuaW5nOiBXb3JkUHJlc3MgYWxyZWFkeSBleGlzdHMgaW4gdGhpcyBkYXRhYmFzZSB3aXRoIHRoaXMgcHJlZml4Ljxicj4nOwoJCQkJfSBlbHNlIHsKCQkJCQllY2hvICcmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDtFcnJvcjogV29yZFByZXNzIGFscmVhZHkgZXhpc3RzIGluIHRoaXMgZGF0YWJhc2Ugd2l0aCB0aGlzIHByZWZpeC48YnI+JzsKCQkJCQkkZmFpbHVyZV9lbmNvdW50ZXJlZCA9IHRydWU7CgkJCQl9CgkJCX0KCQkJCgkJfQoJfQp9CgoKaWYgKCAkX1BPU1RbJ3dpcGVfZGF0YWJhc2VfYWxsJ10gPT0gJzEnICkgeyAvLyBPcHRpb24gdG8gd2lwZSBBTEwgVEFCTEVTIGVuYWJsZWQuCgllY2hvICc8Zm9udCBjb2xvcj1yZWQ+V2FybmluZzwvZm9udD4nOwoJZWNobyAnIC0gPGI+QUxMIFRBQkxFUyB3aWxsIGJlIHdpcGVkIHByaW9yIHRvIGltcG9ydCBiYXNlZCBvbiBzZXR0aW5ncy4gVXNlIGNhdXRpb24uPC9iPjxicj4nOwp9CgoKLy8gUHJlZml4IG9ubHkgaGFzIGFsbG93ZWQgY2hhcnMgY2hlY2suCmlmICggIXByZWdfbWF0Y2goJy9eW2EtejAtOV9dKyQvaScsICRfUE9TVFsncHJlZml4J10gKSApIHsKCWVjaG8gJzxmb250IGNvbG9yPXJlZD5XYXJuaW5nOiBQcmVmaXggY29udGFpbnMgY2hhcmFjdGVycyB0aGF0IGFyZSBub3QgYWxsb3dlZC48L2ZvbnQ+PGJyPic7CgkkZmFpbHVyZV9lbmNvdW50ZXJlZCA9IHRydWU7Cn0KCgovLyBPVkVSQUxMIFJFU1VMVAplY2hvICc0LiBPdmVyYWxsIG15U1FMIHRlc3QgcmVzdWx0IC4uLiAnOwppZiAoICRmYWlsdXJlX2VuY291bnRlcmVkICE9PSB0cnVlICkgewoJZWNobyAnU3VjY2Vzcyc7Cn0gZWxzZSB7CgllY2hvICc8Zm9udCBjb2xvcj1yZWQ+RmFpbGVkPC9mb250Pjxicj4nOwp9CgoKCgpkaWUoKTsKPz4K
###PACKDATA,FILE_END,/_importbuddy/importbuddy/controllers/ajax/mysql_test.php,importbuddy/controllers/ajax/mysql_test.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/controllers/pages/1.php,importbuddy/controllers/pages/1.php
PD9waHAKaWYgKCAhIGRlZmluZWQoICdQQl9JTVBPUlRCVUREWScgKSB8fCAoIHRydWUgIT09IFBCX0lNUE9SVEJVRERZICkgKSB7CglkaWUoICc8aHRtbD48L2h0bWw+JyApOwp9CgovLyBPbiBpbml0aWFsIGxvZ2luIHRvIFN0ZXAgMSAoY2hlY2tzIGZvciBwYXNzd29yZCBmaWVsZCBmcm9tIGF1dGggZm9ybSkgcmVzZXQgYW55IGRhbmdsaW5nIGRlZmF1bHRzIGZyb20gYSBwYXJ0aWFsIHJlc3RvcmUuCmlmICggKCB0cnVlID09PSBBdXRoOjppc19hdXRoZW50aWNhdGVkKCkgKSAmJiAoIHBiX2JhY2t1cGJ1ZGR5OjpfUE9TVCggJ3Bhc3N3b3JkJyApICE9ICcnICkgKSB7CglwYl9iYWNrdXBidWRkeTo6cmVzZXRfZGVmYXVsdHMoKTsKfQoKCi8qKgogKgl1cGxvYWQoKQogKgogKglQcm9jZXNzZXMgdXBsb2FkZWQgYmFja3VwIGZpbGUuCiAqCiAqCUByZXR1cm4JCWFycmF5CQlUcnVlIG9uIHVwbG9hZCBzdWNjZXNzOyBmYWxzZSBvdGhlcndpc2UuCiAqLwpmdW5jdGlvbiB1cGxvYWQoKSB7CgkKCUF1dGg6OnJlcXVpcmVfYXV0aGVudGljYXRpb24oKTsKCQoJaWYgKCBpc3NldCggJF9QT1NUWyd1cGxvYWQnXSApICYmICggJF9QT1NUWyd1cGxvYWQnXSA9PSAnbG9jYWwnICkgKSB7CgkJJHBhdGhfcGFydHMgPSBwYXRoaW5mbyggJF9GSUxFU1snZmlsZSddWyduYW1lJ10gKTsKCQlpZiAoICggc3RydG9sb3dlciggc3Vic3RyKCAkX0ZJTEVTWydmaWxlJ11bJ25hbWUnXSwgMCwgNiApICkgPT0gJ2JhY2t1cCcgKSAmJiAoIHN0cnRvbG93ZXIoICRwYXRoX3BhcnRzWydleHRlbnNpb24nXSApID09ICd6aXAnICkgKSB7CgkJCWlmICggbW92ZV91cGxvYWRlZF9maWxlKCAkX0ZJTEVTWydmaWxlJ11bJ3RtcF9uYW1lJ10sIGJhc2VuYW1lKCAkX0ZJTEVTWydmaWxlJ11bJ25hbWUnXSApICkgKSB7CgkJCQlwYl9iYWNrdXBidWRkeTo6YWxlcnQoICdGaWxlIFVwbG9hZGVkLiBZb3VyIGJhY2t1cCB3YXMgc3VjY2Vzc2Z1bGx5IHVwbG9hZGVkLicgKTsKCQkJCXJldHVybiB0cnVlOwoJCQl9IGVsc2UgewoJCQkJcGJfYmFja3VwYnVkZHk6OmFsZXJ0KCAnU29ycnksIHRoZXJlIHdhcyBhIHByb2JsZW0gdXBsb2FkaW5nIHlvdXIgZmlsZS4nLCB0cnVlICk7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCQl9IGVsc2UgewoJCQlwYl9iYWNrdXBidWRkeTo6YWxlcnQoICdPbmx5IHByb3Blcmx5IG5hbWVkIEJhY2t1cEJ1ZGR5IHppcCBhcmNoaXZlcyB3aXRoIGEgemlwIGV4dGVuc2lvbiBtYXkgYmUgdXBsb2FkZWQuJywgdHJ1ZSApOwoJCQlyZXR1cm4gZmFsc2U7CgkJfQoJfQoJCgkvLyBET1dOTE9BRCBGSUxFIEZST00gU1RBU0ggVE8gTE9DQUwuCglpZiAoIHBiX2JhY2t1cGJ1ZGR5OjpfUE9TVCggJ3VwbG9hZCcgKSA9PSAnc3Rhc2gnICkgewoJCQoJCXBiX2JhY2t1cGJ1ZGR5OjpzZXRfZ3JlZWR5X3NjcmlwdF9saW1pdHMoIHRydWUgKTsKCQkKCQkvKgoJCWVjaG8gJzxwcmU+JzsKCQlwcmludF9yKCAkX1BPU1QgKTsKCQllY2hvICc8L3ByZT4nOwoJCSovCgkJCgkJJHJlcXVlc3Rjb3JlX2ZpbGUgPSBkaXJuYW1lKCBkaXJuYW1lKCBkaXJuYW1lKCBfX0ZJTEVfXyApICkgKSAuICcvbGliL3JlcXVlc3Rjb3JlL3JlcXVlc3Rjb3JlLmNsYXNzLnBocCc7CgkJcmVxdWlyZV9vbmNlKCAkcmVxdWVzdGNvcmVfZmlsZSApOwoJCQoJCSRsaW5rID0gcGJfYmFja3VwYnVkZHk6Ol9QT1NUKCAnbGluaycgKTsKCQkkZGVzdGluYXRpb25fZmlsZSA9IGRpcm5hbWUoIGRpcm5hbWUoIGRpcm5hbWUoIGRpcm5hbWUoIF9fRklMRV9fICkgKSApICkgLiAnLycgLiBiYXNlbmFtZSggcGJfYmFja3VwYnVkZHk6Ol9QT1NUKCAnbGluaycgKSApOwoJCSRkZXN0aW5hdGlvbl9maWxlID0gc3Vic3RyKCAkZGVzdGluYXRpb25fZmlsZSwgMCwgc3RyaXBvcyggJGRlc3RpbmF0aW9uX2ZpbGUsICcuemlwJyApICsgNCApOwoJCQoJCSRfR0VUWydmaWxlJ10gPSBiYXNlbmFtZSggJGRlc3RpbmF0aW9uX2ZpbGUgKTsKCQkKCQkkcmVxdWVzdCA9IG5ldyBSZXF1ZXN0Q29yZSggJGxpbmsgKTsKCQkkcmVxdWVzdC0+c2V0X3dyaXRlX2ZpbGUoICRkZXN0aW5hdGlvbl9maWxlICk7CgkJCgkJZWNobyAnPGRpdiBpZD0icGJfaW1wb3J0YnVkZHlfd29ya2luZyIgc3R5bGU9InBhZGRpbmc6IDIwcHg7Ij5Eb3dubG9hZGluZyBiYWNrdXAgZnJvbSBTdGFzaCB0byBgJyAuICRkZXN0aW5hdGlvbl9maWxlIC4gJ2AuLi48YnI+PGJyPjxpbWcgc3JjPSInIC4gcGJfYmFja3VwYnVkZHk6OnBsdWdpbl91cmwoKSAuICcvaW1hZ2VzL2xvYWRpbmdfbGFyZ2UuZ2lmIiB0aXRsZT0iV29ya2luZy4uLiBQbGVhc2Ugd2FpdCBhcyB0aGlzIG1heSB0YWtlIGEgbW9tZW50Li4uIj48YnI+PGJyPjwvZGl2Pic7CgkJcGJfYmFja3VwYnVkZHk6OmZsdXNoKCk7CgkJCgkJJHJlc3BvbnNlID0gJHJlcXVlc3QtPnNlbmRfcmVxdWVzdCggZmFsc2UgKTsKCQlpZiAoICRyZXNwb25zZSAhPT0gdHJ1ZSApIHsKCQkJcGJfYmFja3VwYnVkZHk6OmFsZXJ0KCAnRXJyb3IgIzg1NDg0NTk1OTguIFVuYWJsZSB0byBkb3dubG9hZCBmaWxlIGZyb20gU3Rhc2guIFlvdSBtYXkgbWFudWFsbHkgZG93bmxvYWQgaXQgYW5kIHVwbG9hZCB0byB0aGUgc2VydmVyIHZpYSBGVFAuJyApOwoJCX0gZWxzZSB7IC8vIE5vIGVycm9yLgoJCQlpZiAoICEgZmlsZV9leGlzdHMoICRkZXN0aW5hdGlvbl9maWxlICkgKSB7CgkJCQlwYl9iYWNrdXBidWRkeTo6YWxlcnQoICdFcnJvciAjMzQ4NDU3NDU4NzguIFN0YXNoIHJldHVybmVkIGEgc3VjY2VzcyBidXQgdGhlIGJhY2t1cCBmaWxlIHdhcyBub3QgZm91bmQgbG9jYWxseS4gQ2hlY2sgdGhpcyBzZXJ2ZXJcJ3MgZGlyZWN0b3J5IHdyaXRlIHBlcm1pc3Npb25zLiBZb3UgbWF5IG1hbnVhbGx5IGRvd25sb2FkIGl0IGFuZCB1cGxvYWQgdG8gdGhlIHNlcnZlciB2aWEgRlRQLicgKTsKCQkJfQoJCX0KCQkKCQllY2hvICc8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+alF1ZXJ5KCIjcGJfaW1wb3J0YnVkZHlfd29ya2luZyIpLmhpZGUoKTs8L3NjcmlwdD4nOwoJCQoJfQp9CgoKLyoqCiAqCWdldF9hcmNoaXZlc19saXN0KCkKICoKICoJUmV0dXJucyBhbiBhcnJheSBvZiBiYWNrdXAgYXJjaGl2ZSB6aXAgZmlsZW5hbWVzIGZvdW5kLgogKgogKglAcmV0dXJuCQlhcnJheQkJQXJyYXkgb2YgLnppcCBmaWxlbmFtZXM7IHBhdGggTk9UIGluY2x1ZGVkLgogKi8KZnVuY3Rpb24gZ2V0X2FyY2hpdmVzX2xpc3QoKSB7CgkKCUF1dGg6OnJlcXVpcmVfYXV0aGVudGljYXRpb24oKTsKCQoJaWYgKCAhaXNzZXQoIHBiX2JhY2t1cGJ1ZGR5OjokY2xhc3Nlc1snemlwYnVkZHknXSApICkgewoJCXJlcXVpcmVfb25jZSggcGJfYmFja3VwYnVkZHk6OnBsdWdpbl9wYXRoKCkgLiAnL2xpYi96aXBidWRkeS96aXBidWRkeS5waHAnICk7CgkJcGJfYmFja3VwYnVkZHk6OiRjbGFzc2VzWyd6aXBidWRkeSddID0gbmV3IHBsdWdpbmJ1ZGR5X3ppcGJ1ZGR5KCBBQlNQQVRIICk7Cgl9CgkKCS8vIExpc3QgYmFja3VwIGZpbGVzIGluIHRoaXMgZGlyZWN0b3J5LgoJJGJhY2t1cF9hcmNoaXZlcyA9IGFycmF5KCk7CgkkYmFja3VwX2FyY2hpdmVzX2dsb2IgPSBnbG9iKCBBQlNQQVRIIC4gJ2JhY2t1cCouemlwJyApOwoJaWYgKCAhaXNfYXJyYXkoICRiYWNrdXBfYXJjaGl2ZXNfZ2xvYiApIHx8IGVtcHR5KCAkYmFja3VwX2FyY2hpdmVzX2dsb2IgKSApIHsgLy8gT24gZmFpbHVyZSBnbG9iKCkgcmV0dXJucyBmYWxzZSBvciBhbiBlbXB0eSBhcnJheSBkZXBlbmRpbmcgb24gc2VydmVyIHNldHRpbmdzIHNvIG5vcm1hbGl6ZSBoZXJlLgoJCSRiYWNrdXBfYXJjaGl2ZXNfZ2xvYiA9IGFycmF5KCk7Cgl9Cglmb3JlYWNoKCAkYmFja3VwX2FyY2hpdmVzX2dsb2IgYXMgJGJhY2t1cF9hcmNoaXZlICkgewoJCSRjb21tZW50ID0gcGJfYmFja3VwYnVkZHk6OiRjbGFzc2VzWyd6aXBidWRkeSddLT5nZXRfY29tbWVudCggJGJhY2t1cF9hcmNoaXZlICk7CgkJJGNvbW1lbnQgPSBwYl9iYWNrdXBidWRkeTo6JGNsYXNzZXNbJ2NvcmUnXS0+bm9ybWFsaXplX2NvbW1lbnRfZGF0YSggJGNvbW1lbnQgKTsKCQkKCQkkdGhpc19hcmNoaXZlID0gYXJyYXkoCgkJCSdmaWxlJwkJPT4JCWJhc2VuYW1lKCAkYmFja3VwX2FyY2hpdmUgKSwKCQkJJ2NvbW1lbnQnCT0+CQkkY29tbWVudCwKCQkpOwoJCSRiYWNrdXBfYXJjaGl2ZXNbXSA9ICR0aGlzX2FyY2hpdmU7Cgl9Cgl1bnNldCggJGJhY2t1cF9hcmNoaXZlc19nbG9iICk7CgkKCQoJcmV0dXJuICRiYWNrdXBfYXJjaGl2ZXM7Cn0KCgovKioKICoJd29yZHByZXNzX2V4aXN0cygpCiAqCiAqCU5vdGlmaWVzIHRoZSB1c2VyIHdpdGggYW4gYWxlcnQgaWYgV29yZFByZXNzIGFwcGVhcnMgdG8gYWxyZWFkeSBleGlzdCBpbiB0aGlzIGRpcmVjdG9yeS4KICoKICoJQHJldHVybgkJYm9vbGVhbgkJVHJ1ZSBpZiBXb3JkUHJlc3MgYWxyZWFkeSBleGlzdHM7IGZhbHNlIG90aGVyd2lzZS4KICovCmZ1bmN0aW9uIHdvcmRwcmVzc19leGlzdHMoKSB7CglpZiAoIGZpbGVfZXhpc3RzKCBBQlNQQVRIIC4gJ3dwLWNvbmZpZy5waHAnICkgKSB7CgkJcmV0dXJuIHRydWU7Cgl9IGVsc2UgewoJCXJldHVybiBmYWxzZTsKCX0KfQoKCmZ1bmN0aW9uIHBocGluaV9leGlzdHMoKSB7CglyZXR1cm4gZmlsZV9leGlzdHMoIEFCU1BBVEggLiAncGhwLmluaScgKTsKfQoKCmZ1bmN0aW9uIGh0YWNjZXNzX2V4aXN0cygpIHsKCXJldHVybiBmaWxlX2V4aXN0cyggQUJTUEFUSCAuICcuaHRhY2Nlc3MnICk7Cn0KCgpmdW5jdGlvbiBpbmRleF9leGlzdHMoKSB7CglpZiAoIGZpbGVfZXhpc3RzKCBBQlNQQVRIIC4gJ2luZGV4Lmh0bScgKSA9PT0gdHJ1ZSApIHsKCQlyZXR1cm4gdHJ1ZTsKCX0KCWlmICggZmlsZV9leGlzdHMoIEFCU1BBVEggLiAnaW5kZXguaHRtbCcgKSA9PT0gdHJ1ZSApIHsKCQlyZXR1cm4gdHJ1ZTsKCX0KfQoKCnBiX2JhY2t1cGJ1ZGR5Ojpsb2FkX3ZpZXcoICdodG1sXzEnICk7CgovLyBMT0cgSU1QT1JUQlVERFkgVkVSU0lPTiBJTkZPUk1BVElPTi4KcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnUnVubmluZyBJbXBvcnRCdWRkeSB2JyAuIHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snYmJfdmVyc2lvbiddIC4gJy4nICk7Cgo/Pgo=
###PACKDATA,FILE_END,/_importbuddy/importbuddy/controllers/pages/1.php,importbuddy/controllers/pages/1.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/controllers/pages/2.php,importbuddy/controllers/pages/2.php

###PACKDATA,FILE_END,/_importbuddy/importbuddy/controllers/pages/2.php,importbuddy/controllers/pages/2.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/controllers/pages/3.php,importbuddy/controllers/pages/3.php
PD9waHAKaWYgKCAhIGRlZmluZWQoICdQQl9JTVBPUlRCVUREWScgKSB8fCAoIHRydWUgIT09IFBCX0lNUE9SVEJVRERZICkgKSB7CglkaWUoICc8aHRtbD48L2h0bWw+JyApOwp9CgpBdXRoOjpyZXF1aXJlX2F1dGhlbnRpY2F0aW9uKCk7IC8vIERpZSBpZiBub3QgbG9nZ2VkIGluLgoKJGRhdGEgPSBhcnJheSgKCSdzdGVwJwkJPT4JCSczJywKKTsKCgpwYl9iYWNrdXBidWRkeTo6c2V0X2dyZWVkeV9zY3JpcHRfbGltaXRzKCB0cnVlICk7CgoKCgpmdW5jdGlvbiBnZXRfcHJldmlvdXNfZGF0YWJhc2Vfc2V0dGluZ3MoKSB7CgkvLyBJZiBpbiBoaWdoIHNlY3VyaXR5IG1vZGUgdGhlbiBubyBndWVzc2VzIG9yIHByZXZpb3VzIHZhbHVlcyB3aWxsIGJlIGdpdmVuLgoJaWYgKCAoIHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snZm9yY2VfaGlnaF9zZWN1cml0eSddICE9IGZhbHNlICkgfHwgKCBpc3NldCggcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydkYXRfZmlsZSddWydoaWdoX3NlY3VyaXR5J10gKSAmJiAoIHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snZGF0X2ZpbGUnXVsnaGlnaF9zZWN1cml0eSddID09PSB0cnVlICkgKSApIHsKCQkkcmVzcG9uc2VbJ3NlcnZlciddID0gJyc7CgkJJHJlc3BvbnNlWydkYXRhYmFzZSddID0gJyc7CgkJJHJlc3BvbnNlWyd1c2VyJ10gPSAnJzsKCQkkcmVzcG9uc2VbJ3Bhc3N3b3JkJ10gPSAnJzsKCQkkcmVzcG9uc2VbJ3ByZWZpeCddID0gJyc7CgkJcmV0dXJuICRyZXNwb25zZTsKCX0gZWxzZSB7IC8vIG5vcm1hbCBtb2RlLiBwcm92aWRlIHByZXZpb3VzIHZhbHVlcy4KCQkkcmVzcG9uc2VbJ3NlcnZlciddID0gcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydkYXRfZmlsZSddWydkYl9zZXJ2ZXInXTsKCQkkcmVzcG9uc2VbJ2RhdGFiYXNlJ10gPSBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ2RhdF9maWxlJ11bJ2RiX25hbWUnXTsKCQkkcmVzcG9uc2VbJ3VzZXInXSA9IHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snZGF0X2ZpbGUnXVsnZGJfdXNlciddOwoJCSRyZXNwb25zZVsncGFzc3dvcmQnXSA9IHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snZGF0X2ZpbGUnXVsnZGJfcGFzc3dvcmQnXTsKCQkkcmVzcG9uc2VbJ3ByZWZpeCddID0gcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydkYXRfZmlsZSddWydkYl9wcmVmaXgnXTsKCQlyZXR1cm4gJHJlc3BvbnNlOwoJfQp9CgoKLyoqCiAqCWdldF9kZWZhdWx0X3ZhbHVlcygpCiAqCiAqCVBhcnNlcyB2YXJpb3VzIHN1Ym1pdHRlZCBvcHRpb25zIGFuZCBzZXR0aW5ncyBmcm9tIHN0ZXAgMS4KICoKICoJQHJldHVybgkJbnVsbAogKi8KZnVuY3Rpb24gZ2V0X2RhdGFiYXNlX2RlZmF1bHRzKCkgewoJLy8gRGF0YWJhc2UgZGVmYXVsdHMuCgkkcmVzcG9uc2VbJ3NlcnZlciddID0gJ2xvY2FsaG9zdCc7CgkkcmVzcG9uc2VbJ2RhdGFiYXNlJ10gPSAnJzsKCSRyZXNwb25zZVsndXNlciddID0gJyc7CgkkcmVzcG9uc2VbJ3Bhc3N3b3JkJ10gPSAnJzsKCSRyZXNwb25zZVsncHJlZml4J10gPSAnd3BfJzsKCSRyZXNwb25zZVsnd2lwZSddID0gcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWyd3aXBlX2RhdGFiYXNlJ107IC8vIGp1c3QgdGFibGVzIG1hdGNoaW5nIHByZWZpeAoJJHJlc3BvbnNlWyd3aXBlX2FsbCddID0gcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWyd3aXBlX2RhdGFiYXNlX2FsbCddOyAvLyBhbGwgdGFibGVzCgkKCS8vIElmIGluIGhpZ2ggc2VjdXJpdHkgbW9kZSB0aGVuIG5vIGd1ZXNzZXMgb3IgcHJldmlvdXMgdmFsdWVzIHdpbGwgYmUgZ2l2ZW4uCglpZiAoIGlzc2V0KCBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ2RhdF9maWxlJ11bJ2hpZ2hfc2VjdXJpdHknXSApICYmICggcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydkYXRfZmlsZSddWydoaWdoX3NlY3VyaXR5J10gPT09IHRydWUgKSApIHsgCgkJcmV0dXJuICRyZXNwb25zZTsKCX0KCQoJJG9sZF9jb25uZWN0X3RpbWVvdXQgPSBAaW5pX2dldCggJ215c3FsLmNvbm5lY3RfdGltZW91dCcgKTsKCSRvbGRfc29ja2V0X3RpbWVvdXQgPSBAaW5pX2dldCggJ2RlZmF1bHRfc29ja2V0X3RpbWVvdXQnICk7CglAaW5pX3NldCggJ215c3FsLmNvbm5lY3RfdGltZW91dCcsIDUgKTsKCUBpbmlfc2V0KCAnZGVmYXVsdF9zb2NrZXRfdGltZW91dCcsIDUgKTsKCQoJaWYgKCBmYWxzZSAhPT0gQG15c3FsX2Nvbm5lY3QoIHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snZGF0X2ZpbGUnXVsnZGJfc2VydmVyJ10sIHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snZGF0X2ZpbGUnXVsnZGJfdXNlciddLCBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ2RhdF9maWxlJ11bJ2RiX3Bhc3N3b3JkJ10gKSApIHsgLy8gQ291bGRudCBjb25uZWN0IHRvIHNlcnZlciBvciBpbnZhbGlkIGNyZWRlbnRpYWxzLgoJCSRyZXNwb25zZVsnc2VydmVyJ10gPSBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ2RhdF9maWxlJ11bJ2RiX3NlcnZlciddOwoJCSRyZXNwb25zZVsndXNlciddID0gcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydkYXRfZmlsZSddWydkYl91c2VyJ107CgkJJHJlc3BvbnNlWydwYXNzd29yZCddID0gcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydkYXRfZmlsZSddWydkYl9wYXNzd29yZCddOwoJCQoJCWlmICggZmFsc2UgIT09IEBteXNxbF9zZWxlY3RfZGIoIHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snZGF0X2ZpbGUnXVsnZGJfbmFtZSddICkgKSB7CgkJCSRyZXNwb25zZVsnZGF0YWJhc2UnXSA9IHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snZGF0X2ZpbGUnXVsnZGJfbmFtZSddOwoJCQkKCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCAiU0hPVyBUQUJMRVMgTElLRSAnIiAuIG15c3FsX3JlYWxfZXNjYXBlX3N0cmluZyggc3RyX3JlcGxhY2UoICdfJywgJ1xfJywgcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydkYXRfZmlsZSddWydkYl9wcmVmaXgnXSApICkgLiAiJSciICk7CgkJCWlmICggbXlzcWxfbnVtX3Jvd3MoICRyZXN1bHQgKSA9PSAwICkgewoJCQkJJHJlc3BvbnNlWydwcmVmaXgnXSA9IHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snZGF0X2ZpbGUnXVsnZGJfcHJlZml4J107CgkJCX0KCQl9Cgl9CgkKCUBpbmlfc2V0KCAnbXlzcWwuY29ubmVjdF90aW1lb3V0JywgJG9sZF9jb25uZWN0X3RpbWVvdXQgKTsKCUBpbmlfc2V0KCAnZGVmYXVsdF9zb2NrZXRfdGltZW91dCcsICRvbGRfc29ja2V0X3RpbWVvdXQgKTsKCQoJcmV0dXJuICRyZXNwb25zZTsKfQoKCi8qKgogKglnZXRfZGVmYXVsdF91cmwoKQogKgogKglSZXR1cm5zIHRoZSBkZWZhdWx0IHNpdGUgVVJMLgogKgogKglAcmV0dXJuCQlzdHJpbmcJCVVSTC4KICovCmZ1bmN0aW9uIGdldF9kZWZhdWx0X3VybCgpIHsKCS8vIEdldCB0aGUgY3VycmVudCBVUkwgb2Ygd2hlcmUgdGhlIGltcG9ydGJ1ZGR5IHRvb2wgaXMgcnVubmluZy4KCSR1cmwgPSBzdHJfcmVwbGFjZSggJF9TRVJWRVJbJ1FVRVJZX1NUUklORyddLCAnJywgJF9TRVJWRVJbJ1JFUVVFU1RfVVJJJ10gKTsKCSR1cmwgPSBzdHJfcmVwbGFjZSggYmFzZW5hbWUoICR1cmwgKSAsICcnLCAkdXJsICk7CgkkdXJsID0gcHJlZ19yZXBsYWNlKCAnfC8qJHwnLCAnJywgJHVybCApOyAgLy8gc3RyaXBzIHRyYWlsaW5nIHNsYXNoKGVzKS4KCSR1cmwgPSAnaHR0cDovLycgLiAkX1NFUlZFUlsnSFRUUF9IT1NUJ10gLiAkdXJsOwoJCglyZXR1cm4gJHVybDsKfQoKCmZ1bmN0aW9uIGdldF9kZWZhdWx0X2RvbWFpbigpIHsKCXByZWdfbWF0Y2goIi9eKGh0dHA6XC9cLyk/KFteXC9dKykvaSIsIGdldF9kZWZhdWx0X3VybCgpLCAkZG9tYWluICk7CglyZXR1cm4gJGRvbWFpblsyXTsKfQoKCgoKcGJfYmFja3VwYnVkZHk6OmxvYWRfdmlldyggJ2h0bWxfMycsICRkYXRhICk7Cj8+Cg==
###PACKDATA,FILE_END,/_importbuddy/importbuddy/controllers/pages/3.php,importbuddy/controllers/pages/3.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/controllers/pages/4.php,importbuddy/controllers/pages/4.php

###PACKDATA,FILE_END,/_importbuddy/importbuddy/controllers/pages/4.php,importbuddy/controllers/pages/4.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/controllers/pages/5.php,importbuddy/controllers/pages/5.php

###PACKDATA,FILE_END,/_importbuddy/importbuddy/controllers/pages/5.php,importbuddy/controllers/pages/5.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/controllers/pages/6.php,importbuddy/controllers/pages/6.php
PD9waHAKaWYgKCAhIGRlZmluZWQoICdQQl9JTVBPUlRCVUREWScgKSB8fCAoIHRydWUgIT09IFBCX0lNUE9SVEJVRERZICkgKSB7CglkaWUoICc8aHRtbD48L2h0bWw+JyApOwp9CgpBdXRoOjpyZXF1aXJlX2F1dGhlbnRpY2F0aW9uKCk7IC8vIERpZSBpZiBub3QgbG9nZ2VkIGluLgoKJGRhdGEgPSBhcnJheSgKCSdzdGVwJwkJPT4JCSc2JywKKTsKCgoKcGJfYmFja3VwYnVkZHk6OnNldF9ncmVlZHlfc2NyaXB0X2xpbWl0cyggdHJ1ZSApOwoKCgoKLyoJY2xlYW51cCgpCiAqCQogKglDbGVhbnMgdXAgYW55IHRlbXBvcmFyeSBmaWxlcyBsZWZ0IGJ5IGltcG9ydGJ1ZGR5LgogKgkKICoJQHJldHVybgkJbnVsbAogKi8KZnVuY3Rpb24gY2xlYW51cCgpIHsKCWlmICggaXNzZXQoICRfUE9TVFsnZGVsZXRlX2JhY2t1cCddICkgJiYgKCAkX1BPU1RbJ2RlbGV0ZV9iYWNrdXAnXSA9PSAnMScgKSApIHsKCQlyZW1vdmVfZmlsZSggcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydmaWxlJ10sICdiYWNrdXAgLlpJUCBmaWxlICgnIC4gcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydmaWxlJ10gLiAnKScsIHRydWUgKTsKCX0KCQoJaWYgKCBpc3NldCggJF9QT1NUWydkZWxldGVfdGVtcCddICkgJiYgKCAkX1BPU1RbJ2RlbGV0ZV90ZW1wJ10gPT0gJzEnICkgKSB7CgkJLy8gRnVsbCBiYWNrdXAgLnNxbCBmaWxlCgkJcmVtb3ZlX2ZpbGUoIEFCU1BBVEggLiAnd3AtY29udGVudC91cGxvYWRzL3RlbXBfJy5wYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ3ppcF9pZCddLicvZGIuc3FsJywgJ2RiLnNxbCAoYmFja3VwIGRhdGFiYXNlIGR1bXApJywgZmFsc2UgKTsKCQlyZW1vdmVfZmlsZSggQUJTUEFUSCAuICd3cC1jb250ZW50L3VwbG9hZHMvdGVtcF8nLnBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snemlwX2lkJ10uJy9kYl8xLnNxbCcsICdkYl8xLnNxbCAoYmFja3VwIGRhdGFiYXNlIGR1bXApJywgZmFsc2UgKTsKCQlyZW1vdmVfZmlsZSggQUJTUEFUSCAuICd3cC1jb250ZW50L3VwbG9hZHMvYmFja3VwYnVkZHlfdGVtcC8nLnBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snemlwX2lkJ10uJy9kYl8xLnNxbCcsICdkYl8xLnNxbCAoYmFja3VwIGRhdGFiYXNlIGR1bXApJywgZmFsc2UgKTsKCQkvLyBEQiBvbmx5IHNxbCBmaWxlCgkJcmVtb3ZlX2ZpbGUoIEFCU1BBVEggLiAnZGIuc3FsJywgJ2RiLnNxbCAoYmFja3VwIGRhdGFiYXNlIGR1bXApJywgZmFsc2UgKTsKCQlyZW1vdmVfZmlsZSggQUJTUEFUSCAuICdkYl8xLnNxbCcsICdkYl8xLnNxbCAoYmFja3VwIGRhdGFiYXNlIGR1bXApJywgZmFsc2UgKTsKCQkKCQkvLyBGdWxsIGJhY2t1cCBkYXQgZmlsZQoJCXJlbW92ZV9maWxlKCBBQlNQQVRIIC4gJ3dwLWNvbnRlbnQvdXBsb2Fkcy90ZW1wXycgLiBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ3ppcF9pZCddIC4gJy9iYWNrdXBidWRkeV9kYXQucGhwJywgJ2JhY2t1cGJ1ZGR5X2RhdC5waHAgKGJhY2t1cCBkYXRhIGZpbGUpJywgZmFsc2UgKTsKCQlyZW1vdmVfZmlsZSggQUJTUEFUSCAuICd3cC1jb250ZW50L3VwbG9hZHMvYmFja3VwYnVkZHlfdGVtcC8nIC4gcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWyd6aXBfaWQnXSAuICcvYmFja3VwYnVkZHlfZGF0LnBocCcsICdiYWNrdXBidWRkeV9kYXQucGhwIChiYWNrdXAgZGF0YSBmaWxlKScsIGZhbHNlICk7CgkJLy8gREIgb25seSBkYXQgZmlsZQoJCXJlbW92ZV9maWxlKCBBQlNQQVRIIC4gJ2JhY2t1cGJ1ZGR5X2RhdC5waHAnLCAnYmFja3VwYnVkZHlfZGF0LnBocCAoYmFja3VwIGRhdGEgZmlsZSknLCBmYWxzZSApOwoJCQoJCXJlbW92ZV9maWxlKCBBQlNQQVRIIC4gJ3dwLWNvbnRlbnQvdXBsb2Fkcy9iYWNrdXBidWRkeV90ZW1wLycgLiBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ3ppcF9pZCddIC4gJy8nLCAnVGVtcG9yYXJ5IGJhY2t1cCBkaXJlY3RvcnkuJywgZmFsc2UgKTsKCQkKCQlyZW1vdmVfZmlsZSggQUJTUEFUSCAuICdpbXBvcnRidWRkeS8nLCAnSW1wb3J0QnVkZHkgRGlyZWN0b3J5JywgdHJ1ZSApOwoJCXJlbW92ZV9maWxlKCBBQlNQQVRIIC4gJ2ltcG9ydGJ1ZGR5L19zZXR0aW5nc19kYXQucGhwJywgJ19zZXR0aW5nc19kYXQucGhwICh0ZW1wb3Jhcnkgc2V0dGluZ3MgZmlsZSknLCBmYWxzZSApOwoJfQoJaWYgKCBpc3NldCggJF9QT1NUWydkZWxldGVfaW1wb3J0YnVkZHknXSApICYmICggJF9QT1NUWydkZWxldGVfaW1wb3J0YnVkZHknXSA9PSAnMScgKSApIHsKCQlyZW1vdmVfZmlsZSggJ2ltcG9ydGJ1ZGR5LnBocCcsICdpbXBvcnRidWRkeS5waHAgKHRoaXMgc2NyaXB0KScsIHRydWUgKTsKCX0KCS8vIERlbGV0ZSBsb2cgZmlsZSBsYXN0LgoJaWYgKCBpc3NldCggJF9QT1NUWydkZWxldGVfaW1wb3J0YnVkZHlsb2cnXSApICYmICggJF9QT1NUWydkZWxldGVfaW1wb3J0YnVkZHlsb2cnXSA9PSAnMScgKSApIHsKCQlyZW1vdmVfZmlsZSggJ2ltcG9ydGJ1ZGR5LScgLiBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ2xvZ19zZXJpYWwnXSAuICcudHh0JywgJ2ltcG9ydGJ1ZGR5LScgLiBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ2xvZ19zZXJpYWwnXSAuICcudHh0IGxvZyBmaWxlJywgdHJ1ZSApOwoJfQp9CgoKCi8vIFVzZWQgYnkgY2xlYW51cCgpIGFib3ZlLgpmdW5jdGlvbiByZW1vdmVfZmlsZSggJGZpbGUsICRkZXNjcmlwdGlvbiwgJGVycm9yX29uX21pc3NpbmcgPSBmYWxzZSApIHsKCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdtZXNzYWdlJywgJ0RlbGV0aW5nIGAnIC4gJGRlc2NyaXB0aW9uIC4gJ2AuLi4nICk7CgoJQGNobW9kKCAkZmlsZSwgMDc1NSApOyAvLyBIaWdoIHBlcm1pc3Npb25zIHRvIGRlbGV0ZS4KCQoJaWYgKCBpc19kaXIoICRmaWxlICkgKSB7IC8vIGRpcmVjdG9yeS4KCQlwYl9iYWNrdXBidWRkeTo6JGZpbGVzeXN0ZW0tPnVubGlua19yZWN1cnNpdmUoICRmaWxlICk7CgkJaWYgKCBmaWxlX2V4aXN0cyggJGZpbGUgKSApIHsKCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2Vycm9yJywgJ1VuYWJsZSB0byBkZWxldGUgZGlyZWN0b3J5OiBgJyAuICRkZXNjcmlwdGlvbiAuICdgLiBZb3Ugc2hvdWxkIG1hbnVhbGx5IGRlbGV0ZSBpdC4nICk7CgkJfSBlbHNlIHsKCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ21lc3NhZ2UnLCAnRGVsZXRlZC4nLCBmYWxzZSApOyAvLyBObyBsb2dnaW5nIG9mIHRoaXMgYWN0aW9uIHRvIHByZXZlbnQgcmVjcmVhdGluZyBsb2cuCgkJfQoJfSBlbHNlIHsgLy8gZmlsZQoJCWlmICggZmlsZV9leGlzdHMoICRmaWxlICkgKSB7CgkJCWlmICggQHVubGluayggJGZpbGUgKSAhPSAxICkgewoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2Vycm9yJywgJ1VuYWJsZSB0byBkZWxldGUgZmlsZTogYCcgLiAkZGVzY3JpcHRpb24gLiAnYC4gWW91IHNob3VsZCBtYW51YWxseSBkZWxldGUgaXQuJyApOwoJCQl9IGVsc2UgewoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ21lc3NhZ2UnLCAnRGVsZXRlZC4nLCBmYWxzZSApOyAvLyBObyBsb2dnaW5nIG9mIHRoaXMgYWN0aW9uIHRvIHByZXZlbnQgcmVjcmVhdGluZyBsb2cuCgkJCX0KCQl9Cgl9Cn0gLy8gRW5kIHJlbW92ZV9maWxlKCkuCgoKCgoKaWYgKCAkbW9kZSA9PSAnaHRtbCcgKSB7CglwYl9iYWNrdXBidWRkeTo6bG9hZF92aWV3KCAnaHRtbF82JywgJGRhdGEgKTsKfSBlbHNlIHsgLy8gQVBJIG1vZGUuCgljbGVhbnVwKCk7Cn0KPz4K
###PACKDATA,FILE_END,/_importbuddy/importbuddy/controllers/pages/6.php,importbuddy/controllers/pages/6.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/controllers/pages/create_admin.php,importbuddy/controllers/pages/create_admin.php
PD9waHAKZGllKCk7CgppZiAoICEgZGVmaW5lZCggJ1BCX0lNUE9SVEJVRERZJyApIHx8ICggdHJ1ZSAhPT0gUEJfSU1QT1JUQlVERFkgKSApIHsKCWRpZSggJzxodG1sPjwvaHRtbD4nICk7Cn0KCkF1dGg6OnJlcXVpcmVfYXV0aGVudGljYXRpb24oKTsgLy8gRGllIGlmIG5vdCBsb2dnZWQgaW4uCgo/Pgo8ZGl2IGlkPSJwYl9jcmVhdGVhZG1pbl9tb2RhbCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7IGhlaWdodDogOTAlOyI+CgkJPGRpdiBjbGFzcz0ibW9kYWwiPgoJCQk8ZGl2IGNsYXNzPSJtb2RhbF9oZWFkZXIiPgoJCQkJPGEgY2xhc3M9Im1vZGFsX2Nsb3NlIj5YPC9hPgoJCQkJPGgyPlNlcnZlciBJbmZvcm1hdGlvbjwvaDI+CgkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJtb2RhbF9jb250ZW50Ij4KCQkJCQoJCQkJCgkJCQkKCQkJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KCQkJCQlqUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkgewoJCQkJCQlqUXVlcnkoICcjY3JlYXRlYWRtaW5fZm9ybScgKS5zdWJtaXQoZnVuY3Rpb24oKXsKCQkJCQkJCQoJCQkJCQkJalF1ZXJ5KCAnLmNyZWF0ZWFkbWluX2xvYWRpbmcnICkuc2hvdygpOwoJCQkJCQkJalF1ZXJ5LnBvc3QoJ2ltcG9ydGJ1ZGR5LnBocD9hamF4PWNyZWF0ZV9hZG1pbicsCgkJCQkJCQkJalF1ZXJ5KCAnI2NyZWF0ZWFkbWluX2Zvcm0nICkuc2VyaWFsaXplKCksIGZ1bmN0aW9uKGRhdGEpIHsKCQkJCQkJCQkJCgkJCQkJCQkJCWRhdGEgPSBqUXVlcnkudHJpbSggZGF0YSApOwoJCQkJCQkJCQlqUXVlcnkoICcuY3JlYXRlYWRtaW5fbG9hZGluZycgKS5oaWRlKCk7CgkJCQkJCQkJCQoJCQkJCQkJCQlpZiAoIGRhdGEgPT0gJzEnICkgewoJCQkJCQkJCQkJYWxlcnQoICdTdWNjZXNzJyApOwoJCQkJCQkJCQl9IGVsc2UgewoJCQkJCQkJCQkJYWxlcnQoICdFcnJvcjogJyArIGRhdGEgKTsKCQkJCQkJCQkJfQoJCQkJCQkJCQkKCQkJCQkJCQl9CgkJCQkJCQkpOwoJCQkJCQkJCgkJCQkJCQlyZXR1cm4gZmFsc2U7CgkJCQkJCQkKCQkJCQkJfSk7CgkJCQkJfSk7CgkJCQk8L3NjcmlwdD4KCQkJCQoJCQkJPGZvcm0gaWQ9ImNyZWF0ZWFkbWluX2Zvcm0iPgoJCQkJCVVzZXJuYW1lOiA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0idXNlcm5hbWUiPgoJCQkJCUVtYWlsOiA8aW5wdXQgdHlwZT0iZW1haWwiIG5hbWU9ImVtYWlsIj4KCQkJCQlQYXNzd29yZDogPGlucHV0IHR5cGU9InBhc3N3b3JkIiBuYW1lPSJwYXNzd29yZCI+CgkJCQkJQ29uZmlybSBQYXNzd29yZDogPGlucHV0IHR5cGU9InBhc3N3b3JkIiBuYW1lPSJwYXNzd29yZF9jb25maXJtIj4KCQkJCQk8aW5wdXQgdHlwZT0ic3VibWl0IiBuYW1lPSJzdWJtaXQiIHZhbHVlPSJDcmVhdGUgQWRtaW4gVXNlciIgY2xhc3M9ImJ1dHRvbiI+CgkJCQkJPHNwYW4gY2xhc3M9ImNyZWF0ZWFkbWluX2xvYWRpbmciIHN0eWxlPSJkaXNwbGF5OiBub25lOyBtYXJnaW4tbGVmdDogMTBweDsiPjxpbWcgc3JjPSI8P3BocCBlY2hvIHBiX2JhY2t1cGJ1ZGR5OjpwbHVnaW5fdXJsKCk7ID8+L2ltYWdlcy9sb2FkaW5nLmdpZiIgYWx0PSInIC4gX18oJ0xvYWRpbmcuLi4nLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSAuICciIHRpdGxlPSInIC4gX18oJ0xvYWRpbmcuLi4nLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSAuICciIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgc3R5bGU9InZlcnRpY2FsLWFsaWduOiAtM3B4OyI+PC9zcGFuPgoJCQkJPC9mb3JtPgoJCQkJCgkJCQkKCQk8L2Rpdj4KCTwvZGl2Pgo8L2Rpdj4K
###PACKDATA,FILE_END,/_importbuddy/importbuddy/controllers/pages/create_admin.php,importbuddy/controllers/pages/create_admin.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/controllers/pages/default.php,importbuddy/controllers/pages/default.php
PD9waHAKaWYgKCAhIGRlZmluZWQoICdQQl9JTVBPUlRCVUREWScgKSB8fCAoIHRydWUgIT09IFBCX0lNUE9SVEJVRERZICkgKSB7CglkaWUoICc8aHRtbD48L2h0bWw+JyApOwp9CgoKCi8qKioqKiogQkVHSU4gQVVUSEVOVElDQVRJT04gKioqKiovCnJlcXVpcmVfb25jZSggQUJTUEFUSCAuICdpbXBvcnRidWRkeS9jbGFzc2VzL2F1dGgucGhwJyApOwpBdXRoOjpjaGVjaygpOwovKioqKioqIEVORCBBVVRIRU5USUNBVElPTiAqKioqKi8KCgoKJG1vZGUgPSAnaHRtbCc7CgoKCi8vIFJlZ2lzdGVyIFBIUCBzaHV0ZG93biBmdW5jdGlvbiB0byBoZWxwIGNhdGNoIGFuZCBsb2cgZmF0YWwgUEhQIGVycm9ycyBkdXJpbmcgYmFja3VwLgpyZWdpc3Rlcl9zaHV0ZG93bl9mdW5jdGlvbiggJ3NodXRkb3duX2Z1bmN0aW9uJyApOwovL2Vycm9yX3JlcG9ydGluZyggRV9FUlJPUiB8IEVfV0FSTklORyB8IEVfUEFSU0UgfCBFX05PVElDRSApOyAvLyBISUdICgovKglzaHV0ZG93bl9mdW5jdGlvbigpCiAqCQogKglVc2VkIGZvciBjYXRjaGluZyBmYXRhbCBQSFAgZXJyb3JzIGR1cmluZyBiYWNrdXAgdG8gd3JpdGUgdG8gbG9nIGZvciBkZWJ1Z2dpbmcuCiAqCQogKglAcmV0dXJuCQludWxsCiAqLwpmdW5jdGlvbiBzaHV0ZG93bl9mdW5jdGlvbigpIHsKCQoJCgkvLyBHZXQgZXJyb3IgbWVzc2FnZS4KCS8vIEVycm9yIHR5cGVzOiBodHRwOi8vcGhwLm5ldC9tYW51YWwvZW4vZXJyb3JmdW5jLmNvbnN0YW50cy5waHAKCSRlID0gZXJyb3JfZ2V0X2xhc3QoKTsKCWlmICggJGUgPT09IE5VTEwgKSB7IC8vIE5vIGVycm9yIG9mIGFueSBraW5kLgoJCXJldHVybjsKCX0gZWxzZSB7IC8vIFNvbWUgdHlwZSBvZiBlcnJvci4KCQlpZiAoICFpc19hcnJheSggJGUgKSB8fCAoICRlWyd0eXBlJ10gIT0gRV9FUlJPUiApICYmICggJGVbJ3R5cGUnXSAhPSBFX1VTRVJfRVJST1IgKSApIHsgLy8gUmV0dXJuIGlmIG5vdCBhIGZhdGFsIGVycm9yLgoJCQkvL2VjaG8gJzwhLS0gJyAuIHByaW50X3IoICRlLCB0cnVlICkgLiAnIC0tPicgLiAiXG4iOwoJCQlyZXR1cm47CgkJfQoJfQoJCgkKCS8vIENhbGN1bGF0ZSBsb2cgZGlyZWN0b3J5LgoJaWYgKCBkZWZpbmVkKCAnUEJfU1RBTkRBTE9ORScgKSAmJiBQQl9TVEFOREFMT05FID09PSB0cnVlICkgewoJCSRsb2dfZGlyZWN0b3J5ID0gQUJTUEFUSCAuICdpbXBvcnRidWRkeS8nOwoJfSBlbHNlIHsKCQkkbG9nX2RpcmVjdG9yeSA9IHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snbG9nX2RpcmVjdG9yeSddOwoJfQoJJG1haW5fZmlsZSA9ICRsb2dfZGlyZWN0b3J5IC4gJ2xvZy0nIC4gcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydsb2dfc2VyaWFsJ10gLiAnLnR4dCc7CgkKCQoJLy8gRGV0ZXJtaW5lIGlmIHdyaXRpbmcgdG8gYSBzZXJpYWwgbG9nLgoJaWYgKCBwYl9iYWNrdXBidWRkeTo6JF9zdGF0dXNfc2VyaWFsICE9ICcnICkgewoJCSRzZXJpYWwgPSBwYl9iYWNrdXBidWRkeTo6JF9zdGF0dXNfc2VyaWFsOwoJCSRzZXJpYWxfZmlsZSA9ICRsb2dfZGlyZWN0b3J5IC4gJ3N0YXR1cy0nIC4gJHNlcmlhbCAuICdfJyAuIHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snbG9nX3NlcmlhbCddIC4gJy50eHQnOwoJCSR3cml0ZV9zZXJpYWwgPSB0cnVlOwoJfSBlbHNlIHsKCQkkd3JpdGVfc2VyaWFsID0gZmFsc2U7Cgl9CgkKCQoJLy8gRm9ybWF0IGVycm9yIG1lc3NhZ2UuCgkkZV9zdHJpbmcgPSAnLS0tLS0gRkFUQUwgRVJST1IgLS0tLS0gQSBmYXRhbCBQSFAgZXJyb3Igd2FzIGVuY291bnRlcmVkOiAnOwoJZm9yZWFjaCggKGFycmF5KSRlIGFzICRlX2xpbmVfdGl0bGUgPT4gJGVfbGluZSApIHsKCQkkZV9zdHJpbmcgLj0gJGVfbGluZV90aXRsZSAuICcgPT4gJyAuICRlX2xpbmUgLiAiOyAiOwoJfQoJJGVfc3RyaW5nID0gcnRyaW0oICRlX3N0cmluZywgJzsgJyApIC4gJy4nOwoJCgkvLyBXcml0ZSB0byBsb2cuCglAZmlsZV9wdXRfY29udGVudHMoICRtYWluX2ZpbGUsICRlX3N0cmluZywgRklMRV9BUFBFTkQgKTsKCQoJLy8gSU1QT1JUQlVERFkKCSRzdGF0dXMgPSBwYl9iYWNrdXBidWRkeTo6JGZvcm1hdC0+ZGF0ZSggdGltZSgpICkgLiAiXHQiIC4KCQkJCXNwcmludGYoICIlMDEuMmYiLCByb3VuZCggbWljcm90aW1lKCB0cnVlICkgLSBwYl9iYWNrdXBidWRkeTo6JHN0YXJ0X3RpbWUsIDIgKSApIC4gIlx0IiAuCgkJCQlzcHJpbnRmKCAiJTAxLjJmIiwgcm91bmQoIG1lbW9yeV9nZXRfcGVha191c2FnZSgpIC8gMTA0ODU3NiwgMiApICkgLiAiXHQiIC4KCQkJCSdlcnJvcicgLiAiXHRcdCIgLgoJCQkJc3RyX3JlcGxhY2UoIGNocig5KSwgJyAgICcsICRlX3N0cmluZyApCgkJCTsKCSRzdGF0dXMgPSBzdHJfcmVwbGFjZSggJ1xcJywgJy8nLCAkc3RhdHVzICk7CgllY2hvICc8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+cGJfc3RhdHVzX2FwcGVuZCgiJyAuIHN0cl9yZXBsYWNlKCAnIicsICcmcXVvdDsnLCAkc3RhdHVzICkgLiAnIik7PC9zY3JpcHQ+JzsKCQp9IC8vIEVuZCBzaHV0ZG93bl9mdW5jdGlvbi4KCgoKLyoqKioqKioqKiogQUpBWCAqKioqKioqKioqLwoKJGFqYXggPSAnJzsKaWYgKCBwYl9iYWNrdXBidWRkeTo6X1BPU1QoICdhamF4JyApICE9ICcnICkgewoJJGFqYXggPSBwYl9iYWNrdXBidWRkeTo6X1BPU1QoICdhamF4JyApOwp9IGVsc2VpZiAoIHBiX2JhY2t1cGJ1ZGR5OjpfR0VUKCAnYWpheCcgKSAhPSAnJyApIHsKCSRhamF4ID0gcGJfYmFja3VwYnVkZHk6Ol9HRVQoICdhamF4JyApOwp9CmlmICggJGFqYXggIT0gJycgKSB7CQoJCglBdXRoOjpyZXF1aXJlX2F1dGhlbnRpY2F0aW9uKCk7IC8vIERpZSBpZiBub3QgbG9nZ2VkIGluLgoJCgkkcGFnZSA9IEFCU1BBVEggLiAnaW1wb3J0YnVkZHkvY29udHJvbGxlcnMvYWpheC8nIC4gJGFqYXggLiAnLnBocCc7CglpZiAoIGZpbGVfZXhpc3RzKCAkcGFnZSApICkgewoJCXJlcXVpcmVfb25jZSggJHBhZ2UgKTsKCX0gZWxzZSB7CgkJZWNobyAne0Vycm9yOiBJbnZhbGlkIEFKQVggYWN0aW9uIGAnIC4gaHRtbGVudGl0aWVzKCAkYWpheCApIC4gJ2AufSc7Cgl9CgkKLyoqKioqKioqKiogUEFHRVMgKioqKioqKioqKi8KfSBlbHNlaWYgKCAoIHBiX2JhY2t1cGJ1ZGR5OjpfR0VUKCAnc3RlcCcgKSAhPSAnJyApICYmIGlzX251bWVyaWMoIHBiX2JhY2t1cGJ1ZGR5OjpfR0VUKCAnc3RlcCcgKSApICkgewoJCgkkc3RlcCA9IHBiX2JhY2t1cGJ1ZGR5OjpfR0VUKCAnc3RlcCcgKTsKCWlmICggJHN0ZXAgPiAxICkgewoJCUF1dGg6OnJlcXVpcmVfYXV0aGVudGljYXRpb24oKTsgLy8gRGllIGlmIG5vdCBsb2dnZWQgaW4uCgl9CgkKCSRwYWdlID0gQUJTUEFUSCAuICdpbXBvcnRidWRkeS9jb250cm9sbGVycy9wYWdlcy8nIC4gcGJfYmFja3VwYnVkZHk6Ol9HRVQoICdzdGVwJyApIC4gJy5waHAnOwoJaWYgKCBmaWxlX2V4aXN0cyggJHBhZ2UgKSApIHsKCQkkc3RlcCA9IHBiX2JhY2t1cGJ1ZGR5OjpfR0VUKCAnc3RlcCcgKTsKCQllY2hvICc8IS0tIFN0YXJ0aW5nIHN0ZXAgJyAuIGh0bWxlbnRpdGllcyggcGJfYmFja3VwYnVkZHk6Ol9HRVQoICdzdGVwJyApICkgLiAnLiBQYWdlOiBgJyAuIGJhc2VuYW1lKCAkcGFnZSApIC4gJ2AuIC0tPic7CgkJcmVxdWlyZV9vbmNlKCAkcGFnZSApOwoJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ0ZpbmlzaGVkIHN0ZXAgJyAuIGh0bWxlbnRpdGllcyggcGJfYmFja3VwYnVkZHk6Ol9HRVQoICdzdGVwJyApICkgLiAnLicgKTsKCX0gZWxzZSB7CgkJZWNobyAne0Vycm9yOiBJbnZhbGlkIHBhZ2UgYCcgLiBodG1sZW50aXRpZXMoIHBiX2JhY2t1cGJ1ZGR5OjpfR0VUKCAnc3RlcCcgKSApIC4gJy5waHAnIC4gJ2AufSc7CgkJZGllKCk7Cgl9CgkKLyoqKioqKioqKiogQVNTVU1FIERFRkFVTFQgUEFHRSAqKioqKioqKioqLwp9IGVsc2UgewoJcmVxdWlyZV9vbmNlKCAnMS5waHAnICk7Cn0KPz4K
###PACKDATA,FILE_END,/_importbuddy/importbuddy/controllers/pages/default.php,importbuddy/controllers/pages/default.php
###PACKDATA,FILE_START,/_importbuddy/importbuddy/lib/pclzip/pclzip.php,importbuddy/lib/pclzip/pclzip.php

###PACKDATA,FILE_END,/_importbuddy/importbuddy/lib/pclzip/pclzip.php,importbuddy/lib/pclzip/pclzip.php
###PACKDATA,FILE_START,/classes/_migrate_database.php,importbuddy/classes/_migrate_database.php

###PACKDATA,FILE_END,/classes/_migrate_database.php,importbuddy/classes/_migrate_database.php
###PACKDATA,FILE_START,/classes/core.php,importbuddy/classes/core.php

###PACKDATA,FILE_END,/classes/core.php,importbuddy/classes/core.php
###PACKDATA,FILE_START,/classes/import.php,importbuddy/classes/import.php

###PACKDATA,FILE_END,/classes/import.php,importbuddy/classes/import.php
###PACKDATA,FILE_START,/images/working.gif,importbuddy/images/working.gif
R0lGODlhKwALAPEAAPn5+SiKt5LC2CiKtyH/C05FVFNDQVBFMi4wAwEAAAAh/hpDcmVhdGVkIHdpdGggYWpheGxvYWQuaW5mbwAh+QQJCgAAACwAAAAAKwALAAACMoSOCMuW2diD88UKG95W88uF4DaGWFmhZid93pq+pwxnLUnXh8ou+sSz+T64oCAyTBUAACH5BAkKAAAALAAAAAArAAsAAAI9xI4IyyAPYWOxmoTHrHzzmGHe94xkmJifyqFKQ0pwLLgHa82xrekkDrIBZRQab1jyfY7KTtPimixiUsevAAAh+QQJCgAAACwAAAAAKwALAAACPYSOCMswD2FjqZpqW9xv4g8KE7d54XmMpNSgqLoOpgvC60xjNonnyc7p+VKamKw1zDCMR8rp8pksYlKorgAAIfkECQoAAAAsAAAAACsACwAAAkCEjgjLltnYmJS6Bxt+sfq5ZUyoNJ9HHlEqdCfFrqn7DrE2m7Wdj/2y45FkQ13t5itKdshFExC8YCLOEBX6AhQAADs=
###PACKDATA,FILE_END,/images/working.gif,importbuddy/images/working.gif
###PACKDATA,FILE_START,/images/bullet_go.png,importbuddy/images/bullet_go.png
iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAEsSURBVDjLY/j//z8DJZhhmBuQvdj8a+p8w//xc3U5yTIgeb7h18bNUf/DZ2j8958qz0nQgPyltv9zF5v/TV9o/Ddxrv7fmvWh/1ednvi/ZLX/f9d+8b+23YI8eA0AOvn/hnPT/q89OwWsccXpCf8n7Cn5v/B41/+MpW7/TdvZ/+o2M/LjNADoZLDmvl35/zt3ZP9v3Zb2v2Fz4v+mren/Zxxq/h+zwOa/aj3DH5wGRM/W/L/y1IT/S0/0/l94rOv/vKMdQEOy/k8/1PQ/banHf8VahlfSlQwGOA0InK74z3Oi9D/nftF/1t38/+LmW/2fdrDhf9Jit//ytQzPJSsZtEiKBe1mxq/xC53/y1czPAFqVic5GoFO/ipXzfxftJJBkeyUKFzOwDm48wIAh5XH+g7drOwAAAAASUVORK5CYII=
###PACKDATA,FILE_END,/images/bullet_go.png,importbuddy/images/bullet_go.png
###PACKDATA,FILE_START,/images/favicon.png,importbuddy/images/favicon.png
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
###PACKDATA,FILE_END,/images/favicon.png,importbuddy/images/favicon.png
###PACKDATA,FILE_START,/images/sort_down.png,importbuddy/images/sort_down.png
iVBORw0KGgoAAAANSUhEUgAAAAoAAAAICAYAAADA+m62AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAHBJREFUeNqMkD0OABEQRmcmVChIqN3/WBJHoLVYxK7GK4TvZwIMIcANrC0xxpJSOkzOOXjvASvUBOdcOxzBoXeDRhO11p+QlBKEEKtNc2OMAcbYKxL1aTsrWE201u4lPB4zUUphzrn8r9HA2+95BBgA3YASwqCieowAAAAASUVORK5CYII=
###PACKDATA,FILE_END,/images/sort_down.png,importbuddy/images/sort_down.png
###PACKDATA,FILE_START,/lib/dbreplace/dbreplace.php,importbuddy/lib/dbreplace/dbreplace.php

###PACKDATA,FILE_END,/lib/dbreplace/dbreplace.php,importbuddy/lib/dbreplace/dbreplace.php
###PACKDATA,FILE_START,/lib/dbreplace/history.txt,importbuddy/lib/dbreplace/history.txt
MS4wLjAgLSAyMDExLTA4LTE4IC0gRHVzdGluIEJvbHRvbgoJQ3JlYXRlZCBkYnJlcGxhY2UgY2xhc3Mu
###PACKDATA,FILE_END,/lib/dbreplace/history.txt,importbuddy/lib/dbreplace/history.txt
###PACKDATA,FILE_START,/lib/dbreplace/index.php,importbuddy/lib/dbreplace/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/lib/dbreplace/index.php,importbuddy/lib/dbreplace/index.php
###PACKDATA,FILE_START,/lib/commandbuddy/commandbuddy.php,importbuddy/lib/commandbuddy/commandbuddy.php
PD9waHAKLy8gVE9ETzogRXZlbnR1YWxseSBwdWxsIG91dCBhbGwgY29tbWFuZCBsaW5lIGV4ZWN1dGlvbiB0byBydW4gdGhyb3VnaCB0aGlzIGxpYnJhcnkuCi8vCQlDdXJyZW50bHkgY29kZSBpcyBkdWNwbGljYXRlZCBiZXR3ZWVuIHRoZSBsaWJyYXJpZXMgdGhhdCBydW4gY29tbWFuZCBsaW5lIGNvbW1hbmRzLgoKY2xhc3MgcGJfYmFja3VwYnVkZHlfY29tbWFuZGJ1ZGR5IHsKCQoJcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCkgewoJfQoJCgkvKglleGVjdXRlKCkKCSAqCQoJICoJRXhlY3V0ZSBhIGNvbW1hbmQgdmlhIHRoZSBjb21tYW5kIGxpbmUuCgkgKglFeGFtcGxlIHVzYWdlOgoJICoJCWxpc3QoICRleGVjX291dHB1dCwgJGV4ZWNfZXhpdF9jb2RlICkgPSAkdGhpcy0+ZXhlY3V0ZSggJ0NPTU1BTkRISEVSRScgKTsKCSAqCQoJICoJQHBhcmFtCQlzdHJpbmcJCSRjb21tYW5kCQlDb21tYW5kIGxpbmUgdG8gcnVuLgoJICoJQHJldHVybgkJYXJyYXkJCQkJCQlBc3NvY2lhdGl2ZSBhcnJheSBvZiB0aGUgcmVzcG9uc2Ugb3V0cHV0IGFuZCBleGlzdCBjb2RlLiBVc2Ugd2l0aCBsaXN0IHRvIGFzc2lnbiB2YXJpYWJsZXMuCgkgKgkJCQkJCQkJCQkJRm9ybWF0OiBhcnJheSggRVhFQ19PVVRQVVQsIEVYSVRfQ09ERSApOwoJICovCglwdWJsaWMgZnVuY3Rpb24gZXhlY3V0ZSggJGNvbW1hbmQgKSB7CgkJaWYgKCBzdHJpc3RyKCBQSFBfT1MsICdXSU4nICkgJiYgIXN0cmlzdHIoIFBIUF9PUywgJ0RBUldJTicgKSApIHsKCQkJLy8gV2luZG93czsgZG8gbm90aGluZy4KCQl9IGVsc2UgeyAvLyBMaW51eC9NYWMKCQkJaWYgKCAoIGluaV9nZXQoICdleGVjX2RpcicgKSAhPT0gZmFsc2UgKSAmJiAoIGluaV9nZXQoICdleGVjX2RpcicgKSAhPSAnJyApICkgeyAvLyBleGVjX2RpciBQSFAgcGF0Y2ggaW4gcGxhY2U6IGh0dHA6Ly93d3cua3liZXJkaWdpLmN6L3Byb2plY3RzL2V4ZWNkaXIvCgkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdleGVjX2RpciBkZXRlY3RlZC4gU2tpcHBpbmcgcGF0aCBhc3NpZ25tZW50LicgKTsKCQkJfSBlbHNlIHsKCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ2V4ZWNfZGlyIG5vdCBkZXRlY3RlZC4gUHJvY2VlZGluZyBub3JtYWxseS4nICk7CgkJCQkkY29tbWFuZCA9ICdQQVRIPSRQQVRIOi91c3IvYmluLzovdXNyL2xvY2FsL2Jpbi86dXNyL2xvY2FsL2JpbjovdXNyL2xvY2FsL3NiaW4vOi91c3Ivc2Jpbi86L3NiaW4vOi91c3IvOi9iaW4vJyAuICc7ICcgLiAkY29tbWFuZDsKCQkJfQoJCX0KCQkKCQkvLyBPdXRwdXQgY29tbWFuZCAoc3RyaXBzIG15c3FsZHVtcCBwYXNzd29yZHMpLgoJCWlmICggc3Ryc3RyKCAkY29tbWFuZCwgJy0tcGFzc3dvcmQ9JyApICkgewoJCQkkcGFzc3dvcmRfcG9ydGlvbl9iZWdpbiA9IHN0cnBvcyggJGNvbW1hbmQsICctLXBhc3N3b3JkPScgKTsKCQkJJHBhc3N3b3JkX3BvcnRpb25fZW5kID0gc3RycG9zKCAkY29tbWFuZCwgJyAnLCAkcGFzc3dvcmRfcG9ydGlvbl9iZWdpbiApOwoJCQkvL3BiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ3Bhc3Mgc3RhcnQ6IGAnIC4gJHBhc3N3b3JkX3BvcnRpb25fYmVnaW4gLiAnYC4gcGFzcyBlbmQ6IGAnIC4gJHBhc3N3b3JkX3BvcnRpb25fZW5kIC4gJ2AnICk7CgkJCSRwYXNzd29yZF9wb3J0aW9uID0gc3Vic3RyKCAkY29tbWFuZCwgJHBhc3N3b3JkX3BvcnRpb25fYmVnaW4sICggJHBhc3N3b3JkX3BvcnRpb25fZW5kIC0gJHBhc3N3b3JkX3BvcnRpb25fYmVnaW4gKSApOwoJCQkvL3BiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ3Bhc3MgcG9ydGlvbjogYCcgLiAkcGFzc3dvcmRfcG9ydGlvbiAuICdgLicgKTsKCQkJJHVucGFzc3dvcmRlZF9jb21tYW5kID0gc3RyX3JlcGxhY2UoICRwYXNzd29yZF9wb3J0aW9uLCAnLS1wYXNzd29yZD0qSElEREVOKicsICRjb21tYW5kICk7CgkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ2V4ZWMoKSBjb21tYW5kIChwYXNzd29yZCBoaWRkZW4pIGAnIC4gJHVucGFzc3dvcmRlZF9jb21tYW5kIC4gJ2AgKHdpdGggcGF0aCBkZWZpbml0aW9uKS4nICk7CgkJCXVuc2V0KCAkdW5wYXNzd29yZGVkX2NvbW1hbmQgKTsKCQl9IGVsc2UgewoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdleGVjKCkgY29tbWFuZCBgJyAuICRjb21tYW5kIC4gJ2AgKHdpdGggcGF0aCBkZWZpbml0aW9uKS4nICk7CgkJfQoJCQoJCSRleGVjX291dHB1dCA9IGFycmF5KCk7CgkJQGV4ZWMoICRjb21tYW5kLCAkZXhlY19vdXRwdXQsICRleGVjX2V4aXRfY29kZSk7CgkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnZXhlYygpIGNvbW1hbmQgb3V0cHV0OiBgJyAuIGltcGxvZGUoICcsJywgJGV4ZWNfb3V0cHV0ICkgLiAnYDsgRXhpdCBjb2RlOiBgJyAuICRleGVjX2V4aXRfY29kZSAuICdgOyBFeGl0IGNvZGUgZGVzY3JpcHRpb246IGAnIC4gcGJfYmFja3VwYnVkZHk6OiRmaWxlc3lzdGVtLT5leGl0X2NvZGVfbG9va3VwKCAkZXhlY19leGl0X2NvZGUgKSAuICdgJyApOwoJCQoJCXJldHVybiBhcnJheSggJGV4ZWNfb3V0cHV0LCAkZXhlY19leGl0X2NvZGUgKTsKCX0gLy8gRW5kIGV4ZWN1dGUoKS4KfQ==
###PACKDATA,FILE_END,/lib/commandbuddy/commandbuddy.php,importbuddy/lib/commandbuddy/commandbuddy.php
###PACKDATA,FILE_START,/lib/commandbuddy/index.php,importbuddy/lib/commandbuddy/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/lib/commandbuddy/index.php,importbuddy/lib/commandbuddy/index.php
###PACKDATA,FILE_START,/lib/zipbuddy/history.txt,importbuddy/lib/zipbuddy/history.txt
Mi4wLjAgLSAyMDExLTEwLTA4IC0gRHVzdGluIEJvbHRvbgoJQWRkZWQgaGlzdG9yeS50eHQuCglBZGRlZCB1bnppcCBmdW5jdGlvbmFsaXR5Lg==
###PACKDATA,FILE_END,/lib/zipbuddy/history.txt,importbuddy/lib/zipbuddy/history.txt
###PACKDATA,FILE_START,/lib/zipbuddy/index.php,importbuddy/lib/zipbuddy/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/lib/zipbuddy/index.php,importbuddy/lib/zipbuddy/index.php
###PACKDATA,FILE_START,/lib/zipbuddy/legacy.zipbuddy.php,importbuddy/lib/zipbuddy/legacy.zipbuddy.php

###PACKDATA,FILE_END,/lib/zipbuddy/legacy.zipbuddy.php,importbuddy/lib/zipbuddy/legacy.zipbuddy.php
###PACKDATA,FILE_START,/lib/zipbuddy/zbdir.php,importbuddy/lib/zipbuddy/zbdir.php

###PACKDATA,FILE_END,/lib/zipbuddy/zbdir.php,importbuddy/lib/zipbuddy/zbdir.php
###PACKDATA,FILE_START,/lib/zipbuddy/zbzipcore.php,importbuddy/lib/zipbuddy/zbzipcore.php

###PACKDATA,FILE_END,/lib/zipbuddy/zbzipcore.php,importbuddy/lib/zipbuddy/zbzipcore.php
###PACKDATA,FILE_START,/lib/zipbuddy/zbzipexec.php,importbuddy/lib/zipbuddy/zbzipexec.php

###PACKDATA,FILE_END,/lib/zipbuddy/zbzipexec.php,importbuddy/lib/zipbuddy/zbzipexec.php
###PACKDATA,FILE_START,/lib/zipbuddy/zbzippclzip.php,importbuddy/lib/zipbuddy/zbzippclzip.php

###PACKDATA,FILE_END,/lib/zipbuddy/zbzippclzip.php,importbuddy/lib/zipbuddy/zbzippclzip.php
###PACKDATA,FILE_START,/lib/zipbuddy/zbzipproc.php,importbuddy/lib/zipbuddy/zbzipproc.php
PD9waHAKLyoqCiAqCXBsdWdpbmJ1ZGR5X3piemlwcHJvYyBDbGFzcwogKgogKiAgRXh0ZW5kcyB0aGUgemlwIGNhcGFiaWxpdHkgY29yZSBjbGFzcyB3aXRoIHByb2Mgc3BlY2lmaWMgY2FwYWJpbGl0eQogKgkKICoJVmVyc2lvbjogMS4wLjAKICoJQXV0aG9yOgogKglBdXRob3IgVVJJOgogKgogKglAcGFyYW0JCSRwYXJlbnQJCW9iamVjdAkJT3B0aW9uYWwgcGFyZW50IG9iamVjdCB3aGljaCBjYW4gcHJvdmlkZSBmdW5jdGlvbnMgZm9yIHJlcG9ydGluZywgZXRjLgogKglAcmV0dXJuCQludWxsCiAqCiAqLwppZiAoICFjbGFzc19leGlzdHMoICJwbHVnaW5idWRkeV96YnppcHByb2MiICkgKSB7CgoJY2xhc3MgcGx1Z2luYnVkZHlfemJ6aXBwcm9jIGV4dGVuZHMgcGx1Z2luYnVkZHlfemJ6aXBjb3JlIHsKCQoJCS8vIENvbnN0YW50cyBmb3IgZmlsZSBoYW5kbGluZwoJCWNvbnN0IFpJUF9MT0dfRklMRV9OQU1FICAgICAgICA9ICd0ZW1wX3ppcF9wcm9jX2xvZy50eHQnOwoJCWNvbnN0IFpJUF9FUlJPUlNfRklMRV9OQU1FICAgICA9ICdsYXN0X3Byb2NfZXJyb3JzLnR4dCc7CgkJY29uc3QgWklQX1dBUk5JTkdTX0ZJTEVfTkFNRSAgID0gJ2xhc3RfcHJvY193YXJuaW5ncy50eHQnOwoJCWNvbnN0IFpJUF9FWENMVVNJT05TX0ZJTEVfTkFNRSA9ICdleGNsdXNpb25zLnR4dCc7CgkJY29uc3QgWklQX0lOQ0xVU0lPTlNfRklMRV9OQU1FID0gJ2luY2x1c2lvbnMudHh0JzsKCQoJCS8vIFBvc3NpYmxlIGV4ZWN1dGFibGUgcGF0aCBzZXRzCgkJY29uc3QgREVGQVVMVF9FWEVDVVRBQkxFX1BBVEhTID0gJy91c3IvbG9jYWwvYmluOjovdXNyL2JpbjovdXNyL2xvY2FsL3NiaW46L3Vzci9zYmluOi9zYmluOi9iaW4nOwoJCWNvbnN0IFdJTkRPV1NfRVhFQ1VUQUJMRV9QQVRIUyA9ICcnOwoJCQogICAgICAgIC8qKgogICAgICAgICAqIG1ldGhvZCB0YWcgdXNlZCB0byByZWZlciB0byB0aGUgbWV0aG9kIGFuZCBlbnRpdGllcyBhc3NvY2lhdGVkIHdpdGggaXQgc3VjaCBhcyBjbGFzcyBuYW1lCiAgICAgICAgICogCiAgICAgICAgICogQHZhciBzdHJpbmcKICAgICAgICAgKi8KCQlwdWJsaWMgc3RhdGljICRfbWV0aG9kX3RhZyA9ICdwcm9jJzsKCQkKICAgICAgICAvKioKICAgICAgICAgKiBUaGlzIHRlbGxzIHVzIHdoZXRoZXIgdGhpcyBtZXRob2QgaXMgcmVnYXJkZWQgYXMgYSAiY29tcGF0aWJpbGl0eSIgbWV0aG9kCiAgICAgICAgICogCiAgICAgICAgICogQHZhciBib29sCiAgICAgICAgICovCgkJcHVibGljIHN0YXRpYyAkX2lzX2NvbXBhdGliaWxpdHlfbWV0aG9kID0gZmFsc2U7CgkJCiAgICAgICAgLyoqCiAgICAgICAgICogVGhpcyB0ZWxscyB1cyB0aGUgZGVwZW5kZW5jaWVzIG9mIHRoaXMgbWV0aG9kIHNvIHRoZXkgY2FuIGJlIGNoZWNrIHRvIHNlZSBpZiB0aGUgbWV0aG9kIGNhbiBiZSBzdXBwb3J0ZWQKICAgICAgICAgKiAKICAgICAgICAgKiBAdmFyIGFycmF5CiAgICAgICAgICovCgkJcHVibGljIHN0YXRpYyAkX21ldGhvZF9kZXBlbmRlbmNpZXMgPSBhcnJheSggJ2NsYXNzZXMnID0+IGFycmF5KCksCgkJCQkJCQkJCQkJICAJCSAnZnVuY3Rpb25zJyA9PiBhcnJheSggJ3Byb2Nfb3BlbicsICdwcm9jX2Nsb3NlJywgJ3Byb2NfZ2V0X3N0YXR1cycsICdwcm9jX3Rlcm1pbmF0ZScgKSwKCQkJCQkJCQkJCQkgIAkJICdleHRlbnNpb25zJyA9PiBhcnJheSgpLAoJCQkJCQkJCQkJCSAgCQkgJ2ZpbGVzJyA9PiBhcnJheSgpLAoJCQkJCQkJCQkJCSAgCQkgJ2NoZWNrX2Z1bmMnID0+ICdjaGVja19tZXRob2RfZGVwZW5kZW5jaWVzX3N0YXRpYycKCQkJCQkJCQkJCQkJCSk7CgkJCQoJCS8qKgoJCSAqIAoJCSAqIGdldF9tZXRob2RfdGFnX3N0YXRpYygpCgkJICoKCQkgKiBHZXQgdGhlIHN0YXRpYyBtZXRob2QgdGFnIGluIGEgc3RhdGljIGNvbnRleHQKCQkgKgoJCSAqIEByZXR1cm4JCXN0cmluZwlUaGUgbWV0aG9kIHRhZwoJCSAqCgkJICovCgkJcHVibGljIHN0YXRpYyBmdW5jdGlvbiBnZXRfbWV0aG9kX3RhZ19zdGF0aWMoKSB7CgkJCgkJCXJldHVybiBzZWxmOjokX21ldGhvZF90YWc7CgkJCQoJCX0KCgkJLyoqCgkJICogCgkJICogZ2V0X2lzX2NvbXBhdGliaWxpdHlfbWV0aG9kX3N0YXRpYygpCgkJICoKCQkgKiBHZXQgdGhlIGNvbXBhdGliaWxpdHkgbWV0aG9kIGluZGljYXRvciBpbiBhIHN0YXRpYyBjb250ZXh0CgkJICoKCQkgKiBAcmV0dXJuCQlib29sCVRydWUgaWYgaXMgYSBjb21wYXRpYmlsaXR5IG1ldGhvZAoJCSAqCgkJICovCgkJcHVibGljIHN0YXRpYyBmdW5jdGlvbiBnZXRfaXNfY29tcGF0aWJpbGl0eV9tZXRob2Rfc3RhdGljKCkgewoJCQoJCQlyZXR1cm4gc2VsZjo6JF9pc19jb21wYXRpYmlsaXR5X21ldGhvZDsKCQkJCgkJfQoKCQkvKioKCQkgKiAKCQkgKiBnZXRfbWV0aG9kX2RlcGVuZGVuY2llc19zdGF0aWMoKQoJCSAqCgkJICogR2V0IHRoZSBtZXRob2QgZGVwZW5kZW5jaWVzIGFycmF5IGluIGEgc3RhdGljIGNvbnRleHQKCQkgKgoJCSAqIEByZXR1cm4JCWFycmF5CVRoZSBkZXBlbmRlbmNpZXMgb2YgdGhlIG1ldGhvZCB0aGF0IGlzIHJlcXVpcmVzIHRvIGJlIGEgc3VwcG9ydGVkIG1ldGhvZAoJCSAqCgkJICovCgkJcHVibGljIHN0YXRpYyBmdW5jdGlvbiBnZXRfbWV0aG9kX2RlcGVuZGVuY2llc19zdGF0aWMoKSB7CgkJCgkJCXJldHVybiBzZWxmOjokX21ldGhvZF9kZXBlbmRlbmNpZXM7CgkJCQoJCX0KCQkKCQkvKioKCQkgKiAKCQkgKiBjaGVja19tZXRob2RfZGVwZW5kZW5jaWVzX3N0YXRpYygpCgkJICoKCQkgKiBBbGxvd3MgYWRkaXRpb25hbCBtZXRob2QgZGVwZW5kZW5jeSBjaGVja3MgYmV5b25kIHRoZSBzdGFuZGFyZCBpbiBhIHN0YXRpYyBjb250ZXh0CgkJICoKCQkgKiBAcmV0dXJuCQlib29sCVRydWUgaWYgYWRkaXRpb25hbCBkZXBlbmRlbmN5IGNoZWNrcyBwYXNzZWQKCQkgKgoJCSAqLwoJCXB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gY2hlY2tfbWV0aG9kX2RlcGVuZGVuY2llc19zdGF0aWMoKSB7CgkJCgkJCSRyZXN1bHQgPSBmYWxzZTsKCQkJCgkJCS8vIE5lZWQgdG8gYWRkaXRpb25hbGx5IGNoZWNrIHRoZSBPUyAtIG5lZWQgKm5peCB0eXBlIGF0IGxlYXN0CgkJCQkKCQkJLy8gVXNlIFVDIGZvciBlYXNlIC0gdGhpcyBfc2hvdWxkIG5vdD8gY2F1c2UgYW55IGFtYmlndWl0eQoJCQkkb3NfbmFtZSA9IHN0cnRvdXBwZXIoIFBIUF9PUyApOwoJIAoJCQkvLyBDdXJyZW50bHkgd2UnbGwgYXNzdW1lIGFueXRoaW5nIHRoYXQgZG9lc24ndCBsb29rIGxpa2UgV2luZG93cyBpcyAqbml4IGJhc2VkCgkJCWlmICggISggc3Vic3RyKCAkb3NfbmFtZSwgMCwgMyApID09PSAnV0lOJykgKSB7CgkJCQoJCQkJLy8gV2UncmUgb2sgYXMgbWVldCBkZXBlbmRlbmN5IHRoYXQgdGhpcyBpc24ndCBXaW5kb3dzIGJhc2VkIE9TCgkJCQkkcmVzdWx0ID0gdHJ1ZTsKCQkJCgkJCX0JCgkJCQoJCQlyZXR1cm4gJHJlc3VsdDsKCQkKCQl9CgoJCS8qKgoJCSAqCV9fY29uc3RydWN0KCkKCQkgKgkKCQkgKglEZWZhdWx0IGNvbnN0cnVjdG9yLgoJCSAqCQoJCSAqCUBwYXJhbQkJcmVmZXJlbmNlCSYkcGFyZW50CQlbb3B0aW9uYWxdIFJlZmVyZW5jZSB0byB0aGUgb2JqZWN0IGNvbnRhaW5pbmcgdGhlIHN0YXR1cygpIGZ1bmN0aW9uIGZvciBzdGF0dXMgdXBkYXRlcy4KCQkgKglAcmV0dXJuCQludWxsCgkJICoKCQkgKi8KCQlwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoICYkcGFyZW50ID0gTlVMTCApIHsKCgkJCXBhcmVudDo6X19jb25zdHJ1Y3QoICRwYXJlbnQgKTsKCQkJCgkJCS8vIE92ZXJyaWRlIHNvbWUgb2YgcGFyZW50IGRlZmF1bHRzCgkJCSR0aGlzLT5fbWV0aG9kX2RldGFpbHNbICdhdHRyJyBdID0gYXJyYXlfbWVyZ2UoICR0aGlzLT5fbWV0aG9kX2RldGFpbHNbICdhdHRyJyBdLAoJCQkJCQkJCQkJCQkJCQlhcnJheSggJ25hbWUnID0+ICdQcm9jIE1ldGhvZCcsCgkJCQkJCQkJCQkJCQkgIAkJCSAgICdjb21wYXRpYmlsaXR5JyA9PiBzZWxmOjokX2lzX2NvbXBhdGliaWxpdHlfbWV0aG9kICkKCQkJCQkJCQkJCQkJCSAgCSAgICk7CgoJCQkvLyBOb3cgc2V0IHVwIHRoZSBkZWZhdWx0IGV4ZWN1dGFibGUgcGF0aHMgKG5vdCBtZXJnaW5nIGJ1dCBzZXR0aW5nKQoJCQkvLyBOb3RlOiBQYXJlbnQgY29uc3RydWN0b3Igc2V0IHRoZSBvcyB0eXBlIHZhbHVlCgkJCXN3aXRjaCAoICR0aGlzLT5nZXRfb3NfdHlwZSgpICkgewoJCQkKCQkJCWNhc2Ugc2VsZjo6T1NfVFlQRV9OSVg6CgkJCQkKCQkJCQkkdGhpcy0+c2V0X2V4ZWN1dGFibGVfcGF0aHMoIGV4cGxvZGUoIFBBVEhfU0VQQVJBVE9SLCBzZWxmOjpERUZBVUxUX0VYRUNVVEFCTEVfUEFUSFMgKSwgZmFsc2UpOwoJCQkJCWJyZWFrOwoJCQkJCQoJCQkJY2FzZSBzZWxmOjpPU19UWVBFX1dJTjoKCQkJCQkKCQkJCQkkdGhpcy0+c2V0X2V4ZWN1dGFibGVfcGF0aHMoIGV4cGxvZGUoIFBBVEhfU0VQQVJBVE9SLCBzZWxmOjpXSU5ET1dTX0VYRUNVVEFCTEVfUEFUSFMgKSwgZmFsc2UpOwoJCQkJCQoJCQkJCS8vIE5lZWQgdG8gbWVyZ2UgaW4gQUJTUEFUSCBoZXJlIGJlY2F1c2Ugd2UgY2Fubm90IHNldCB0aGF0IGluIHRoZSBkZWZhdWx0cyAtIGl0IGlzIHByZXBlbmRlZAoJCQkJCSR0aGlzLT5zZXRfZXhlY3V0YWJsZV9wYXRocyggYXJyYXkoIHJ0cmltKCBBQlNQQVRILCBESVJFQ1RPUllfU0VQQVJBVE9SICkgKSApOwoJCQkJCWJyZWFrOwoJCQkJCQoJCQkJZGVmYXVsdDoKCQkJCQkvLyBMb2cgZXJyb3IgYW5kIGxlYXZlIHBhdGhzIGVtcHR5CgkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBzcHJpbnRmKCBfXygnVW5rbm93biBPUyB0eXBlICglMSRzKSBjb3VsZCBub3Qgc2V0IGV4ZWN1dGFibGUgcGF0aHMnLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCAkdGhpcy0+Z2V0X29zX3R5cGUoKSApICk7CgkJCQkJCgkJCX0KCQkJCgkJfQoJCQoJCS8qKgoJCSAqCV9fZGVzdHJ1Y3QoKQoJCSAqCQoJCSAqCURlZmF1bHQgZGVzdHJ1Y3Rvci4KCQkgKgkKCQkgKglAcmV0dXJuCQludWxsCgkJICoKCQkgKi8KCQlwdWJsaWMgZnVuY3Rpb24gX19kZXN0cnVjdCggKSB7CgkJCgkJCXBhcmVudDo6X19kZXN0cnVjdCgpOwoKCQl9CgkJCgkJLyoqCgkJICoJZ2V0X21ldGhvZF90YWcoKQoJCSAqCQoJCSAqCVJldHVybnMgdGhlIChzdGF0aWMpIG1ldGhvZCB0YWcKCQkgKgkKCQkgKglAcmV0dXJuCQlzdHJpbmcgVGhlIG1ldGhvZCB0YWcKCQkgKgoJCSAqLwoJCXB1YmxpYyBmdW5jdGlvbiBnZXRfbWV0aG9kX3RhZygpIHsKCQkKCQkJcmV0dXJuIHNlbGY6OiRfbWV0aG9kX3RhZzsKCQkJCgkJfQoJCQoJCS8qKgoJCSAqCWdldF9pc19jb21wYXRpYmlsaXR5X21ldGhvZCgpCgkJICoJCgkJICoJUmV0dXJucyB0aGUgKHN0YXRpYykgaXNfY29tcGF0aWJpbGl0eV9tZXRob2QgYm9vbGVhbgoJCSAqCQoJCSAqCUByZXR1cm4JCWJvb2wKCQkgKgoJCSAqLwoJCXB1YmxpYyBmdW5jdGlvbiBnZXRfaXNfY29tcGF0aWJpbGl0eV9tZXRob2QoKSB7CgkJCgkJCXJldHVybiBzZWxmOjokX2lzX2NvbXBhdGliaWxpdHlfbWV0aG9kOwoJCQkKCQl9CgkJCgkJLyoqCgkJICoJZ2V0X2NvbW1hbmRfcGF0aCgpCgkJICoJCgkJICoJVGhpcyByZXR1cm5zIHRoZSBwYXRoIGZvciB0aGUgcmVxdWVzdGVkIGNvbW1hbmQgZnJvbSB0aGUgbWV0aG9kIGRldGFpbHMKCQkgKglJZiBub3QgZm91bmQgdGhlbiB3aWxsIHJldHVybiBlbXB0eSBzdHJpbmcgd2hpY2ggaXMgdGhlIHNhbWUgYXMgaWYgdGhlCgkJICoJY29tbWFuZCBpcyBiZWluZyBhY2Nlc3NlZCB0aHJvdWdoIFBBVEgKCQkgKgkKCQkgKglAcmV0dXJuCQlzdHJpbmcJCQkJUGF0aCBmb3IgY29tbWFuZCwgdHJpbW1lZCAtIG1heSBiZSBlbXB0eQoJCSAqCgkJICovCgkJcHJvdGVjdGVkIGZ1bmN0aW9uIGdldF9jb21tYW5kX3BhdGgoICRjb21tYW5kID0gc2VsZjo6Q09NTUFORF9VTktOT1dOX1BBVEggKSB7CgkJCgkJCSRyZXN1bHQgPSAnJzsKCQkJCgkJCXN3aXRjaCggJGNvbW1hbmQgKSB7CgkJCQoJCQkJY2FzZSBzZWxmOjpDT01NQU5EX1pJUF9QQVRIOgoJCQkJCgkJCQkJLy8gSWYgdGhlcmUgaXMgYSBjb21tb24gcGF0aCB1c2UgaXQgb3RoZXJ3aXNlIGxvb2sgZm9yIHRoZSBjb21tYW5kIHNwZWNpZmljIHBhdGgKCQkJCQlpZiAoIGlzc2V0KCAkdGhpcy0+X21ldGhvZF9kZXRhaWxzWyAncGFyYW0nIF1bICdwYXRoJyBdICkgKSB7CgkJCQkJCgkJCQkJCSRyZXN1bHQgPSB0cmltKCAkdGhpcy0+X21ldGhvZF9kZXRhaWxzWyAncGFyYW0nIF1bICdwYXRoJyBdICk7CgkJCQkJCQoJCQkJCX0gZWxzZWlmICggaXNzZXQoICR0aGlzLT5fbWV0aG9kX2RldGFpbHNbICdwYXJhbScgXVsgJ3ppcCcgXVsgJ3BhdGgnIF0gKSApIHsKCQkJCQkKCQkJCQkJJHJlc3VsdCA9IHRyaW0oICR0aGlzLT5fbWV0aG9kX2RldGFpbHNbICdwYXJhbScgXVsgJ3ppcCcgXVsgJ3BhdGgnIF0gKTsKCQkJCQl9CgkJCQkJCgkJCQkJYnJlYWs7CgkJCQkKCQkJCWNhc2Ugc2VsZjo6Q09NTUFORF9VTlpJUF9QQVRIOgoJCQkJCgkJCQkJLy8gSWYgdGhlcmUgaXMgYSBjb21tb24gcGF0aCB1c2UgaXQgb3RoZXJ3aXNlIGxvb2sgZm9yIHRoZSBjb21tYW5kIHNwZWNpZmljIHBhdGgKCQkJCQlpZiAoIGlzc2V0KCAkdGhpcy0+X21ldGhvZF9kZXRhaWxzWyAncGFyYW0nIF1bICdwYXRoJyBdICkgKSB7CgkJCQkJCgkJCQkJCSRyZXN1bHQgPSB0cmltKCAkdGhpcy0+X21ldGhvZF9kZXRhaWxzWyAncGFyYW0nIF1bICdwYXRoJyBdICk7CgkJCQkJCQoJCQkJCX0gZWxzZWlmICggaXNzZXQoICR0aGlzLT5fbWV0aG9kX2RldGFpbHNbICdwYXJhbScgXVsgJ3VuemlwJyBdWyAncGF0aCcgXSApICkgewoJCQkJCQoJCQkJCQkkcmVzdWx0ID0gdHJpbSggJHRoaXMtPl9tZXRob2RfZGV0YWlsc1sgJ3BhcmFtJyBdWyAndW56aXAnIF1bICdwYXRoJyBdICk7CgkJCQkJfQoJCQkJCQoJCQkJCWJyZWFrOwoJCQkJCgkJCQlkZWZhdWx0OgoJCQkJCgkJCQkJLy8gUmV0dXJuIHRoZSBlbXB0eSBzdHJpbmcgZGVmYXVsdCBmb3Igbm93CgkJCQoJCQl9CgoJCQlyZXR1cm4gJHJlc3VsdDsKCQkKCQl9CgkJCgkJLyoqCgkJICoJc2V0X3ppcF92ZXJzaW9uKCkKCQkgKgkKCQkgKglUaGlzIHNldHMgdGhlIHppcCB2ZXJzaW9uIGluZm9ybWF0aW9uIGluIHRoZSBtZXRob2QgZGV0YWlscwoJCSAqCU5vdGU6IHByZS12MyB6aXAgcnVubmluZyAiemlwIC12IiB3aWxsIG5vdCBwcm9kdWNlIHRoZSByZXF1aXJlZCBvdXRwdXQgYmVjYXVzZQoJCSAqCXRoZXJlIGlzIG5vIHR0eSBhdHRhY2hlZCAod2hlbiBydW5uaW5nIHRocm91Z2ggZXhlYygpIG9yIGVxdWl2YWxlbnQpLCBpbnN0ZWFkCgkJICoJaXQgd2lsbCBwcm9kdWNlIGEgemlwIGZpbGUuQ3VycmVudGx5IHdlJ2xsIGp1c3QgZGV0ZWN0IHRoYXQgYW5kIHNldCB0aGUgdmVyc2lvbgoJCSAqCWFzIDIuMCBhbmQgbm90IHNldCB0aGUgaW5mby4KCQkgKglUT0RPOiBXZSBjb3VsZCBwYXJzZSB0aGUgemlwIGZpbGUgdG8gZ2V0IHRoZSB2ZXJzaW9uIGJ1dCBhbHNvIGNvbnNpZGVyaW5nIGRvaW5nCgkJICoJdGhhdCBpbiB0aGUgaXNfYXZhaWxhYmxlKCkgdGVzdCB3aGVyZSB3ZSBhbHJlYWR5IGNyZWF0ZWQgYSB6aXAgZmlsZS4KCQkgKglUT0RPOiBDb25zaWRlciB0ZXN0aW5nIGlmIG1ldGhvZCBjYW4gemlwIGFuZCBvbmx5IHRoZW4gcnVuIHRoZSB0ZXN0CgkJICoJVE9ETzogVGhpcyBuZWVkcyByZWZhY3RvcmluZyB0byBtYWtlIGl0IGNsZWFuZXIKCQkgKgkKCQkgKglAcGFyYW0JCWludAkJJG1ham9yCQlWYWx1ZSB0byB1c2UgaWYgbm9uZSBmb3VuZCBvciBvdmVycmlkZSB0cnVlCgkJICoJQHBhcmFtCQlpbnQJCSRtaW5vcgkJVmFsdWUgdG8gdXNlIGlmIG5vbmUgZm91bmQgb3Igb3ZlcnJpZGUgdHJ1ZQoJCSAqCUBwYXJhbQkJYm9vbAkkb3ZlcnJpZGUJVHJ1ZSB0byB1c2UgcGFzc2VkIGluIHZhbHVlKHMpIHJlZ2FyZGxlc3MKCQkgKglAcmV0dXJuCQlvYmplY3QJCQkJVGhpcyBvYmplY3QgcmVmZXJlbmNlCgkJICoKCQkgKi8KCQlwcm90ZWN0ZWQgZnVuY3Rpb24gc2V0X3ppcF92ZXJzaW9uKCAkbWFqb3IgPSAwLCAkbWlub3IgPSAwLCAkb3ZlcnJpZGUgPSBmYWxzZSApIHsKCQkKCQkJJGV4aXRjb2RlID0gMTI3OwoJCQkkb3V0cHV0ID0gYXJyYXkoKTsKCQkJJHppcHBhdGggPSAnJzsKCQkJJGNvbW1hbmQgPSAnJzsKCQkJJG1hdGNoZXMgPSBhcnJheSgpOwoJCQkkaW5mbyA9ICcnOwoJCQoJCQkvLyBJZiB3ZSBoYXZlIGJlZW4gZ2l2ZW4gYSB2YWx1ZSB0byB1c2Ugd2l0aCBvdmVycmlkZSB0aGVuIGp1c3QgdXNlIGl0CgkJCWlmICggKCAoIGlzX2ludCggJG1ham9yKSApICYmICggMCA8ICRtYWpvciApICYmICggaXNfaW50KCAkbWlub3IgKSApICkgJiYgKCB0cnVlID09PSAkb3ZlcnJpZGUgKSApIHsKCQkJCgkJCQkvLyBTZXQgdGhlIGdpdmVuIHZlcnNpb24gcmVnYXJkbGVzcwoJCQkJJHRoaXMtPl9tZXRob2RfZGV0YWlsc1sgJ3BhcmFtJyBdWyAnemlwJyBdWyAndmVyc2lvbicgXSA9IGFycmF5KCAnbWFqb3InID0+ICRtYWpvciwgJ21pbm9yJyA9PiAkbWlub3IgKTsKCQkJCXJldHVybiAkdGhpczsgCgkJCQoJCQl9CgkJCQoJCQkvLyBHZXQgdGhlIGNvbW1hbmQgcGF0aCBmb3IgdGhlIHppcCBjb21tYW5kIC0gc2hvdWxkIHJldHVybiBhIHRyaW1tZWQgc3RyaW5nCgkJCSR6aXBwYXRoID0gJHRoaXMtPmdldF9jb21tYW5kX3BhdGgoIHNlbGY6OkNPTU1BTkRfWklQX1BBVEggKTsKCQkJCgkJCS8vIEFkZCB0aGUgdHJhaWxpbmcgc2xhc2ggaWYgcmVxdWlyZWQKCQkJJGNvbW1hbmQgPSAkdGhpcy0+c2xhc2hpZnkoICR6aXBwYXRoICkgLiAnemlwIC12JzsKCQkJCgkJCS8vQGV4ZWMoICRjb21tYW5kLCAkb3V0cHV0LCAkZXhpdGNvZGUgKTsKCQkJCgkJCS8vIEdldCBhIHRlbXBvcmFyeSBmaWxlIHRvIHVzZSBmb3IgY29tbWFuZCBvdXRwdXQKCQkJJG91dGZpbGVfbmFtZSA9IHRlbXBuYW0oIHN5c19nZXRfdGVtcF9kaXIoKSwgdW5pcWlkKCAncGJfJyApICk7CgkJCQoJCQkvLyBNYWtlIHN1cmUgd2Ugb25seSBkbyB0aGlzIGlmIHdlIGhhdmUgYSBmaWxlIHdlIGNhbiB3cml0ZSB0bwoJCQlpZiAoIGlzX3N0cmluZyggJG91dGZpbGVfbmFtZSApICYmIGlzX3dyaXRhYmxlKCAkb3V0ZmlsZV9uYW1lICkgKSB7IAoJCQkKCQkJCSRkZXNjcmlwdG9yc3BlYyA9IGFycmF5KAoJCQkJCTAgPT4gYXJyYXkoICJwaXBlIiwgInIiICksCgkJCQkJMSA9PiBhcnJheSggImZpbGUiLCAkb3V0ZmlsZV9uYW1lLCAidyIgKSwKCQkJCQkyID0+IGFycmF5KCAiZmlsZSIsICIvZGV2L251bGwiLCAiYSIgKQkKCQkJCSk7CgkJCQkKCQkJCSRwcm9jZXNzID0gTlVMTDsgLy8gTWF5YmUgaXQgZG9lc24ndCB3b3JrCgkJCQkKCQkJCSRwcm9jZXNzID0gQHByb2Nfb3BlbiggJGNvbW1hbmQsICRkZXNjcmlwdG9yc3BlYywgJHBpcGVzICk7CgkJCQkKCQkJCWlmICggaXNfcmVzb3VyY2UoICRwcm9jZXNzICkgKSB7CgkJCQkKCQkJCQlmY2xvc2UoICRwaXBlc1swXSApOyAvLyBOZXZlciB3YW50IHRvIHNlbmQgaW5wdXQgc28ganVzdCBjbG9zZSBpdAoJCQkJCQoJCQkJCSRwc3RhdHVzID0gcHJvY19nZXRfc3RhdHVzKCAkcHJvY2VzcyApOwoJCQkJCQoJCQkJCS8vIE1ha2Ugc3VyZSB3ZSBvbmx5IGRvIDQgbG9vcCBtYXgKCQkJCQkkY291bnQgPSAwOwoJCQkJCQoJCQkJCXdoaWxlICggdHJ1ZSA9PSAkcHN0YXR1c1sgJ3J1bm5pbmcnXSAmJiAoICRjb3VudCsrIDwgNCApICkgewoJCQkJCQl1c2xlZXAoIDUwMDAwMCApOwoJCQkJCQkkcHN0YXR1cyA9IHByb2NfZ2V0X3N0YXR1cyggJHByb2Nlc3MgKTsKCQkJCQl9CgkJCQkJCgkJCQkJaWYgKCB0cnVlID09PSAkcHN0YXR1c1sgJ3J1bm5pbmcnIF0gKSB7CgkJCQkJCS8vIEhtbSwgc2hvdWxkbid0IHN0aWxsIGJlIHJ1bm5pbmcsIHRyeSB0byBraWxsIGl0IGFuZCBtb3ZlIG9uCgkJCQkJCUBwcm9jX3Rlcm1pbmF0ZSggJHByb2Nlc3MgKTsKCQkJCQkJCgkJCQkJCS8vIEdldCBzdGF0dXMgYWdhaW4gYW5kIHNlZSBpZiBub3cgbm90IHJ1bm5pbmcsIGlmIHNvIGdldCBleGl0IGNvZGUKCQkJCQkJCgkJCQkJfSBlbHNlIHsKCQkJCQkKCQkJCQkJLy8gUHJvY2VzcyBmaW5pc2hlZCBub3JtYWxseSBzbyBnZXQgZXhpdCBjb2RlIGZvciBwb3NzaWJsZSB1c2UKCQkJCQkJJGV4aXRjb2RlID0gJHBzdGF0dXNbICdleGl0Y29kZScgXTsKCQkJCQkJCgkJCQkJfQoJCQkJCQoJCQkJCS8vIElnbm9yZSBhbnkgY2xvc2UgaXNzdWUsIHNob3VsZG4ndCBnZXQgc3R1Y2sgaGVyZSBidXQgaXQgaXMgcG9zc2libGUgaWYKCQkJCQkvLyB3ZSBwcm9jZXNzIHdhcyBzdGlsbCBydW5uaW5nIGFuZCB3ZSBmYWlsZWQgdG8gdGVybWluYXRlIGl0IC0gdHJpY2t5IG9uZQoJCQkJCS8vIHRvIG92ZXJjb21lIGJ1dCBfc2hvdWxkXyBiZSByYXJlCgkJCQkJQHByb2NfY2xvc2UoICRwcm9jZXNzICk7CgkJCQkJCgkJCQl9CgkJCQkKCQkJfQoJCQkKCQkJLy8gTm90ZTogaWYgd2UgY291bGRuJ3QgY3JlYXRlIGEgcHJvY2VzcyBqdXN0IGZhbGwgdGhyb3VnaCBzaWxlbnRseQoJCQkKCQkJaWYgKCAwID09PSAkZXhpdGNvZGUgKSB7CgkJCQoJCQkJLy8gUHV0IHRoZSBmaWxlIGNvbnRlbnQgaW50byBhbiBhcnJheQoJCQkJdHJ5IHsKCQkJCQoJCQkJCSRvdXRmaWxlID0gbmV3IFNwbEZpbGVPYmplY3QoICRvdXRmaWxlX25hbWUsICJyYiIgKTsKCQkJCQkKCQkJCQl3aGlsZSggISRvdXRmaWxlLT5lb2YoKSApIHsKCQkJCQkKCQkJCQkJLy8gTmVlZCB0byB0cmltIGxpbmUgZW5kaW5ncyBiZWNhdXNlIG9mIGltcGxvZGluZyB3aXRoIFBIUF9FT0wgbGF0ZXIKCQkJCQkJJG91dHB1dFtdID0gcnRyaW0oICRvdXRmaWxlLT5jdXJyZW50KCkgKTsKCQkJCQkJJG91dGZpbGUtPm5leHQoKTsKCQkJCQkKCQkJCQl9CgkJCQkJCgkJCQkJdW5zZXQoICRvdXRmaWxlICk7CgkJCQkJCgkJCQl9IGNhdGNoICggRXhjZXB0aW9uICRlICkgewoJCQkJCgkJCQkJLy8gTWF5YmUgdGhlIGZpbGUgZGlkbid0IGV4aXN0IGZvciBzb21lIHJlYXNvbj8KCQkJCQkvLyBJbiBhbnkgY2FzZSBqdXN0IGZhbGwgdGhyb3VnaCBzaWxlbnRseQoJCQkJCQoJCQkJfQoJCQkKCQkJCS8vIFNob3VsZCBiZSBnb29kIG91dHB1dCB0byB0cnkgYXQgbGVhc3QKCQkJCS8vIElmIHRoaXMgaGFzIGEgemlwIGZpbGUgc2lnbmF0dXJlIHRoZW4gaXQgbXVzdCBiZSBwcmUtdjMgemlwCgkJCQkkel9kYXRhID0gdW5wYWNrKCAnVnNpZycsICRvdXRwdXRbMF0gKTsKCQkJCgkJCQlpZiAoIDB4MDQwMzRiNTAgPT0gJHpfZGF0YVsgJ3NpZycgXSApIHsKCQkJCQoJCQkJCS8vIFRPRE86IENvbnNpZGVyIHRoYXQgd2UgY291bGQgdXNlIHVuemlwIC1aIC12IG9uIHRoaXMgZmlsZSBhbmQgcGFyc2UgdGhlCgkJCQkJLy8gb3V0cHV0IGZvciB0aGUgQ2VudHJhbCBEaXIgaW5mbyBvbiB3aGF0IHZlcnNpb24gb2YgemlwIGNyZWF0ZWQgdGhlIGZpbGUuCgkJCQkJLy8gQ3VycmVudGx5LCB3aGVyZSB0aGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCwgd2UgZG9uJ3Qga25vdyBpZiB3ZSBoYXZlIHVuemlwCgkJCQkJLy8gc28gd2UgY2FuJ3QgYXNzdW1lIC0gd2l0aCBhIHJlamlnIHdlIGNvdWxkIGNhbGwgdGhpcyBsYXRlciBhbmQgdXNlIHVuemlwCgkJCQkJLy8gaWYgYXZhaWxhYmxlLgoJCQkJCS8vIENhbid0IHRlbGwgd2hpY2ggMi5YIHZlcnNpb24sIGNhbm5vdCBwb3B1bGF0ZSAkaW5mbwoJCQkJCSRtYWpvciA9IDI7CgkJCQkJJG1pbm9yID0gMDsKCQkJCQkKCQkJCX0gZWxzZSB7CgkJCQkKCQkJCQkvLyBEb2Vzbid0IGFwcGVhciB0byBiZSBhIHppcCBmaWxlIHNvIHNob3VsZCBiZSB2ZXJzaW9uIGluZm8KCQkJCQkvLyBFeHBlY3QgZm9ybWF0IGxpa2U6IFRoaXMgaXMgWmlwIDMuMCAoSnVseSA1dGggMjAwOCkuLi4KCQkJCQkvLyAgICAgICAgICAgICAgICAgICAgIFRoaXMgaXMgWmlwIDMuMWMgQkVUQSAoSnVuZSAyMm5kIDIwMTApLi4uCgkJCQkJLy8gVGhlIG1hdGNoIHNob3VsZCB0YWtlIG9ubHkgdGhlIG1ham9yL21pbm9yIGRpZ2l0cyBhbmQgaWdub3JlIGFueSBmb2xsb3dpbmcgYWxwaGEKCQkJCQkvLyBNYXkgZXh0ZW5kIHRvIGNhcHR1cmUgdGhlIGFscGhhIGFuZCBhbHNvIHdoZXRoZXIgQkVUQSBpbmRpY2F0ZWQgYnV0IG5vdCBjdXJyZW50bHkKCQkJCQkvLyByZXF1aXJlZC4KCQkJCQlmb3JlYWNoICggJG91dHB1dCBhcyAkbGluZSApIHsKCQoJCQkJCQlpZiAoIHByZWdfbWF0Y2goICcvXlxzKih0aGlzKVxzKyhpcylccysoemlwKVxzKyg/UDxtYWpvcj5cZClcLig/UDxtaW5vcj5cZCspL2knLCAkbGluZSwgJG1hdGNoZXMgKSApIHsKCQkJCQkJCgkJCQkJCQkkbWFqb3IgPSAoaW50KSRtYXRjaGVzWyAnbWFqb3InIF07CgkJCQkJCQkkbWlub3IgPSAoaW50KSRtYXRjaGVzWyAnbWlub3InIF07CgkJCQkJCQlicmVhazsKCQkJCQkJCgkJCQkJCX0KCQkJCQkKCQkJCQl9CgkJCQkJCgkJCQkJLy8gSWYgd2UgZGlkbid0IG1hdGNoIGEgdmVyc2lvbiB0aGVuIHN1c3BlY3QgdGhpcyBpcyBzdGlsbCBub3QgdmFsaWQgdmVyc2lvbiBpbmZvCgkJCQkJaWYgKCAhZW1wdHkoICRtYXRjaGVzICkgKSB7CgkJCQkJCgkJCQkJCS8vIE5vdyBjcmVhdGUgdGhlIGluZm8gc3RyaW5nCgkJCQkJCS8vIE5vdGU6IG5vdCB3b3J0aCBjb21wcmVzc2luZyBhcyB0aGF0IGdpdmVzIGEgbGFyZ2VyIHN0cmluZyBhZnRlciBjb252ZXJ0aW5nCgkJCQkJCS8vIGZyb20gYmluYXJ5IHRvIGhleCBmb3JtYXQgZm9yIHNhdmluZwoJCQkJCQkkaW5mbyA9IGltcGxvZGUoIFBIUF9FT0wsICRvdXRwdXQgKTsKCQkJCQkJJHRoaXMtPl9tZXRob2RfZGV0YWlsc1sgJ3BhcmFtJyBdWyAnemlwJyBdWyAnaW5mbycgXSA9ICRpbmZvOwoJCQkJCQoJCQkJCX0KCQkJCQoJCQkJfQoJCQkJCgkJCX0KCQkJCgkJCS8vIE5vdyB1c2UgZWl0aGVyIHdoYXQgd2UgZ290IG9yIHdoYXQgd2Ugd2VyZSBnaXZlbi4uLgoJCQlpZiAoICggaXNfaW50KCAkbWFqb3IpICkgJiYgKCAwIDwgJG1ham9yICkgJiYgKCBpc19pbnQoICRtaW5vciApICkgKSB7CgkJCQoJCQkJLy8gU2V0IHRoZSBnaXZlbiB2ZXJzaW9uIHJlZ2FyZGxlc3MKCQkJCSR0aGlzLT5fbWV0aG9kX2RldGFpbHNbICdwYXJhbScgXVsgJ3ppcCcgXVsgJ3ZlcnNpb24nIF0gPSBhcnJheSggJ21ham9yJyA9PiAkbWFqb3IsICdtaW5vcicgPT4gJG1pbm9yICk7CgkJCQoJCQl9CgkJCQoJCQkvLyBDYXRjaC1hbGwgY2xlYW51cCBvZiB0aGUgb3V0cHV0IGZpbGUKCQkJaWYgKCBAZmlsZV9leGlzdHMoICRvdXRmaWxlX25hbWUgKSApIHsKCQkJCgkJCQlAdW5saW5rKCAkb3V0ZmlsZV9uYW1lICk7CgkJCQkKCQkJfQoJCQkKCQkJcmV0dXJuICR0aGlzOyAKCQkKCQl9CgkJCgkJLyoqCgkJICoJZ2V0X3ppcF92ZXJzaW9uKCkKCQkgKgkKCQkgKglUaGlzIGdldHMgdGhlIHppcCB2ZXJzaW9uIGFzIGFuIGFycmF5IG9mIG1ham9yL21pbm9yIG9yIHJldHVybnMgZmFsc2UgaWYgbm90IGtub3duCgkJICoJVE9ETzogUGFzcyBwYXJhbWV0ZXIgdG8gc3BlY2lmeSB3aGF0IGZvcm1hdCB0byByZXR1cm4gaW4KCQkgKgkKCQkgKglAcmV0dXJuCQlhcnJheXxib29sCQkJCVJldHVybnMgYXJyYXkobWFqb3IsIG1pbm9yKSBvciBmYWxzZSBpZiBub3Qga25vd24KCQkgKgoJCSAqLwoJCXByb3RlY3RlZCBmdW5jdGlvbiBnZXRfemlwX3ZlcnNpb24oKSB7CgkJCgkJCSRyZXN1bHQgPSAkdGhpcy0+X21ldGhvZF9kZXRhaWxzWyAncGFyYW0nIF1bICd6aXAnIF1bICd2ZXJzaW9uJyBdOwoJCQkKCQkJaWYgKCAwID09PSAkcmVzdWx0WyAnbWFqb3InIF0gKSB7CgkJCQoJCQkJJHJlc3VsdCA9IGZhbHNlOwoJCQkJCgkJCX0KCQkJCgkJCXJldHVybiAkcmVzdWx0OwoJCQkKCQl9CgkJCgkJLyoqCgkJICoJc2V0X3VuemlwX3ZlcnNpb24oKQoJCSAqCQoJCSAqCVRoaXMgc2V0cyB0aGUgemlwIHZlcnNpb24gaW5mb3JtYXRpb24gaW4gdGhlIG1ldGhvZCBkZXRhaWxzCgkJICoJVE9ETzogVGhpcyBuZWVkcyByZWZhY3RvcmluZyB0byBtYWtlIGl0IGNsZWFuZXIKCQkgKgkKCQkgKglAcGFyYW0JCWludAkJJG1ham9yCQlWYWx1ZSB0byB1c2UgaWYgbm9uZSBmb3VuZCBvciBvdmVycmlkZSB0cnVlCgkJICoJQHBhcmFtCQlpbnQJCSRtaW5vcgkJVmFsdWUgdG8gdXNlIGlmIG5vbmUgZm91bmQgb3Igb3ZlcnJpZGUgdHJ1ZQoJCSAqCUBwYXJhbQkJYm9vbAkkb3ZlcnJpZGUJVHJ1ZSB0byB1c2UgcGFzc2VkIGluIHZhbHVlKHMpIHJlZ2FyZGxlc3MKCQkgKglAcmV0dXJuCQlvYmplY3QJCQkJVGhpcyBvYmplY3QgcmVmZXJlbmNlCgkJICoKCQkgKi8KCQlwcm90ZWN0ZWQgZnVuY3Rpb24gc2V0X3VuemlwX3ZlcnNpb24oICRtYWpvciA9IDAsICRtaW5vciA9IDAsICRvdmVycmlkZSA9IGZhbHNlICkgewoJCQoJCQkkZXhpdGNvZGUgPSAxMjc7CgkJCSRvdXRwdXQgPSBhcnJheSgpOwoJCQkkemlwcGF0aCA9ICcnOwoJCQkkY29tbWFuZCA9ICcnOwoJCQkkbWF0Y2hlcyA9IGFycmF5KCk7CgkJCSRpbmZvID0gJyc7CgkJCgkJCS8vIElmIHdlIGhhdmUgYmVlbiBnaXZlbiBhIHZhbHVlIHRvIHVzZSB3aXRoIG92ZXJyaWRlIHRoZW4ganVzdCB1c2UgaXQKCQkJaWYgKCAoICggaXNfaW50KCAkbWFqb3IpICkgJiYgKCAwIDwgJG1ham9yICkgJiYgKCBpc19pbnQoICRtaW5vciApICkgKSAmJiAoIHRydWUgPT09ICRvdmVycmlkZSApICkgewoJCQkKCQkJCS8vIFNldCB0aGUgZ2l2ZW4gdmVyc2lvbiByZWdhcmRsZXNzCgkJCQkkdGhpcy0+X21ldGhvZF9kZXRhaWxzWyAncGFyYW0nIF1bICd1bnppcCcgXVsgJ3ZlcnNpb24nIF0gPSBhcnJheSggJ21ham9yJyA9PiAkbWFqb3IsICdtaW5vcicgPT4gJG1pbm9yICk7CgkJCQlyZXR1cm4gJHRoaXM7IAoJCQkKCQkJfQoJCQkKCQkJLy8gR2V0IHRoZSBjb21tYW5kIHBhdGggZm9yIHRoZSB1bnppcCBjb21tYW5kIC0gc2hvdWxkIHJldHVybiBhIHRyaW1tZWQgc3RyaW5nCgkJCSR6aXBwYXRoID0gJHRoaXMtPmdldF9jb21tYW5kX3BhdGgoIHNlbGY6OkNPTU1BTkRfVU5aSVBfUEFUSCApOwoJCQkKCQkJLy8gQWRkIHRoZSB0cmFpbGluZyBzbGFzaCBpZiByZXF1aXJlZAoJCQkkY29tbWFuZCA9ICR0aGlzLT5zbGFzaGlmeSggJHppcHBhdGggKSAuICd1bnppcCAtdic7CgkJCQoJCQkvL0BleGVjKCAkY29tbWFuZCwgJG91dHB1dCwgJGV4aXRjb2RlICk7CgkJCQoJCQkvLyBHZXQgYSB0ZW1wb3JhcnkgZmlsZSB0byB1c2UgZm9yIGNvbW1hbmQgb3V0cHV0CgkJCSRvdXRmaWxlX25hbWUgPSB0ZW1wbmFtKCBzeXNfZ2V0X3RlbXBfZGlyKCksIHVuaXFpZCggJ3BiXycgKSApOwoJCQkKCQkJLy8gTWFrZSBzdXJlIHdlIG9ubHkgZG8gdGhpcyBpZiB3ZSBoYXZlIGEgZmlsZSB3ZSBjYW4gd3JpdGUgdG8KCQkJaWYgKCBpc19zdHJpbmcoICRvdXRmaWxlX25hbWUgKSAmJiBpc193cml0YWJsZSggJG91dGZpbGVfbmFtZSApICkgeyAKCQkJCgkJCQkkZGVzY3JpcHRvcnNwZWMgPSBhcnJheSgKCQkJCQkwID0+IGFycmF5KCAicGlwZSIsICJyIiApLAoJCQkJCTEgPT4gYXJyYXkoICJmaWxlIiwgJG91dGZpbGVfbmFtZSwgInciICksCgkJCQkJMiA9PiBhcnJheSggImZpbGUiLCAiL2Rldi9udWxsIiwgImEiICkJCgkJCQkpOwoJCQkJCgkJCQkkcHJvY2VzcyA9IE5VTEw7IC8vIE1heWJlIGl0IGRvZXNuJ3Qgd29yawoJCQkJCgkJCQkkcHJvY2VzcyA9IEBwcm9jX29wZW4oICRjb21tYW5kLCAkZGVzY3JpcHRvcnNwZWMsICRwaXBlcyApOwoJCQkJCgkJCQlpZiAoIGlzX3Jlc291cmNlKCAkcHJvY2VzcyApICkgewoJCQkJCgkJCQkJZmNsb3NlKCAkcGlwZXNbMF0gKTsgLy8gTmV2ZXIgd2FudCB0byBzZW5kIGlucHV0IHNvIGp1c3QgY2xvc2UgaXQKCQkJCQkKCQkJCQkkcHN0YXR1cyA9IHByb2NfZ2V0X3N0YXR1cyggJHByb2Nlc3MgKTsKCQkJCQkKCQkJCQkvLyBNYWtlIHN1cmUgd2Ugb25seSBkbyA0IGxvb3AgbWF4CgkJCQkJJGNvdW50ID0gMDsKCQkJCQkKCQkJCQl3aGlsZSAoIHRydWUgPT0gJHBzdGF0dXNbICdydW5uaW5nJ10gJiYgKCAkY291bnQrKyA8IDQgKSApIHsKCQkJCQkJdXNsZWVwKCA1MDAwMDAgKTsKCQkJCQkJJHBzdGF0dXMgPSBwcm9jX2dldF9zdGF0dXMoICRwcm9jZXNzICk7CgkJCQkJfQoJCQkJCQoJCQkJCWlmICggdHJ1ZSA9PT0gJHBzdGF0dXNbICdydW5uaW5nJyBdICkgewoJCQkJCQkvLyBIbW0sIHNob3VsZG4ndCBzdGlsbCBiZSBydW5uaW5nLCB0cnkgdG8ga2lsbCBpdCBhbmQgbW92ZSBvbgoJCQkJCQlAcHJvY190ZXJtaW5hdGUoICRwcm9jZXNzICk7CgkJCQkJCQoJCQkJCQkvLyBHZXQgc3RhdHVzIGFnYWluIGFuZCBzZWUgaWYgbm93IG5vdCBydW5uaW5nLCBpZiBzbyBnZXQgZXhpdCBjb2RlCgkJCQkJCQoJCQkJCX0gZWxzZSB7CgkJCQkJCgkJCQkJCS8vIFByb2Nlc3MgZmluaXNoZWQgbm9ybWFsbHkgc28gZ2V0IGV4aXQgY29kZSBmb3IgcG9zc2libGUgdXNlCgkJCQkJCSRleGl0Y29kZSA9ICRwc3RhdHVzWyAnZXhpdGNvZGUnIF07CgkJCQkJCQoJCQkJCX0KCQkJCQkKCQkJCQkvLyBJZ25vcmUgYW55IGNsb3NlIGlzc3VlLCBzaG91bGRuJ3QgZ2V0IHN0dWNrIGhlcmUgYnV0IGl0IGlzIHBvc3NpYmxlIGlmCgkJCQkJLy8gd2UgcHJvY2VzcyB3YXMgc3RpbGwgcnVubmluZyBhbmQgd2UgZmFpbGVkIHRvIHRlcm1pbmF0ZSBpdCAtIHRyaWNreSBvbmUKCQkJCQkvLyB0byBvdmVyY29tZSBidXQgX3Nob3VsZF8gYmUgcmFyZQoJCQkJCUBwcm9jX2Nsb3NlKCAkcHJvY2VzcyApOwoJCQkJCQoJCQkJfQoJCQkJCgkJCX0KCQkJCgkJCS8vIE5vdGU6IGlmIHdlIGNvdWxkbid0IGNyZWF0ZSBhIHByb2Nlc3MganVzdCBmYWxsIHRocm91Z2ggc2lsZW50bHkKCQkJCgkJCWlmICggMCA9PT0gJGV4aXRjb2RlICkgewoJCQkKCQkJCS8vIFB1dCB0aGUgZmlsZSBjb250ZW50IGludG8gYW4gYXJyYXkKCQkJCXRyeSB7CgkJCQkKCQkJCQkkb3V0ZmlsZSA9IG5ldyBTcGxGaWxlT2JqZWN0KCAkb3V0ZmlsZV9uYW1lLCAicmIiICk7CgkJCQkJCgkJCQkJd2hpbGUoICEkb3V0ZmlsZS0+ZW9mKCkgKSB7CgkJCQkJCgkJCQkJCS8vIE5lZWQgdG8gdHJpbSBsaW5lIGVuZGluZ3MgYmVjYXVzZSBvZiBpbXBsb2Rpbmcgd2l0aCBQSFBfRU9MIGxhdGVyCgkJCQkJCSRvdXRwdXRbXSA9IHJ0cmltKCAkb3V0ZmlsZS0+Y3VycmVudCgpICk7CgkJCQkJCSRvdXRmaWxlLT5uZXh0KCk7CgkJCQkJCgkJCQkJfQoJCQkJCQoJCQkJCXVuc2V0KCAkb3V0ZmlsZSApOwoJCQkJCQoJCQkJfSBjYXRjaCAoIEV4Y2VwdGlvbiAkZSApIHsKCQkJCQoJCQkJCS8vIE1heWJlIHRoZSBmaWxlIGRpZG4ndCBleGlzdCBmb3Igc29tZSByZWFzb24/CgkJCQkJLy8gSW4gYW55IGNhc2UganVzdCBmYWxsIHRocm91Z2ggc2lsZW50bHkKCQkJCQkKCQkJCX0KCQkJCgkJCQkvLyBTaG91bGQgYmUgZ29vZCBvdXRwdXQgdG8gdHJ5IGF0IGxlYXN0CgkJCQlmb3JlYWNoICggJG91dHB1dCBhcyAkbGluZSApIHsKCgkJCQkJaWYgKCBwcmVnX21hdGNoKCAnL15ccyoodW56aXApXHMrKD9QPG1ham9yPlxkKVwuKD9QPG1pbm9yPlxkKykvaScsICRsaW5lLCAkbWF0Y2hlcyApICkgewoJCQkJCQoJCQkJCQkkbWFqb3IgPSAoaW50KSRtYXRjaGVzWyAnbWFqb3InIF07CgkJCQkJCSRtaW5vciA9IChpbnQpJG1hdGNoZXNbICdtaW5vcicgXTsKCQkJCQkJYnJlYWs7CgkJCQkJCgkJCQkJfQoJCQkJCgkJCQl9CgkJCQkKCQkJCS8vIE5vdyBjcmVhdGUgdGhlIGluZm8gc3RyaW5nCgkJCQkvLyBOb3RlOiBub3Qgd29ydGggY29tcHJlc3NpbmcgYXMgdGhhdCBnaXZlcyBhIGxhcmdlciBzdHJpbmcgYWZ0ZXIgY29udmVydGluZwoJCQkJLy8gZnJvbSBiaW5hcnkgdG8gaGV4IGZvcm1hdCBmb3Igc2F2aW5nCgkJCQkkaW5mbyA9IGltcGxvZGUoIFBIUF9FT0wsICRvdXRwdXQgKTsKCQkJCSR0aGlzLT5fbWV0aG9kX2RldGFpbHNbICdwYXJhbScgXVsgJ3VuemlwJyBdWyAnaW5mbycgXSA9ICRpbmZvOwoJCQkJCgkJCX0KCQkJCgkJCS8vIE5vdyB1c2UgZWl0aGVyIHdoYXQgd2UgZ290IG9yIHdoYXQgd2Ugd2VyZSBnaXZlbi4uLgoJCQlpZiAoICggaXNfaW50KCAkbWFqb3IpICkgJiYgKCAwIDwgJG1ham9yICkgJiYgKCBpc19pbnQoICRtaW5vciApICkgKSB7CgkJCQoJCQkJLy8gU2V0IHRoZSBnaXZlbiB2ZXJzaW9uIHJlZ2FyZGxlc3MKCQkJCSR0aGlzLT5fbWV0aG9kX2RldGFpbHNbICdwYXJhbScgXVsgJ3VuemlwJyBdWyAndmVyc2lvbicgXSA9IGFycmF5KCAnbWFqb3InID0+ICRtYWpvciwgJ21pbm9yJyA9PiAkbWlub3IgKTsKCQkJCgkJCX0KCQkJCgkJCS8vIENhdGNoLWFsbCBjbGVhbnVwIG9mIHRoZSBvdXRwdXQgZmlsZQoJCQlpZiAoIEBmaWxlX2V4aXN0cyggJG91dGZpbGVfbmFtZSApICkgewoJCQkKCQkJCUB1bmxpbmsoICRvdXRmaWxlX25hbWUgKTsKCQkJCQoJCQl9CgkJCQoJCQlyZXR1cm4gJHRoaXM7IAoJCQoJCX0KCQkKCQkvKioKCQkgKglnZXRfdW56aXBfdmVyc2lvbigpCgkJICoJCgkJICoJVGhpcyBnZXRzIHRoZSB1bnppcCB2ZXJzaW9uIGFzIGFuIGFycmF5IG9mIG1ham9yL21pbm9yIG9yIHJldHVybnMgZmFsc2UgaWYgbm90IGtub3duCgkJICoJVE9ETzogUGFzcyBwYXJhbWV0ZXIgdG8gc3BlY2lmeSB3aGF0IGZvcm1hdCB0byByZXR1cm4gaW4KCQkgKgkKCQkgKglAcmV0dXJuCQlhcnJheXxib29sCQkJCVJldHVybnMgYXJyYXkobWFqb3IsIG1pbm9yKSBvciBmYWxzZSBpZiBub3Qga25vd24KCQkgKgoJCSAqLwoJCXByb3RlY3RlZCBmdW5jdGlvbiBnZXRfdW56aXBfdmVyc2lvbigpIHsKCQkKCQkJJHJlc3VsdCA9ICR0aGlzLT5fbWV0aG9kX2RldGFpbHNbICdwYXJhbScgXVsgJ3VuemlwJyBdWyAndmVyc2lvbicgXTsKCQkJCgkJCWlmICggMCA9PT0gJHJlc3VsdFsgJ21ham9yJyBdICkgewoJCQkKCQkJCSRyZXN1bHQgPSBmYWxzZTsKCQkJCQoJCQl9CgkJCQoJCQlyZXR1cm4gJHJlc3VsdDsKCQkJCgkJfQoJCQoJCS8qKgoJCSAqCWdldF96aXBfc3VwcG9ydHNfbG9nZmlsZSgpCgkJICoJCgkJICoJVGhpcyByZXR1cm5zIHRydWUgaWYgdGhlIHppcCBpbiB1c2UgaXMgYWJsZSB0byBzdXBwb3J0IGxvZ2ZpbGUgdXNhZ2UgZm9yCgkJICoJbG9nZ2luZyBwcm9ncmVzcyBvZiB6aXAgb3BlcmF0aW9uCgkJICoJCgkJICoJQHJldHVybgkJYm9vbAkJCQlUcnVlIGlmIGxvZ2ZpbGUgc3VwcG9ydGVkLCBvdGhlcndpc2UgZmFsc2UKCQkgKgoJCSAqLwoJCXByb3RlY3RlZCBmdW5jdGlvbiBnZXRfemlwX3N1cHBvcnRzX2xvZ19maWxlKCkgewoJCQoJCQkkcmVzdWx0ID0gZmFsc2U7CgkJCQoJCQkvLyBDdXJyZW50bHkgY2hlY2sgYmFzZWQganVzdCBvbiB0aGUgemlwIG1ham9yIHZlcnNpb24KCQkJLy8gVE9ETzogZGVjaWRlIGlmIGJldHRlciB0byByZXNwb25kIGJhc2VkIG9uIHRoZSBhdmFpbGFibGUgb3B0aW9ucwoJCQlpZiAoIDMgPD0gJHRoaXMtPl9tZXRob2RfZGV0YWlsc1sgJ3BhcmFtJyBdWyAnemlwJyBdWyAndmVyc2lvbicgXVsgJ21ham9yJyBdICkgewoJCQkKCQkJCSRyZXN1bHQgPSB0cnVlOwoJCQkJCgkJCX0KCQkJCgkJCXJldHVybiAkcmVzdWx0OwoJCQoJCX0KCQkKCQkvKioKCQkgKglpc19hdmFpbGFibGUoKQoJCSAqCQoJCSAqCUEgZnVuY3Rpb24gdGhhdCB0ZXN0cyBmb3IgdGhlIGF2YWlsYWJpbGl0eSBvZiB0aGUgc3BlY2lmaWMgbWV0aG9kIGFuZCBpdHMgYXZhaWxhYmxlIG1vZGVzLiBXaWxsIHRlc3QgZm9yCgkJICogIG11bHRpcGxlIG1vZGVzICh6aXAgJiB1bnppcCkgYW5kIG9ubHkgcmV0dXJuIGZhbHNlIGlmIG5laXRoZXIgaXMgYXZhaWxhYmxlLiBBY3R1YWwgYXZhaWxhYmxlIG1vZGVzIHdpbGwKCQkgKiAgYmUgaW5kaWNhdGVkIGluIHRoZSBtZXRob2QgYXR0cmlidXRlcy4KCQkgKgoJCSAqICBOb3RlOiBpbiB0aGlzIGNhc2UgYXMgdGhlIHppcCBhbmQgdW56aXAgY2FwYWJpbGl0aWVzIGFyZSBwcm92aWRlZCBieSBleHRlcm5hbCBjb21tYW5kcyB3ZSBuZWVkIHRvIHRlc3QKCQkgKiAgZm9yIHRoZSBhdmFpbGFiaWxpdHkgb2YgYm90aCBvZiB0aGVtIGFuZCBzZXQgYXR0cmlidXRlcyBhY2NvcmRpbmdseQoJCSAqCQoJCSAqCUBwYXJhbQkJc3RyaW5nCSR0ZW1wZGlyCVRlbXBvcmFyeSBkaXJlY3RvcnkgdG8gdXNlIGZvciBhbnkgdGVzdCBmaWxlcyAobXVzdCBiZSB3cml0ZWFibGUpCgkJICoJQHJldHVybgkJYm9vbAkJCQlUcnVlIGlmIHRoZSBtZXRob2QgaXMgYXZhaWxhYmxlIGZvciBhdCBsZWFzdCBvbmUgbW9kZSwgZmFsc2Ugb3RoZXJ3aXNlCgkJICoKCQkgKi8KCQlwdWJsaWMgZnVuY3Rpb24gaXNfYXZhaWxhYmxlKCAkdGVtcGRpciApIHsKCQkKCQkJJHJlc3VsdCA9IGZhbHNlOwoJCQkKCQkJc3dpdGNoICggJHRoaXMtPmdldF9vc190eXBlKCkgKSB7CgkJCQljYXNlIHNlbGY6Ok9TX1RZUEVfTklYOgoJCQkJCSRyZXN1bHQgPSAkdGhpcy0+aXNfYXZhaWxhYmxlX2xpbnV4KCAkdGVtcGRpciApOwoJCQkJCWJyZWFrOwoJCQkJY2FzZSBzZWxmOjpPU19UWVBFX1dJTjoKCQkJCQkkcmVzdWx0ID0gJHRoaXMtPmlzX2F2YWlsYWJsZV93aW5kb3dzKCAkdGVtcGRpciApOwoJCQkJCWJyZWFrOwoJCQkJZGVmYXVsdDoKCQkJCQkkcmVzdWx0ID0gZmFsc2U7CgkJCX0KCQkJCgkJCXJldHVybiAkcmVzdWx0OwoJCQkJCSAgCQoJCX0KCgkJLyoqCgkJICoJaXNfYXZhaWxhYmxlX3dpbmRvd3MoKQoJCSAqCQoJCSAqCUEgZnVuY3Rpb24gdGhhdCB0ZXN0cyBmb3IgdGhlIGF2YWlsYWJpbGl0eSBvZiB0aGUgc3BlY2lmaWMgbWV0aG9kIGFuZCBpdHMgYXZhaWxhYmxlIG1vZGVzLiBXaWxsIHRlc3QgZm9yCgkJICogIG11bHRpcGxlIG1vZGVzICh6aXAgJiB1bnppcCkgYW5kIG9ubHkgcmV0dXJuIGZhbHNlIGlmIG5laXRoZXIgaXMgYXZhaWxhYmxlLiBBY3R1YWwgYXZhaWxhYmxlIG1vZGVzIHdpbGwKCQkgKiAgYmUgaW5kaWNhdGVkIGluIHRoZSBtZXRob2QgYXR0cmlidXRlcy4KCQkgKgkKCQkgKglAcGFyYW0JCXN0cmluZwkkdGVtcGRpcglUZW1wb3JhcnkgZGlyZWN0b3J5IHRvIHVzZSBmb3IgYW55IHRlc3QgZmlsZXMgKG11c3QgYmUgd3JpdGVhYmxlKQoJCSAqCUByZXR1cm4JCWJvb2wJCQkJVHJ1ZSBpZiB0aGUgbWV0aG9kIGlzIGF2YWlsYWJsZSBmb3IgYXQgbGVhc3Qgb25lIG1vZGUsIGZhbHNlIG90aGVyd2lzZQoJCSAqCgkJICovCgkJcHJvdGVjdGVkIGZ1bmN0aW9uIGlzX2F2YWlsYWJsZV93aW5kb3dzKCAkdGVtcGRpciApIHsKCQkKCQkJLy8gSnVzdCByZXR1cm4gZmFsc2Ugc2lsZW50bHkgb3RoZXJ3aXNlIHdlJ2QgYmUgbG9nZ2luZyByZXBlYXRlZGx5Li4uCgkJCS8vcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAkdGhpcy0+X21ldGhvZF90YWcgLiBfXygnIG1ldGhvZCBub3Qgc3VwcG9ydGVkIG9uIFdpbmRvd3MuJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSApOwoJCQlyZXR1cm4gZmFsc2U7CgkJCQoJCX0KCQkKCQkvKioKCQkgKglpc19hdmFpbGFibGVfbGludXgoKQoJCSAqCQoJCSAqCUEgZnVuY3Rpb24gdGhhdCB0ZXN0cyBmb3IgdGhlIGF2YWlsYWJpbGl0eSBvZiB0aGUgc3BlY2lmaWMgbWV0aG9kIGFuZCBpdHMgYXZhaWxhYmxlIG1vZGVzLiBXaWxsIHRlc3QgZm9yCgkJICogIG11bHRpcGxlIG1vZGVzICh6aXAgJiB1bnppcCkgYW5kIG9ubHkgcmV0dXJuIGZhbHNlIGlmIG5laXRoZXIgaXMgYXZhaWxhYmxlLiBBY3R1YWwgYXZhaWxhYmxlIG1vZGVzIHdpbGwKCQkgKiAgYmUgaW5kaWNhdGVkIGluIHRoZSBtZXRob2QgYXR0cmlidXRlcy4KCQkgKgkKCQkgKglAcGFyYW0JCXN0cmluZwkkdGVtcGRpcglUZW1wb3JhcnkgZGlyZWN0b3J5IHRvIHVzZSBmb3IgYW55IHRlc3QgZmlsZXMgKG11c3QgYmUgd3JpdGVhYmxlKQoJCSAqCUByZXR1cm4JCWJvb2wJCQkJVHJ1ZSBpZiB0aGUgbWV0aG9kIGlzIGF2YWlsYWJsZSBmb3IgYXQgbGVhc3Qgb25lIG1vZGUsIGZhbHNlIG90aGVyd2lzZQoJCSAqCgkJICovCgkJcHJvdGVjdGVkIGZ1bmN0aW9uIGlzX2F2YWlsYWJsZV9saW51eCggJHRlbXBkaXIgKSB7CgkJCgkJCSRyZXN1bHQgPSBmYWxzZTsKCQkJJHBlbmRpbmdfcmVzdWx0ID0gZmFsc2U7CgkJCSRmb3VuZF96aXAgPSBmYWxzZTsKCQkJJHBzdGF0dXMgPSBhcnJheSgpOwoJCQkKCQkJLy8gVGhpcyBpcyBhIHNhZmV0eSB2YWx1ZSBpbiBjYXNlIHNvbWV0aGluZyBvZGQgaGFwcGVucwoJCQkkZXhlY19leGl0X2NvZGUgPSAxMjc7CgkJCQoJCQlpZiAoIGZ1bmN0aW9uX2V4aXN0cyggJ3Byb2Nfb3BlbicgKSAmJiBmdW5jdGlvbl9leGlzdHMoICdwcm9jX2Nsb3NlJyApICYmCgkJCQkgZnVuY3Rpb25fZXhpc3RzKCAncHJvY19nZXRfc3RhdHVzJyApICYmIGZ1bmN0aW9uX2V4aXN0cyggJ3Byb2NfdGVybWluYXRlJyApICkgewoJCQkJIAoJCQkJJGNhbmRpZGF0ZV9wYXRocyA9ICR0aGlzLT5fZXhlY3V0YWJsZV9wYXRoczsKCQkJCQoJCQkJLy8gV2UgYXJlIHNlYXJjaGluZyBmb3IgemlwIHVzaW5nIHRoZSBsaXN0IG9mIHBvc3NpYmxlIHBhdGhzCgkJCQl3aGlsZSAoICggZmFsc2UgPT0gJGZvdW5kX3ppcCApICYmICggIWVtcHR5KCAkY2FuZGlkYXRlX3BhdGhzICkgKSApIHsKCQkJCQoJCQkJCS8vIE1ha2Ugc3VyZSBpdCBpcyBjbGVhbiBvZiBsZWFkaW5nL3RyYWlsaW5nIHdoaXRlc3BhY2UKCQkJCQkkcGF0aCA9IHRyaW0oIGFycmF5X3NoaWZ0KCAkY2FuZGlkYXRlX3BhdGhzICkgKTsKCQkJCQkKCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCAnVHJ5aW5nIGV4ZWN1dGFibGUgcGF0aCBmb3IgemlwOicsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgLiAnIGAnIC4gJHBhdGggLiAnYC4nICk7CgoJCQkJCSR0ZXN0X2ZpbGUgPSAkdGVtcGRpciAuICd0ZW1wX3Rlc3RfJyAuIHVuaXFpZCgpIC4gJy56aXAnOwoJCQkJCQoJCQkJCSRjb21tYW5kID0gJ2V4ZWMgJyAuICR0aGlzLT5zbGFzaGlmeSggJHBhdGggKSAuICd6aXAgIicgLiAkdGVzdF9maWxlIC4gJyIgIicgLiBfX0ZJTEVfXyAuICciJzsKCQoJCQkJCSRkZXNjcmlwdG9yc3BlYyA9IGFycmF5KAoJCQkJCQkwID0+IGFycmF5KCAicGlwZSIsICJyIiApLAoJCQkJCQkxID0+IGFycmF5KCAiZmlsZSIsICIvZGV2L251bGwiLCAiYSIgKSwKCQkJCQkJMiA9PiBhcnJheSggImZpbGUiLCAiL2Rldi9udWxsIiwgImEiICkJCgkJCQkJKTsKCQkJCQkKCQkJCQkkcHJvY2VzcyA9IE5VTEw7IC8vIE1heWJlIGl0IGRvZXNuJ3Qgd29yawoJCQkJCQoJCQkJCSRwcm9jZXNzID0gQHByb2Nfb3BlbiggJGNvbW1hbmQsICRkZXNjcmlwdG9yc3BlYywgJHBpcGVzICk7CgkJCQkJCgkJCQkJaWYgKCBpc19yZXNvdXJjZSggJHByb2Nlc3MgKSApIHsKCQkJCQkKCQkJCQkJZmNsb3NlKCAkcGlwZXNbMF0gKTsgLy8gTmV2ZXIgd2FudCB0byBzZW5kIGlucHV0IHNvIGp1c3QgY2xvc2UgaXQKCQkJCQkJCgkJCQkJCSRwc3RhdHVzID0gcHJvY19nZXRfc3RhdHVzKCAkcHJvY2VzcyApOwoJCQkJCQkKCQkJCQkJLy8gTWFrZSBzdXJlIHdlIG9ubHkgZG8gNCBsb29wIG1heAoJCQkJCQkkY291bnQgPSAwOwoJCQkJCQkKCQkJCQkJd2hpbGUgKCB0cnVlID09ICRwc3RhdHVzWyAncnVubmluZyddICYmICggJGNvdW50KysgPCA0ICkgKSB7CgkJCQkJCQl1c2xlZXAoIDUwMDAwMCApOwoJCQkJCQkJJHBzdGF0dXMgPSBwcm9jX2dldF9zdGF0dXMoICRwcm9jZXNzICk7CgkJCQkJCX0KCQkJCQkJCgkJCQkJCWlmICggdHJ1ZSA9PT0gJHBzdGF0dXNbICdydW5uaW5nJyBdICkgewoJCQkJCQkJLy8gSG1tLCBzaG91bGRuJ3Qgc3RpbGwgYmUgcnVubmluZywgdHJ5IHRvIGtpbGwgaXQgYW5kIG1vdmUgb24KCQkJCQkJCUBwcm9jX3Rlcm1pbmF0ZSggJHByb2Nlc3MgKTsKCQkJCQkJCQoJCQkJCQkJLy8gR2V0IHN0YXR1cyBhZ2FpbiBhbmQgc2VlIGlmIG5vdyBub3QgcnVubmluZywgaWYgc28gZ2V0IGV4aXQgY29kZQoJCQkJCQkJCgkJCQkJCX0gZWxzZSB7CgkJCQkJCQoJCQkJCQkJLy8gUHJvY2VzcyBmaW5pc2hlZCBub3JtYWxseSBzbyBnZXQgZXhpdCBjb2RlIGZvciBwb3NzaWJsZSB1c2UKCQkJCQkJCSRleGVjX2V4aXRfY29kZSA9ICRwc3RhdHVzWyAnZXhpdGNvZGUnIF07CgkJCQkJCQkKCQkJCQkJfQoJCQkJCQkKCQkJCQkJLy8gSWdub3JlIGFueSBjbG9zZSBpc3N1ZSwgc2hvdWxkbid0IGdldCBzdHVjayBoZXJlIGJ1dCBpdCBpcyBwb3NzaWJsZSBpZgoJCQkJCQkvLyB3ZSBwcm9jZXNzIHdhcyBzdGlsbCBydW5uaW5nIGFuZCB3ZSBmYWlsZWQgdG8gdGVybWluYXRlIGl0IC0gdHJpY2t5IG9uZQoJCQkJCQkvLyB0byBvdmVyY29tZSBidXQgX3Nob3VsZF8gYmUgcmFyZQoJCQkJCQlAcHJvY19jbG9zZSggJHByb2Nlc3MgKTsKCQkJCQkJCgkJCQkJCS8vIE11c3QgaGF2ZSBib3RoIGEgZmlsZSBhbmQgYSBzdWNjZXNzIGV4aXQgY29kZSB0byBjb25zaWRlciB0aGlzIHN1Y2Nlc3NmdWwKCQkJCQkJaWYgKCBAZmlsZV9leGlzdHMoICR0ZXN0X2ZpbGUgKSAmJiAoIDAgPT09ICRleGVjX2V4aXRfY29kZSApICkgewoJCQkJCgkJCQkJCQkvLyBTZXQgdGhlIHBhcmFtZXRlciB0byBiZSByZW1lbWJlcmVkIChub3RlOiBwYXRoIHdpdGhvdXQgdHJhaWxpbmcgc2xhc2gpCgkJCQkJCQkkdGhpcy0+X21ldGhvZF9kZXRhaWxzWyAncGFyYW0nIF1bICd6aXAnIF1bICdwYXRoJyBdID0gJHBhdGg7CgkJCQkJCQkKCQkJCQkJCS8vIFRoZSB6aXAgb3BlcmF0aW9uIHdhcyBzdWNjZXNzZnVsIHNvIHdlIGNhbiBhdCBsZWFzdCB6aXAgYW5kIGFyY2hpdmUKCQkJCQkJCSR0aGlzLT5fbWV0aG9kX2RldGFpbHNbICdhdHRyJyBdWyAnaXNfemlwcGVyJyBdID0gdHJ1ZTsKCQkJCQkJCSR0aGlzLT5fbWV0aG9kX2RldGFpbHNbICdhdHRyJyBdWyAnaXNfYXJjaGl2ZXInIF0gPSB0cnVlOwoJCQkJCQkJCgkJCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCdQcm9jIHRlc3QgKHppcCkgUEFTU0VELicsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKTsKCQkJCQkJCSRyZXN1bHQgPSB0cnVlOwoJCQkJCQoJCQkJCQkJLy8gVE9ETzogQ29uc2lkZXIgcGFyc2luZyB6aXAgZmlsZSB0byBnZXQgdmVyc2lvbiBvZiB6aXAgdGhhdCBjcmVhdGVkIGl0LiBUaGlzIG1heSBzZWVtIG9kZAoJCQkJCQkJLy8gYnV0IHByZS12MyB6aXAgaXQncyBub3QgcG9zc2libGUgdG8gcnVuICJ6aXAgLXYiIHRocm91Z2ggZXhlYygpIG9yIGVxdWl2YWxlbnQgYXMgaXQgb25seQoJCQkJCQkJLy8gcHJvdmlkZXMgdGhlIHJlcXVpcmVkIG91dHB1dCBpZiBhIHR0eSBpcyBhdHRhY2hlZCwgb3RoZXJ3aXNlIGl0IGNyZWF0ZXMgYSB6aXAgZmlsZS4gV2UKCQkJCQkJCS8vIG1pZ2h0IGNvbnNpZGVyIHBhcnNpbmcgdGhlIGNyZWF0ZWQgemlwIGZpbGUgYnV0IGFzIHdlIGhhdmUgYWxyZWFkeSBjcmVhdGVkIG9uZSBoZXJlIHdlCgkJCQkJCQkvLyBtaWdodCBhcyB3ZWxsIHVzZSBpdAoJCQkJCQkJCgkJCQkJCQkvLyBUaGlzIHdpbGwgYnJlYWsgdXMgb3V0IG9mIHRoZSBsb29wCgkJCQkJCQkkZm91bmRfemlwID0gdHJ1ZTsKCQkJCQkJCQoJCQkJCQl9IGVsc2UgewoJCQkJCQoJCQkJCQkJLy8gRGVhbCB3aXRoIHRoZSBwb3NzaWJsZSBmYWlsdXJlIGNhdXNlcwoJCQkJCQkJaWYgKCAhQGZpbGVfZXhpc3RzKCAkdGVzdF9maWxlICkgKSB7CgkJCQkJCQkKCQkJCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCdQcm9jIHRlc3QgKHppcCkgRkFJTEVEOiBUZXN0IHppcCBmaWxlIG5vdCBmb3VuZC4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCQkJCQkKCQkJCQkJCX0KCQkJCQkJCQoJCQkJCQkJaWYgKCAwID09PSAkZXhlY19leGl0X2NvZGUgKSB7CgkJCQkJCQkKCQkJCQkJCQkkZXJyb3Jfc3RyaW5nID0gJGV4ZWNfZXhpdF9jb2RlOwoJCQkJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oJ1Byb2MgdGVzdCAoemlwKSBGQUlMRUQ6IHByb2MgRXhpdCBDb2RlOiAnLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApIC4gJGVycm9yX3N0cmluZyApOwoJCQkJCQkJCQoJCQkJCQkJfQoJCQkJCQkJCgkJCQkJCQkkcmVzdWx0ID0gZmFsc2U7CgkJCQkJCgkJCQkJCX0KCQkJCQkJCgkJCQkJCS8vIFJlbW92ZSB0aGUgdGVzdCB6aXAgZmlsZSBpZiBpdCB3YXMgY3JlYXRlZAoJCQkJCQlpZiAoIEBmaWxlX2V4aXN0cyggJHRlc3RfZmlsZSApICkgewoJCQkJCQkKCQkJCQkJCWlmICggIUB1bmxpbmsoICR0ZXN0X2ZpbGUgKSApIHsKCQkJCQkKCQkJCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIHNwcmludGYoIF9fKCdQcm9jIHRlc3QgKHppcCkgdW5hYmxlIHRvIGRlbGV0ZSB0ZXN0IGZpbGUgKCVzKScsJ2l0LWwxMG4tYmFja3VwYnVkZHknICksICR0ZXN0X2ZpbGUgKSApOwoJCQkJCQkKCQkJCQkJCX0KCQkJCQkKCQkJCQkJfQoJCQkJCQkKCQkJCQl9IGVsc2UgewoJCQkJCQoJCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCdQcm9jIHRlc3QgRkFJTEVEOiBVbmFibGUgdG8gY3JlYXRlIHRlc3QgemlwIGZpbGUgcHJvY2Vzcy4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCQkJCSRyZXN1bHQgPSBmYWxzZTsKCQkJCQkKCQkJCQl9CgkJCQkKCQkJCX0KCQkJCQoJCQkJaWYgKCBmYWxzZSA9PSAkZm91bmRfemlwICkgewoJCQkJCgkJCQkJLy8gTmV2ZXIgZm91bmQgemlwIG9uIGFueSBjYW5kaWRhdGUgcGF0aAoJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oJ1Byb2MgdGVzdCBGYWlsZWQ6IFVuYWJsZSB0byBmaW5kIHppcCBleGVjdXRhYmxlIG9uIGFueSBzcGVjaWZpZWQgcGF0aC4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCQkJJHJlc3VsdCA9IGZhbHNlOwoJCQkJCQkJCQkJCgkJCQl9CgkJCQkJICAKCQkJCS8vIFJlbWVtYmVyIHppcCByZXN1bHQgYW5kIHJlc2V0IGZvciB1bnppcCB0ZXN0CgkJCQkkcGVuZGluZ19yZXN1bHQgPSAkcmVzdWx0OwoJCQkJJHJlc3VsdCA9IGZhbHNlOwoJCQkJCgkJCQkvLyBTZWUgaWYgd2UgY2FuIGRldGVybWluZSB6aXAgdmVyc2lvbiBhbmQgcG9zc2libHkgYXZhaWxhYmxlIG9wdGlvbnMuIFRoaXMgY2FuIGhlbHAgdXMKCQkJCS8vIGRldGVybWluZSBob3cgdG8gZXhlY3V0ZSBvcGVyYXRpb25zIHN1Y2ggYXMgY3JlYXRpbmcgYSB6aXAgZmlsZQoJCQkJaWYgKCB0cnVlID09PSAkZm91bmRfemlwICkgewoJCQkJCgkJCQkJJHRoaXMtPnNldF96aXBfdmVyc2lvbigpOwoJCQkJCgkJCQl9CgkJCQkKCQkJCS8vIFJlc2V0IHRoZSBjYW5kaWRhdGUgcGF0aHMgZm9yIGEgZnVsbCBzZWFyY2ggZm9yIHVuemlwCgkJCQkkY2FuZGlkYXRlX3BhdGhzID0gJHRoaXMtPl9leGVjdXRhYmxlX3BhdGhzOwoJCQkJCQkgIAoJCQkJLy8gUmVzZXQgdGhlIHNhZmV0eSB2YWx1ZSBpbiBjYXNlCgkJCQkkZXhlY19leGl0X2NvZGUgPSAxMjc7CgkJCQkKCQkJCS8vIE5ldyBzZWFyY2gKCQkJCSRmb3VuZF96aXAgPSBmYWxzZTsKCQkJCQoJCQkJLy8gTmVlZCB0byBjcmVhdGUgYSB0ZXN0IHppcCBmaWxlIC0gaGVyZSdzIG9uZSBJIHByZXBhcmVkIGVhcmxpZXIKCQkJCS8vIGNvbnRhaW5pbmcgdGhlIG9uZSBmaWxlIHRlc3QudHh0ICh3aXRoIGNvbnRlbnQgIkhlbGxvIFdvcmxkIikKCQkJCS8vIENhbiB1c2UgdGhpcyBmb3IgYWxsIGNhc2UgdGVzdHMgYW5kIGRlbGV0ZSBhdCBlbmQKCQkJCSR0ZXN0X2ZpbGUgPSAkdGVtcGRpciAuICd0ZW1wX3Rlc3RfJyAuIHVuaXFpZCgpIC4gJy56aXAnOwoJCQkJQGZpbGVfcHV0X2NvbnRlbnRzKCAkdGVzdF9maWxlLCBiYXNlNjRfZGVjb2RlKCAiVUVzREJBb0FBQUFBQUM4RUxVSGo1Wld3REFBQUFBd0FBQUFJQUJ3QWRHVnpkQzUwZUhSVlZBa0FBOG9iVVZEakcxRlFkWGdMQUFFRStBRUFBQVFVQUFBQVNHVnNiRzhnVjI5eWJHUUtVRXNCQWg0RENnQUFBQUFBTHdRdFFlUGxsYkFNQUFBQURBQUFBQWdBR0FBQUFBQUFBUUFBQUtTQkFBQUFBSFJsYzNRdWRIaDBWVlFGQUFQS0cxRlFkWGdMQUFFRStBRUFBQVFVQUFBQVVFc0ZCZ0FBQUFBQkFBRUFUZ0FBQUU0QUFBQUFBQT09IiApICk7CgoJCQkJLy8gV2UgYXJlIHNlYXJjaGluZyBmb3IgemlwIHVzaW5nIHRoZSBsaXN0IG9mIHBvc3NpYmxlIHBhdGhzCgkJCQl3aGlsZSAoICggZmFsc2UgPT0gJGZvdW5kX3ppcCApICYmICggIWVtcHR5KCAkY2FuZGlkYXRlX3BhdGhzICkgKSApIHsKCQkJCQoJCQkJCS8vIE1ha2Ugc3VyZSBpdCBpcyBjbGVhbiBvZiBsZWFkaW5nL3RyYWlsaW5nIHdoaXRlc3BhY2UKCQkJCQkkcGF0aCA9IHRyaW0oIGFycmF5X3NoaWZ0KCAkY2FuZGlkYXRlX3BhdGhzICkgKTsKCgkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXyggJ1RyeWluZyBleGVjdXRhYmxlIHBhdGggZm9yIHVuemlwOicsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgLiAnIGAnIC4gJHBhdGggLiAnYC4nICk7CgkJCQkJCgkJCQkJJGNvbW1hbmQgPSAnZXhlYyAnIC4gJHRoaXMtPnNsYXNoaWZ5KCAkcGF0aCApIC4gJ3VuemlwIC1xdCAnIC4gJyAiJyAuICR0ZXN0X2ZpbGUgLiAnIiAidGVzdC50eHQiJzsKCQoJCQkJCSRkZXNjcmlwdG9yc3BlYyA9IGFycmF5KAoJCQkJCQkwID0+IGFycmF5KCAicGlwZSIsICJyIiApLAoJCQkJCQkxID0+IGFycmF5KCAiZmlsZSIsICIvZGV2L251bGwiLCAiYSIgKSwKCQkJCQkJMiA9PiBhcnJheSggImZpbGUiLCAiL2Rldi9udWxsIiwgImEiICkJCgkJCQkJKTsKCQkJCQkKCQkJCQkkcHJvY2VzcyA9IE5VTEw7IC8vIE1heWJlIGl0IGRvZXNuJ3Qgd29yawoJCQkJCQoJCQkJCSRwcm9jZXNzID0gQHByb2Nfb3BlbiggJGNvbW1hbmQsICRkZXNjcmlwdG9yc3BlYywgJHBpcGVzICk7CgkJCQkJCgkJCQkJaWYgKCBpc19yZXNvdXJjZSggJHByb2Nlc3MgKSApIHsKCQkJCQkKCQkJCQkJZmNsb3NlKCAkcGlwZXNbMF0gKTsgLy8gTmV2ZXIgd2FudCB0byBzZW5kIGlucHV0IHNvIGp1c3QgY2xvc2UgaXQKCQkJCQkJCgkJCQkJCSRwc3RhdHVzID0gcHJvY19nZXRfc3RhdHVzKCAkcHJvY2VzcyApOwoJCQkJCQkKCQkJCQkJLy8gTWFrZSBzdXJlIHdlIG9ubHkgZG8gNCBsb29wIG1heAoJCQkJCQkkY291bnQgPSAwOwoJCQkJCQkKCQkJCQkJd2hpbGUgKCB0cnVlID09ICRwc3RhdHVzWyAncnVubmluZyddICYmICggJGNvdW50KysgPCA0ICkgKSB7CgkJCQkJCQl1c2xlZXAoIDUwMDAwMCApOwoJCQkJCQkJJHBzdGF0dXMgPSBwcm9jX2dldF9zdGF0dXMoICRwcm9jZXNzICk7CgkJCQkJCX0KCQkJCQkJCgkJCQkJCWlmICggdHJ1ZSA9PT0gJHBzdGF0dXNbICdydW5uaW5nJyBdICkgewoJCQkJCQkJLy8gSG1tLCBzaG91bGRuJ3Qgc3RpbGwgYmUgcnVubmluZywgdHJ5IHRvIGtpbGwgaXQgYW5kIG1vdmUgb24KCQkJCQkJCUBwcm9jX3Rlcm1pbmF0ZSggJHByb2Nlc3MgKTsKCQkJCQkJCQoJCQkJCQkJLy8gR2V0IHN0YXR1cyBhZ2FpbiBhbmQgc2VlIGlmIG5vdyBub3QgcnVubmluZywgaWYgc28gZ2V0IGV4aXQgY29kZQoJCQkJCQkJCgkJCQkJCX0gZWxzZSB7CgkJCQkJCQoJCQkJCQkJLy8gUHJvY2VzcyBmaW5pc2hlZCBub3JtYWxseSBzbyBnZXQgZXhpdCBjb2RlIGZvciBwb3NzaWJsZSB1c2UKCQkJCQkJCSRleGVjX2V4aXRfY29kZSA9ICRwc3RhdHVzWyAnZXhpdGNvZGUnIF07CgkJCQkJCQkKCQkJCQkJfQoJCQkJCQkKCQkJCQkJLy8gSWdub3JlIGFueSBjbG9zZSBpc3N1ZSwgc2hvdWxkbid0IGdldCBzdHVjayBoZXJlIGJ1dCBpdCBpcyBwb3NzaWJsZSBpZgoJCQkJCQkvLyB3ZSBwcm9jZXNzIHdhcyBzdGlsbCBydW5uaW5nIGFuZCB3ZSBmYWlsZWQgdG8gdGVybWluYXRlIGl0IC0gdHJpY2t5IG9uZQoJCQkJCQkvLyB0byBvdmVyY29tZSBidXQgX3Nob3VsZF8gYmUgcmFyZQoJCQkJCQlAcHJvY19jbG9zZSggJHByb2Nlc3MgKTsKCQkJCQkJCgkJCQkJCWlmICggJGV4ZWNfZXhpdF9jb2RlID09IDAgKSB7CgkJCQkJCQoJCQkJCQkJLy8gU2V0IHRoZSBwYXJhbWV0ZXIgdG8gYmUgcmVtZW1iZXJlZCAobm90ZTogcGF0aCB3aXRob3V0IHRyYWlsaW5nIHNsYXNoKQoJCQkJCQkJJHRoaXMtPl9tZXRob2RfZGV0YWlsc1sgJ3BhcmFtJyBdWyAndW56aXAnIF1bICdwYXRoJyBdID0gJHBhdGg7CgkJCQkJCQkKCQkJCQkJCS8vIFRoZSB1bnppcCBvcGVyYXRpb24gd2FzIHN1Y2Nlc3NmdWwgc28gd2UgY2FuIGF0IGxlYXN0IHVuemlwCgkJCQkJCQkvLyBOb3RlOiB3ZSBkbyBub3Qgd2FudCB0byB1c2UgdGhpcyBmb3IgY2hlY2tpbmcgeWV0CQoJCQkJCQkJJHRoaXMtPl9tZXRob2RfZGV0YWlsc1sgJ2F0dHInIF1bICdpc191bnppcHBlcicgXSA9IHRydWU7CgkJCQkJCQoJCQkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnUHJvYyB0ZXN0ICh1bnppcCkgUEFTU0VELicsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKTsKCQkJCQkJCSRyZXN1bHQgPSB0cnVlOwoJCQkJCQkJCgkJCQkJCQkvLyBUaGlzIHdpbGwgYnJlYWsgdXMgb3V0IG9mIHRoZSBsb29wCgkJCQkJCQkkZm91bmRfemlwID0gdHJ1ZTsKCQkJCQkJCQoJCQkJCQl9IGVsc2UgewoJCQkJCQkKCQkJCQkJCSRlcnJvcl9zdHJpbmcgPSAkZXhlY19leGl0X2NvZGU7CgkJCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCdQcm9jIHRlc3QgKHVuemlwKSBGQUlMRUQ6IFRlc3QgdW56aXAgZmlsZSB0ZXN0IGZhaWxlZC4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCdQcm9jIEV4aXQgQ29kZTogJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSAuICRlcnJvcl9zdHJpbmcgKTsKCQkJCQkJCSRyZXN1bHQgPSBmYWxzZTsKCQkJCQkJCgkJCQkJCX0KCQkJCQkJCgkJCQkJfSBlbHNlIHsKCQkJCQkKCQkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnUHJvYyB0ZXN0IEZBSUxFRDogVW5hYmxlIHRvIGNyZWF0ZSB0ZXN0IHVuemlwIGZpbGUgcHJvY2Vzcy4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCQkJCSRyZXN1bHQgPSBmYWxzZTsKCQkJCQkKCQkJCQl9CgkJCQkKCQkJCX0KCQkJCQoJCQkJLy8gUmVtb3ZlIHRoZSB0ZXN0IHppcCBmaWxlIGlmIGl0IHdhcyBjcmVhdGVkCgkJCQlpZiAoIEBmaWxlX2V4aXN0cyggJHRlc3RfZmlsZSApICkgewoJCQkJCgkJCQkJaWYgKCAhQHVubGluayggJHRlc3RfZmlsZSApICkgewoJCQkKCQkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBzcHJpbnRmKCBfXygnUHJvYyB0ZXN0ICh1bnppcCkgdW5hYmxlIHRvIGRlbGV0ZSB0ZXN0IGZpbGUgKCVzKScsJ2l0LWwxMG4tYmFja3VwYnVkZHknICksICR0ZXN0X2ZpbGUgKSApOwoJCQkJCgkJCQkJfQoJCQkKCQkJCX0KCQkJCgkJCQkvLyBJZiB3ZSBkaWRuJ3QgZmluZCB1bnppcCBhbnl3aGVyZSAob3IgbWF5YmUgZm91bmQgaXQgYnV0IGl0IGZhaWxlZCkgdGhlbiBsb2cgaXQKCQkJCWlmICggZmFsc2UgPT0gJGZvdW5kX3ppcCApIHsKCQkJCQoJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oJ1Byb2MgdGVzdCBGYWlsZWQ6IFVuYWJsZSB0byBmaW5kIHVuemlwIGV4ZWN1dGFibGUgb24gYW55IHNwZWNpZmllZCBwYXRoLicsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKTsKCQkJCQkkcmVzdWx0ID0gZmFsc2U7CgkJCQkJCQkJCQkKCQkJCX0gZWxzZSB7CgkJCQkKCQkJCQkvLyBTZWUgaWYgd2UgY2FuIGRldGVybWluZSB1bnppcCB2ZXJzaW9uIGFuZCBwb3NzaWJseSBhdmFpbGFibGUgb3B0aW9ucy4gVGhpcyBjYW4gaGVscCB1cwoJCQkJCS8vIGRldGVybWluZSBob3cgdG8gZXhlY3V0ZSBvcGVyYXRpb25zIHN1Y2ggYXMgdW56aXBwaW5nIGEgZmlsZQoJCQkJCQoJCQkJCSR0aGlzLT5zZXRfdW56aXBfdmVyc2lvbigpOwoJCQkJCgkJCQl9CgkJCQkKCQkJfSBlbHNlIHsKCQkJCgkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCdQcm9jIHRlc3QgRkFJTEVEOiBPbmUgb3IgbW9yZSByZXF1aXJlZCBmdW5jdGlvbiBkbyBub3QgZXhpc3QuJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSApOwoJCQkJJHJlc3VsdCA9IGZhbHNlOwoJCSAgCgkJCX0KCQkgIAkKCQkgIAkvLyBJZiB3ZSBmb3VuZCBib3RoIHppcCBhbmQgdW56aXAgdGhlbiBjb21wYXJlIHRoZSBwYXRocyBhbmQgaWYgdGhlIHNhbWUgdGhlbiBzZXQgdGhlIGNvbW1vbiBwYXRoCgkJICAJaWYgKCAkcGVuZGluZ19yZXN1bHQgJiYgJHJlc3VsdCApIHsKCQkgIAkKCQkgIAkJaWYgKCAkdGhpcy0+X21ldGhvZF9kZXRhaWxzWyAncGFyYW0nIF1bICd6aXAnIF1bICdwYXRoJyBdID09PSAkdGhpcy0+X21ldGhvZF9kZXRhaWxzWyAncGFyYW0nIF1bICd1bnppcCcgXVsgJ3BhdGgnIF0gKSB7CgkJICAJCQoJCSAgCQkJJHRoaXMtPl9tZXRob2RfZGV0YWlsc1sgJ3BhcmFtJyBdWyAncGF0aCcgXSA9ICR0aGlzLT5fbWV0aG9kX2RldGFpbHNbICdwYXJhbScgXVsgJ3ppcCcgXVsgJ3BhdGgnIF07CgkJICAJCQkKCQkgIAkJfQoJCSAgCQkKCQkgIAl9CgkJICAJCgkJICAJLy8gT3VyIHJlc3VsdCB3aWxsIGJlIHRydWUgaWYgd2UgZm91bmQgZWl0aGVyIG9yIGJvdGggb2YgemlwIGFuZCB1bnppcAoJCSAgCS8vIFRoZSBtZXRob2QgYXR0cmlidXRlcyB3aWxsIHRlbGwgd2hpY2ggaXMgYXZhaWxhYmxlCgkJICAJJHJlc3VsdCA9ICggJHBlbmRpbmdfcmVzdWx0IHx8ICRyZXN1bHQgKTsKCQkgIAkKCQkgIAlyZXR1cm4gJHJlc3VsdDsKCQkgIAkKCQl9CgkJCgkJLyoqCgkJICoJY3JlYXRlKCkKCQkgKgkKCQkgKglBIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyBhbiBhcmNoaXZlIGZpbGUKCQkgKglBbHdheXMgY2xlYW5zIHVwIGFmdGVyIGl0c2VsZgoJCSAqCQoJCSAqCVRoZSAkZXhjbHVkZXMgd2lsbCBiZSBhIGxpc3Qgb3IgcmVsYXRpdmUgcGF0aCBleGNsdWRlcyBpZiB0aGUgJGxpc3RtYWtlciBvYmplY3QgaXMgTlVMTCBvdGVocndpc2UKCQkgKgl3aWxsIGJlIGFic29sdXRlIHBhdGggZXhjbHVkZXMgYW5kIHJlbGF0aXZlIHBhdGggZXhjbHVkZXMgY2FuIGJlIGhhZCBmcm9tIHRoZSAkbGlzdG1ha2VyIG9iamVjdAoJCSAqCQoJCSAqCUBwYXJhbQkJc3RyaW5nCSR6aXAJCQlGdWxsIHBhdGggJiBmaWxlbmFtZSBvZiBaSVAgQXJjaGl2ZSBmaWxlIHRvIGNyZWF0ZQoJCSAqCUBwYXJhbQkJc3RyaW5nCSRkaXIJCQlGdWxsIHBhdGggb2YgZGlyZWN0b3J5IHRvIGFkZCB0byBaSVAgQXJjaGl2ZSBmaWxlCgkJICoJQHBhcmFtZQkJYXJyYXkJJGV4Y2x1ZGVzCQlMaXN0IG9mIGVpdGhlciBhYnNvbHV0ZSBwYXRoIGV4Y2x1c2lvbnMgb3IgcmVsYXRpdmUgZXhjbHVzaW9ucwoJCSAqCUBwYXJhbQkJc3RyaW5nCSR0ZW1wZGlyCQlGdWxsIHBhdGggb2YgZGlyZWN0b3J5IGZvciB0ZW1wb3JhcnkgdXNhZ2UKCQkgKglAcGFyYW0JCW9iamVjdAkkbGlzdG1ha2VyCQlUaGUgb2JqZWN0IGZyb20gd2hpY2ggd2UgY2FuIGdldCBhbiBpbmNsdXNpb25zIGxpc3QKCQkgKglAcmV0dXJuCQlib29sCQkJCQlUcnVlIGlmIHRoZSBjcmVhdGlvbiB3YXMgc3VjY2Vzc2Z1bCwgZmFsc2Ugb3RoZXJ3aXNlCgkJICoKCQkgKi8KCQlwdWJsaWMgZnVuY3Rpb24gY3JlYXRlKCAkemlwLCAkZGlyLCAkZXhjbHVkZXMsICR0ZW1wZGlyLCAkbGlzdG1ha2VyID0gTlVMTCApIHsKCQkKCQkJJHJlc3VsdCA9IGZhbHNlOwoJCQkKCQkJc3dpdGNoICggJHRoaXMtPmdldF9vc190eXBlKCkgKSB7CgkJCQljYXNlIHNlbGY6Ok9TX1RZUEVfTklYOgoJCQkJCSRyZXN1bHQgPSAkdGhpcy0+Y3JlYXRlX2xpbnV4KCAkemlwLCAkZGlyLCAkZXhjbHVkZXMsICR0ZW1wZGlyLCAkbGlzdG1ha2VyICk7CgkJCQkJYnJlYWs7CgkJCQljYXNlIHNlbGY6Ok9TX1RZUEVfV0lOOgoJCQkJCSRyZXN1bHQgPSAkdGhpcy0+Y3JlYXRlX3dpbmRvd3MoICR6aXAsICRkaXIsICRleGNsdWRlcywgJHRlbXBkaXIsICRsaXN0bWFrZXIgKTsKCQkJCQlicmVhazsKCQkJCWRlZmF1bHQ6CgkJCQkJJHJlc3VsdCA9IGZhbHNlOwoJCQl9CgkJCQoJCQlyZXR1cm4gJHJlc3VsdDsKCQkJCgkJfQoJCQkKCQkvKioKCQkgKgljcmVhdGVfd2luZG93cygpCgkJICoJCgkJICoJQSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgYW4gYXJjaGl2ZSBmaWxlIG9uIExpbnV4CgkJICoJQWx3YXlzIGNsZWFucyB1cCBhZnRlciBpdHNlbGYKCQkgKgoJCSAqCVRoZSAkZXhjbHVkZXMgd2lsbCBiZSBhIGxpc3Qgb3IgcmVsYXRpdmUgcGF0aCBleGNsdWRlcyBpZiB0aGUgJGxpc3RtYWtlciBvYmplY3QgaXMgTlVMTCBvdGVocndpc2UKCQkgKgl3aWxsIGJlIGFic29sdXRlIHBhdGggZXhjbHVkZXMgYW5kIHJlbGF0aXZlIHBhdGggZXhjbHVkZXMgY2FuIGJlIGhhZCBmcm9tIHRoZSAkbGlzdG1ha2VyIG9iamVjdAoJCSAqCQoJCSAqCUBwYXJhbQkJc3RyaW5nCSR6aXAJCQlGdWxsIHBhdGggJiBmaWxlbmFtZSBvZiBaSVAgQXJjaGl2ZSBmaWxlIHRvIGNyZWF0ZQoJCSAqCUBwYXJhbQkJc3RyaW5nCSRkaXIJCQlGdWxsIHBhdGggb2YgZGlyZWN0b3J5IHRvIGFkZCB0byBaSVAgQXJjaGl2ZSBmaWxlCgkJICoJQHBhcmFtZQkJYXJyYXkJJGV4Y2x1ZGVzCQlMaXN0IG9mIGVpdGhlciBhYnNvbHV0ZSBwYXRoIGV4Y2x1c2lvbnMgb3IgcmVsYXRpdmUgZXhjbHVzaW9ucwoJCSAqCUBwYXJhbQkJc3RyaW5nCSR0ZW1wZGlyCQlGdWxsIHBhdGggb2YgZGlyZWN0b3J5IGZvciB0ZW1wb3JhcnkgdXNhZ2UKCQkgKglAcGFyYW0JCW9iamVjdAkkbGlzdG1ha2VyCQlUaGUgb2JqZWN0IGZyb20gd2hpY2ggd2UgY2FuIGdldCBhbiBpbmNsdXNpb25zIGxpc3QKCQkgKglAcmV0dXJuCQlib29sCQkJCQlUcnVlIGlmIHRoZSBjcmVhdGlvbiB3YXMgc3VjY2Vzc2Z1bCwgZmFsc2Ugb3RoZXJ3aXNlCgkJICoKCQkgKi8KCQlwcm90ZWN0ZWQgZnVuY3Rpb24gY3JlYXRlX3dpbmRvd3MoICR6aXAsICRkaXIsICRleGNsdWRlcywgJHRlbXBkaXIsICRsaXN0bWFrZXIgKSB7CgkJCgkJCS8vIFRoaXMgc2hvdWxkIG5ldmVyIGJlIGNhbGxlZCBidXQganVzdCBpbiBjYXNlIHJldHVybiBmYWxzZSBzaWxlbnRseQoJCQkvL3BiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oJ1RoZSAnLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApIC4gJHRoaXMtPmdldF9tZXRob2RfdGFnKCkgLiBfXygnIG1ldGhvZCBpcyBub3QgY3VycmVudGx5IHN1cHBvcnRlZCBmb3IgYXJjaGl2aW5nLicsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKTsKCQkJcmV0dXJuIGZhbHNlOwoKCQl9CQkJCgkJCgkJLyoqCgkJICoJY3JlYXRlX2xpbnV4KCkKCQkgKgkKCQkgKglBIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyBhbiBhcmNoaXZlIGZpbGUgb24gTGludXgKCQkgKglBbHdheXMgY2xlYW5zIHVwIGFmdGVyIGl0c2VsZgoJCSAqCgkJICoJVGhlICRleGNsdWRlcyB3aWxsIGJlIGEgbGlzdCBvciByZWxhdGl2ZSBwYXRoIGV4Y2x1ZGVzIGlmIHRoZSAkbGlzdG1ha2VyIG9iamVjdCBpcyBOVUxMIG90ZWhyd2lzZQoJCSAqCXdpbGwgYmUgYWJzb2x1dGUgcGF0aCBleGNsdWRlcyBhbmQgcmVsYXRpdmUgcGF0aCBleGNsdWRlcyBjYW4gYmUgaGFkIGZyb20gdGhlICRsaXN0bWFrZXIgb2JqZWN0CgkJICoJCgkJICoJQHBhcmFtCQlzdHJpbmcJJHppcAkJCUZ1bGwgcGF0aCAmIGZpbGVuYW1lIG9mIFpJUCBBcmNoaXZlIGZpbGUgdG8gY3JlYXRlCgkJICoJQHBhcmFtCQlzdHJpbmcJJGRpcgkJCUZ1bGwgcGF0aCBvZiBkaXJlY3RvcnkgdG8gYWRkIHRvIFpJUCBBcmNoaXZlIGZpbGUKCQkgKglAcGFyYW1lCQlhcnJheQkkZXhjbHVkZXMJCUxpc3Qgb2YgZWl0aGVyIGFic29sdXRlIHBhdGggZXhjbHVzaW9ucyBvciByZWxhdGl2ZSBleGNsdXNpb25zCgkJICoJQHBhcmFtCQlzdHJpbmcJJHRlbXBkaXIJCUZ1bGwgcGF0aCBvZiBkaXJlY3RvcnkgZm9yIHRlbXBvcmFyeSB1c2FnZQoJCSAqCUBwYXJhbQkJb2JqZWN0CSRsaXN0bWFrZXIJCVRoZSBvYmplY3QgZnJvbSB3aGljaCB3ZSBjYW4gZ2V0IGFuIGluY2x1c2lvbnMgbGlzdAoJCSAqCUByZXR1cm4JCWJvb2wJCQkJCVRydWUgaWYgdGhlIGNyZWF0aW9uIHdhcyBzdWNjZXNzZnVsLCBmYWxzZSBvdGhlcndpc2UKCQkgKgoJCSAqLwoJCXByb3RlY3RlZCBmdW5jdGlvbiBjcmVhdGVfbGludXgoICR6aXAsICRkaXIsICRleGNsdWRlcywgJHRlbXBkaXIsICRsaXN0bWFrZXIgKSB7CgkJCgkJCSRleGl0Y29kZSA9IDA7CgkJCSRvdXRwdXQgPSBhcnJheSgpOwoJCQkkemlwcGF0aCA9ICcnOwoJCQkkY29tbWFuZCA9ICcnOwoJCQkkdGVtcF96aXAgPSAnJzsKCQkJJGV4Y2x1ZGluZ19hZGRpdGlvbmFsID0gZmFsc2U7CgkJCSRleGNsdWRlX2NvdW50ID0gMDsKCQkJJGV4Y2x1c2lvbnMgPSBhcnJheSgpOwoJCQkkaGF2ZV96aXBfZXJyb3JzID0gZmFsc2U7CgkJCSR6aXBfZXJyb3JzX2NvdW50ID0gMDsKCQkJJHppcF9lcnJvcnMgPSBhcnJheSgpOwoJCQkkaGF2ZV96aXBfd2FybmluZ3MgPSBmYWxzZTsKCQkJJHppcF93YXJuaW5nc19jb3VudCA9IDA7CgkJCSR6aXBfd2FybmluZ3MgPSBhcnJheSgpOwoJCQkkaGF2ZV96aXBfYWRkaXRpb25zID0gZmFsc2U7CgkJCSR6aXBfYWRkaXRpb25zX2NvdW50ID0gMDsKCQkJJHppcF9hZGRpdGlvbnMgPSBhcnJheSgpOwoJCQkkaGF2ZV96aXBfZGVidWcgPSBmYWxzZTsKCQkJJHppcF9kZWJ1Z19jb3VudCA9IDA7CgkJCSR6aXBfZGVidWcgPSBhcnJheSgpOwoJCQkkaGF2ZV96aXBfb3RoZXIgPSBmYWxzZTsKCQkJJHppcF9vdGhlcl9jb3VudCA9IDA7CgkJCSR6aXBfb3RoZXIgPSBhcnJheSgpOwoJCQkkemlwX3VzaW5nX2xvZ19maWxlID0gZmFsc2U7CgkJCSRsb2dmaWxlX25hbWUgPSAnJzsKCQkJJHppcF9pZ25vcmluZ19zeW1saW5rcyA9IGZhbHNlOwoJCQoJCQkvLyBUaGUgYmFzZWRpciBtdXN0IGhhdmUgYSB0cmFpbGluZyBkaXJlY3Rvcnkgc2VwYXJhdG9yCgkJCSRiYXNlZGlyID0gKCBydHJpbSggdHJpbSggJGRpciApLCBESVJFQ1RPUllfU0VQQVJBVE9SICkgKSAuIERJUkVDVE9SWV9TRVBBUkFUT1I7CgkJCQoJCQlpZiAoIGVtcHR5KCAkdGVtcGRpciApIHx8ICFAZmlsZV9leGlzdHMoICR0ZW1wZGlyICkgKSB7CgkJCQoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnVGVtcG9yYXJ5IHdvcmtpbmcgZGlyZWN0b3J5IG11c3QgYmUgYXZhaWxhYmxlLicsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKTsJCQkJCgkJCQlyZXR1cm4gZmFsc2U7CgkJCQkKCQkJfQoJCQkJCQoJCQkvLyBUZWxsIHdoaWNoIHppcCB2ZXJzaW9uIGlzIGJlaW5nIHVzZWQKCQkJJHZlcnNpb24gPSAkdGhpcy0+Z2V0X3ppcF92ZXJzaW9uKCk7CgkJCQoJCQlpZiAoIHRydWUgPT09IGlzX2FycmF5KCAkdmVyc2lvbiApICkgewoJCQkKCQkJCSggKCAyID09ICR2ZXJzaW9uWyAnbWFqb3InIF0gKSAmJiAoIDAgPT0gJHZlcnNpb25bICdtaW5vcicgXSApICkgPyAkdmVyc2lvblsgJ21pbm9yJyBdID0gJ1gnIDogdHJ1ZSA7CgkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIHNwcmludGYoIF9fKCAnVXNpbmcgemlwIHZlcnNpb246ICUxJHMuJTIkcycsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCAkdmVyc2lvblsgJ21ham9yJyBdLCAkdmVyc2lvblsgJ21pbm9yJyBdICkgKTsKCQkJCQoJCQl9IGVsc2UgewoJCQkKCQkJCSR2ZXJzaW9uID0gYXJyYXkoICJtYWpvciIgPT4gIlgiLCAibWlub3IiID0+ICJZIiApOwoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBzcHJpbnRmKCBfXyggJ1VzaW5nIHppcCB2ZXJzaW9uOiAlMSRzLiUyJHMnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwgJHZlcnNpb25bICdtYWpvcicgXSwgJHZlcnNpb25bICdtaW5vcicgXSApICk7CgoJCQl9CgkJCQoJCQkvLyBHZXQgdGhlIGNvbW1hbmQgcGF0aCBmb3IgdGhlIHppcCBjb21tYW5kIC0gc2hvdWxkIHJldHVybiBhIHRyaW1tZWQgc3RyaW5nCgkJCSR6aXBwYXRoID0gJHRoaXMtPmdldF9jb21tYW5kX3BhdGgoIHNlbGY6OkNPTU1BTkRfWklQX1BBVEggKTsKCQkJCgkJCS8vIERldGVybWluZSBpZiB3ZSBhcmUgdXNpbmcgYW4gYWJzb2x1dGUgcGF0aAoJCQlpZiAoICFlbXB0eSggJHppcHBhdGggKSApIHsKCQkJCgkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCAnVXNpbmcgYWJzb2x1dGUgemlwIHBhdGg6ICcsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgLiAkemlwcGF0aCApOwoJCQkJCgkJCX0KCgkJCS8vIEFkZCB0aGUgdHJhaWxpbmcgc2xhc2ggaWYgcmVxdWlyZWQKCQkJJGNvbW1hbmQgPSAkdGhpcy0+c2xhc2hpZnkoICR6aXBwYXRoICkgLiAnemlwJzsJCgoJCQkvLyBIYXJkY29kaW5nIHNvbWUgYWRkaXRpb25hbCBvcHRpb25zIGZvciBub3cKCQkJLy8kY29tbWFuZCAuPSAnIC1xIC1yJzsKCQkJLy8gTm90ZTogbm8gbG9uZ2VyIHVzaW5nIHF1aWV0IF9idXRfIG1heSB1c2UgaXQgaWYgb3V0cHV0IGlzIGJlaW5nIHNlbnQgdG8gbG9nIGZpbGUKCQkJJGNvbW1hbmQgLj0gJyAtcic7CgkJCQoJCQkvLyBDaGVjayBpZiB0aGUgdmVyc2lvbiBvZiB6aXAgaW4gdXNlIHN1cHBvcnRzIGxvZyBmaWxlICh3aGljaCB3aWxsIGhlbHAgd2l0aCBtZW1vcnkgdXNhZ2UgZm9yIGxhcmdlIHNpdGVzKQoJCQlpZiAoICR0aGlzLT5nZXRfemlwX3N1cHBvcnRzX2xvZ19maWxlKCkgKSB7CgkJCQoJCQkJLy8gQ2hvb3NlIHRvIHVzZSBsb2cgZmlsZSBzbyBxdWlldGVuIHN0ZG91dCAtIHdlJ2xsIHNldCB1cCB0aGUgbG9nIGZpbGUgbGF0ZXIKCQkJCSRjb21tYW5kIC49ICcgLXEnOwoJCQkJJHppcF91c2luZ19sb2dfZmlsZSA9IHRydWU7CgkJCQoJCQl9CgkJCQoJCQkvLyBDaGVjayBpZiB3ZSBuZWVkIHRvIHR1cm4gb2ZmIGNvbXByZXNzaW9uIGJ5IHNldHRpbmdzIChmYXN0ZXIgYnV0IGxhcmdlciBiYWNrdXApCgkJCWlmICggdHJ1ZSAhPT0gJHRoaXMtPmdldF9jb21wcmVzc2lvbigpICkgewoJCQkKCQkJCSRjb21tYW5kIC49ICcgLTAnOwoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnWmlwIGFyY2hpdmUgY3JlYXRpb24gY29tcHJlc3Npb24gZGlzYWJsZWQgYmFzZWQgb24gc2V0dGluZ3MuJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSApOwoJCQkJCgkJCX0gZWxzZSB7CgkJCQoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnWmlwIGFyY2hpdmUgY3JlYXRpb24gY29tcHJlc3Npb24gZW5hYmxlZCBiYXNlZCBvbiBzZXR0aW5ncy4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCQoJCQl9CgkJCQoJCQkvLyBDaGVjayBpZiBpZ25vcmluZyAobm90IGZvbGxvd2luZykgc3ltbGlua3MKCQkJaWYgKCB0cnVlID09PSAkdGhpcy0+Z2V0X2lnbm9yZV9zeW1saW5rcygpICkgewoJCQkKCQkJCS8vIFdhbnQgdG8gbm90IGZvbGxvdyBzeW1saW5rcyBzbyBzZXQgY29tbWFuZCBvcHRpb24gYW5kIHNldCBmbGFnIGZvciBsYXRlciB1c2UKCQkJCWlmICggJHRoaXMtPmdldF9vc190eXBlKCkgIT0gc2VsZjo6T1NfVFlQRV9XSU4gKSB7CgkJCQkJJGNvbW1hbmQgLj0gJyAteSc7CgkJCQkJJHppcF9pZ25vcmluZ19zeW1saW5rcyA9IHRydWU7CgkJCQl9CgkJCQkKCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oJ1ppcCBhcmNoaXZlIGNyZWF0aW9uIHN5bWJvbGljIGxpbmtzIHdpbGwgbm90IGJlIGZvbGxvd2VkIGJhc2VkIG9uIHNldHRpbmdzLicsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKTsKCgkJCX0gZWxzZSB7CgkJCQoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnWmlwIGFyY2hpdmUgY3JlYXRpb24gc3ltYm9saWMgbGlua3Mgd2lsbCBiZSBmb2xsb3dlZCBiYXNlZCBvbiBzZXR0aW5ncy4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgoJCQl9CgkJCQoJCQkvLyBDaGVjayBpZiB3ZSBhcmUgaWdub3Jpbmcgd2FybmluZ3MgLSBtZWFuaW5nIGNhbiBzdGlsbCBnZXQgYSBiYWNrdXAgZXZlbgoJCQkvLyBpZiwgZS5nLiwgc29tZSBmaWxlcyBjYW5ub3QgYmUgcmVhZAoJCQlpZiAoIHRydWUgPT09ICR0aGlzLT5nZXRfaWdub3JlX3dhcm5pbmdzKCkgKSB7CgkJCQoJCQkJLy8gTm90ZTogd2FybmluZ3MgYXJlIGJlaW5nIGlnbm9yZWQgYnV0IHdpbGwgc3RpbGwgYmUgZ2F0aGVyZWQgYW5kIGxvZ2dlZAoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnWmlwIGFyY2hpdmUgY3JlYXRpb24gd2FybmluZ3Mgd2lsbCBiZSBpZ25vcmVkIGJhc2VkIG9uIHNldHRpbmdzLicsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKTsKCQkJCQoJCQl9IGVsc2UgewoJCQkKCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oJ1ppcCBhcmNoaXZlIGNyZWF0aW9uIHdhcm5pbmdzIHdpbGwgbm90IGJlIGlnbm9yZWQgYmFzZWQgb24gc2V0dGluZ3MuJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSApOwoKCQkJfQoJCQkJCgkJCS8vIERlbGV0ZSBhbnkgZXhpc3RpbmcgemlwIGZpbGUgb2Ygc2FtZSBuYW1lIC0gcmVhbGx5IHRoaXMgc2hvdWxkIG5ldmVyIGhhcHBlbgoJCQlpZiAoIEBmaWxlX2V4aXN0cyggJHppcCApICkgewoKCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oJ0V4aXN0aW5nIFpJUCBBcmNoaXZlIGZpbGUgd2lsbCBiZSByZXBsYWNlZC4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCQlAdW5saW5rKCAkemlwICk7CgoJCQl9CgkJCQkJCQoJCQkvLyBOb3cgd2UnbGwgc2V0IHVwIHRoZSBsb2dnaW5nIHRvIGZpbGUgaWYgcmVxdWlyZWQgLSB1c2UgZnVsbCBsb2dnaW5nCgkJCS8vIE5vdGU6IHdlIGFsd2F5cyB1c2UgdGhpcyBmaWxlIGVpdGhlciBmb3IgY29tbWFuZCBsaW5lIGxvZyBvcHRpb24gb3IgY2FwdHVyZWQgb3V0cHV0CgkJCS8vIHNvIGFsd2F5cyBzZXQgaXQKCQkJJGxvZ2ZpbGVfbmFtZSA9ICR0ZW1wZGlyIC4gc2VsZjo6WklQX0xPR19GSUxFX05BTUU7CgkJCWlmICggdHJ1ZSA9PT0gJHppcF91c2luZ19sb2dfZmlsZSApIHsKCQkJCgkJCQkvLyBVc2luZyB0aGUgY29tbWFuZCBsaW5lIGxvZ2ZpbGUgb3B0aW9uCgkJCQkkY29tbWFuZCAuPSAiIC1sZiAneyRsb2dmaWxlX25hbWV9JyAtbGkiOwoJCQkJCgkJCQkvLyBBY3R1YWwgY29tbWFuZCBvdXRwdXQgd2lsbCBiZSBzZW50IHRvIHRoZSBiaXQtYnVja2V0IGluIHRoZSBza3kKCQkJCS8vIFRPRE86IGlmIHdlIHdhbnQgdG8gY2FwdHVyZSBkZWJ1ZyBvdXRwdXQgd2UnbGwgbmVlZCBhIHJlYWwgZmlsZQoJCQkJLy8gaXMgaXQgc2FmZSB0byB1c2UgdGhlIHNhbWUgZmlsZW5hbWUgKHByb2JhYmx5IG5vdCkKCQkJCSRvdXRwdXQgPSAnL2Rldi9udWxsJzsKCQkJCgkJCX0gZWxzZSB7CgkJCQoJCQkJLy8gT2xkIHN0eWxlZSB6aXAgbm90IHN1cHBvcnRpbmcgbG9nZmlsZSBzbyByZWRpcmVjdCBvdXRwdXQgdG8gdGhlIGZpbGUgaW5zdGVhZAoJCQkJJG91dHB1dCA9ICRsb2dmaWxlX25hbWU7CgkJCQoJCQl9CgkJCQkJCQoJCQkvLyBTZXQgdGVtcG9yYXJ5IGRpcmVjdG9yeSB0byBzdG9yZSBaSVAgd2hpbGUgaXQncyBiZWluZyBnZW5lcmF0ZWQuCQkJCgkJCSRjb21tYW5kIC49ICIgLWIgJ3skdGVtcGRpcn0nIjsKCgkJCS8vIElmIHdhcm5pbmdzIGFyZSBiZWluZyBpZ25vcmVkIHdlIGNhbiB0ZWxsIHppcCB0byBjcmVhdGUgdGhlIHppcCBhcmNoaXZlIGluIHRoZSBmaW5hbAoJCQkvLyBsb2NhdGlvbiAtIG90aGVyd2lzZSB3ZSBtdXN0IHB1dCBpdCBpbiBhIHRlbXBvcmFyeSBsb2NhdGlvbiBhbmQgbW92ZSBpdCBsYXRlciBvbmx5CgkJCS8vIGlmIHRoZXJlIGFyZSBubyB3YXJuaW5ncy4gVGhpcyBjb3BlcyB3aXRoIHRoZSBjYXNlIHdoZXJlICh0aGlzKSBjb250cm9sbGluZyBzY3JpcHQKCQkJLy8gZ2V0cyB0aW1lZCBvdXQgYnkgdGhlIHNlcnZlciBhbmQgaWYgdGhlIGZpbGUgd2VyZSBjcmVhdGVkIGluIHRoZSBmaW5hbCBsb2NhdGlvbiB3aXRoCgkJCS8vIHdhcm5pbmdzIHRoYXQgc2hvdWxkIG5vdCBiZSBpZ25vcmVkIHdlIGNhbm5vdCBwcmV2ZW50IGl0IGJlaW5nIGNyZWF0ZWQuIFRoZSAtTU0gb3B0aW9uCgkJCS8vIGNvdWxkIGJlIHVzZWQgYnV0IHRoaXMgcHJldmVudHMgdXMgY2F0Y2hpbmcgc3VjaCB3YXJuaW5ncyBhbmQgYmVpbmcgYWJsZSB0byByZXBvcnQKCQkJLy8gdGhlbSB0byB0aGUgdXNlciBpbiB0aGUgY2FzZSB3aGVyZSB0aGUgc2NyaXB0IGhhc24ndCBiZWVuIHRlcm1pbmF0ZWQuIEFkZGl0aW9uYWxseSB0aGUKCQkJLy8gLU1NIG9wdGlvbiB3b3VsZCBiYWlsIG91dCBvbiB0aGUgZmlyc3QgZW5jb3VudGVyZWQgcHJvYmxlbSBhbmQgc28gaWYgdGhlcmUgd2VyZSBhIGZldwoJCQkvLyBwcm9ibGVtcyB0aGV5IHdvdWxkIGVhY2ggbm90IGJlIGZvdW5kIHVudGlsIHRoZSBjdXJyZW50IG9uZSBpcyBmaXhlZCBhbmQgdHJ5IGFnYWluLgoJCQlpZiAoIHRydWUgPT09ICR0aGlzLT5nZXRfaWdub3JlX3dhcm5pbmdzKCkgKSB7CgkJCQoJCQkJJHRlbXBfemlwID0gJHppcDsKCQkJCgkJCX0gZWxzZSB7CgkJCQoJCQkJJHRlbXBfemlwID0gJHRlbXBkaXIgLiBiYXNlbmFtZSggJHppcCApOwoJCQkJCgkJCX0JCQoKCQkJJGNvbW1hbmQgLj0gIiAneyR0ZW1wX3ppcH0nIC4iOwoJCQkKCQkJLy8gTm93IHdvcmsgb3V0IGV4Y2x1c2lvbnMgZGVwZW5kZW50IG9uIHdoYXQgd2UgaGF2ZSBiZWVuIGdpdmVuCgkJCWlmICggaXNfb2JqZWN0KCAkbGlzdG1ha2VyICkgJiYgKCBkZWZpbmVkKCAnVVNFX0VYUEVSSU1FTlRBTF9aSVBCVUREWV9JTkNMVVNJT04nICkgJiYgKCB0cnVlID09PSBVU0VfRVhQRVJJTUVOVEFMX1pJUEJVRERZX0lOQ0xVU0lPTiApICkgKSB7CgkJCQoJCQkJLy8gV2UncmUgZG9pbmcgYW4gaW5jbHVzaW9uIG9wZXJhdGlvbiwgYnV0IGZpcnN0IHdlJ2xsIGp1c3Qgc2hvdyB0aGUgZXhjbHVzaW9zbgoJCQkJCgkJCQkvLyBGb3IgemlwIHdlIG5lZWQgcmVsYXRpdmUgcmF0aGVyIHRoYW4gYWJzb2x1dGUgZXhjbHVzaW9uIHNwYXRocwoJCQkJJGV4Y2x1c2lvbnMgPSAkbGlzdG1ha2VyLT5nZXRfcmVsYXRpdmVfZXhjbHVkZXMoICRiYXNlZGlyICk7CgkJCQkKCQkJCWlmICggY291bnQoICRleGNsdXNpb25zICkgPiAwICkgewoJCQkJCgkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnQ2FsY3VsYXRpbmcgZGlyZWN0b3JpZXMgdG8gZXhjbHVkZSBmcm9tIGJhY2t1cC4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCQkJCgkJCQkJJGV4Y2x1ZGluZ19hZGRpdGlvbmFsID0gZmFsc2U7CgkJCQkJJGV4Y2x1ZGVfY291bnQgPSAwOwoJCQkJCWZvcmVhY2ggKCAkZXhjbHVzaW9ucyBhcyAkZXhjbHVkZSApIHsKCQkJCQkKCQkJCQkJaWYgKCAhc3Ryc3RyKCAkZXhjbHVkZSwgJ2JhY2t1cGJ1ZGR5X2JhY2t1cHMnICkgKSB7IC8vIFNldCB2YXJpYWJsZSB0byBzaG93IHdlIGFyZSBleGNsdWRpbmcgYWRkaXRpb25hbCBkaXJlY3RvcmllcyBiZXNpZGVzIGJhY2t1cCBkaXIuCgkKCQkJCQkJCSRleGNsdWRpbmdfYWRkaXRpb25hbCA9IHRydWU7CgkJCQkJCQkJCgkJCQkJCX0KCQkJCQkJCQoJCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCdFeGNsdWRpbmcnLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApIC4gJzogJyAuICRleGNsdWRlICk7CgkJCQkJCQkJCQkJCQkKCQkJCQkJJGV4Y2x1ZGVfY291bnQrKzsKCQkJCQkJCQoJCQkJCX0KCQkJCQkJCQkJCQoJCQkJfQoJCQkJCgkJCQkvLyBHZXQgdGhlIGxpc3Qgb2YgaW5jbHVzaW9ucyB0byBwcm9jZXNzCgkJCQkkaW5jbHVzaW9ucyA9ICRsaXN0bWFrZXItPmdldF90ZXJtaW5hbHMoKTsKCQkJCQoJCQkJLy8gRm9yIGVhY2ggZGlyZWN0b3J5IHdlIG5lZWQgdG8gcHV0IHRoZSAid2lsZGNhcmQiIG9uIHRoZSBlbmQKCQkJCWZvcmVhY2ggKCAkaW5jbHVzaW9ucyBhcyAmJGluY2x1c2lvbiApIHsKCQkJCQoJCQkJCWlmICggaXNfZGlyKCAkaW5jbHVzaW9uICkgKSB7CgkJCQkJCgkJCQkJCSRpbmNsdXNpb24gLj0gRElSRUNUT1JZX1NFUEFSQVRPUiAuICIqIjsKCQkJCQl9CgkJCQkKCQkJCQkvLyBSZW1vdmUgZGlyZWN0b3J5IHBhdGggcHJlZml4IGV4Y2x1ZGluZyBsZWFkaW5nIHNsYXNoIHRvIG1ha2UgcmVsYXRpdmUgKG5lZWRlZCBmb3IgemlwKQoJCQkJCSRpbmNsdXNpb24gPSBzdHJfcmVwbGFjZSggcnRyaW0oICRiYXNlZGlyLCBESVJFQ1RPUllfU0VQQVJBVE9SICksICcnLCAkaW5jbHVzaW9uICk7CgkJCQkJCQkJCQoJCQkJfQoJCQkJCgkJCQkvLyBOb3cgY3JlYXRlIHRoZSBpbmNsdXNpb25zIGZpbGUgaW4gdGhlIHRlbXBkaXIKCQkJCQoJCQkJLy8gQW5kIHVwZGF0ZSB0aGUgY29tbWFuZCBvcHRpb25zCgkJCQkkaWZpbGUgPSAkdGVtcGRpciAuIHNlbGY6OlpJUF9JTkNMVVNJT05TX0ZJTEVfTkFNRTsKCQkJCWlmICggZmlsZV9leGlzdHMoICRpZmlsZSApICkgewoJCQkJCgkJCQkJQHVubGluayggJGlmaWxlICk7CgkJCQkKCQkJCX0KCQkJCQoJCQkJZmlsZV9wdXRfY29udGVudHMoICRpZmlsZSwgaW1wbG9kZSggUEhQX0VPTCwgJGluY2x1c2lvbnMgKSAuIFBIUF9FT0wgLiBQSFBfRU9MICk7CgkJCQkKCQkJCSRjb21tYW5kIC49ICIgLWlAIiAuICIneyRpZmlsZX0nIjsKCQkJCgkJCX0gZWxzZSB7CgkJCQoJCQkJLy8gV2UncmUgZG9pbmcgYW4gZXhjbHVzaW9uIG9wZXJhdGlvbgoJCQkKCQkJCS8vJGNvbW1hbmQgLj0gIi1pICcqJyAiOyAvLyBOb3QgbmVlZGVkLiBaaXAgZGVmYXVsdHMgdG8gZG9pbmcgdGhpcy4gUmVtb3ZlZCBKdWx5IDEwLCAyMDEyIGZvciB2My4wLjQxLgoJCQkJCgkJCQkvLyBTaW5jZSB3ZSBoYWQgbm8gJGxpc3RtYWtlciBvYmplY3Qgb3Igbm90IHVzaW5nIGl0IGdldCB0aGUgc3RhbmRhcmQgcmVsYXRpdmUgZXhjbHVkZXMgdG8gcHJvY2VzcwoJCQkJJGV4Y2x1c2lvbnMgPSAkZXhjbHVkZXM7CgkJCQkKCQkJCWlmICggY291bnQoICRleGNsdXNpb25zICkgPiAwICkgewoJCQkJCgkJCQkJLy8gSGFuZGxlIGV4Y2x1c2lvbnMgYnkgcGxhY2luZyB0aGVtIGluIGFuIGV4Y2x1c2lvbiB0ZXh0IGZpbGUuCgkJCQkJJGV4Y2x1c2lvbl9maWxlID0gJHRlbXBkaXIgLiBzZWxmOjpaSVBfRVhDTFVTSU9OU19GSUxFX05BTUU7CgkJCQkJJHRoaXMtPl9yZW5kZXJfZXhjbHVzaW9uc19maWxlKCAkZXhjbHVzaW9uX2ZpbGUsICRleGNsdXNpb25zICk7CgkJCQkJCgkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBzcHJpbnRmKCBfXyggJ1VzaW5nIGV4Y2x1c2lvbiBmaWxlIGAlMSRzYCcsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCAkZXhjbHVzaW9uX2ZpbGUgKSApOwoJCQkJCSRjb21tYW5kIC49ICcgLXhAJyAuICIneyRleGNsdXNpb25fZmlsZX0nIjsKCQkJCQkJCQkJCQoJCQkJfQoJCQkKCQkJfQoJCQkKCQkJLy8gUmVtZW1iZXIgdGhlIGN1cnJlbnQgZGlyZWN0b3J5IGFuZCBjaGFuZ2UgdG8gdGhlIGRpcmVjdG9yeSBiZWluZyBhZGRlZCBzbyB0aGF0ICIuIiBpcyB2YWxpZCBpbiBjb21tYW5kCgkJCSR3b3JraW5nX2RpciA9IGdldGN3ZCgpOwoJCQljaGRpciggJGRpciApOwoJCQkKCQkJLy8gRXhlY3V0ZSBaSVAgY29tbWFuZCAtIHdlIGRvbid0IGNhcmUgYSBhYm91dCBXaW5kb3dzIGhlcmUgYmVjYXVzZSB0aGlzIG1ldGhvZCBpc24ndCBzdXBwb3J0ZWQgeWV0CgkJCS8vIFByZXBlbmQgImV4ZWMiIHNvIHRoYXQgc3Bhd25lZCBwcm9jZXNzIGJlY29tZXMgdGhlIGFjdHVhbCB6aXAgcHJvY2VzcwoJCQkkY29tbWFuZCA9ICdleGVjICcgLiAkY29tbWFuZDsKCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAkdGhpcy0+Z2V0X21ldGhvZF90YWcoKSAuIF9fKCcgY29tbWFuZCAoTGludXgpJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSAuICc6ICcgLiAkY29tbWFuZCApOwoJCQkKCQkJLy8gU2V0IHN0ZGluIHRvIGJlIGEgcGlwZSB0aGF0IHdlJ2xsIGNsb3NlIGltbWVkaWF0ZWx5IGFueXdheQoJCQkvLyBTZW5kIHN0ZG91dCB0byBhIGZpbGUgb3IgZHVtcCBpdCBkZXBlbmRlbnQgb24gdGhlIHppcCB2ZXJzaW9uICh0aGUgZGVzdGluYXRpb24gaXMgc2V0IGFib3ZlKQoJCQkvLyBTZW5kIHN0ZGVyciB0byB3aGVyZXZlciBzdGRvdXQgaXMgZ29pbmcgKG9uIHByZS12MyB6aXAgd2UgbmVlZCBzdGRlcnIgZm9yIHdhcm5pbmdzKQoJCQkkZGVzY3JpcHRvcnNwZWMgPSBhcnJheSgKCQkJCTAgPT4gYXJyYXkoICJwaXBlIiwgInIiICksCgkJCQkxID0+IGFycmF5KCAiZmlsZSIsICRvdXRwdXQsICJ3IiApLAoJCQkJMiA9PiBhcnJheSggImZpbGUiLCAkb3V0cHV0LCAidyIgKQoJCQkpOwoJCQkKCQkJJHByb2Nlc3MgPSBwcm9jX29wZW4oICRjb21tYW5kLCAkZGVzY3JpcHRvcnNwZWMsICRwaXBlcyApOwoJCQkKCQkJaWYgKCBpc19yZXNvdXJjZSggJHByb2Nlc3MgKSApIHsKCQkJCgkJCQlmY2xvc2UoICRwaXBlc1sgMCBdICk7IC8vIE5ldmVyIHdhbnQgdG8gc2VuZCBpbnB1dCBzbyBqdXN0IGNsb3NlIGl0CgkJCQkKCQkJCSRzdGF0dXMgPSBwcm9jX2dldF9zdGF0dXMoICRwcm9jZXNzICk7CgkJCQkKCQkJCXdoaWxlICggdHJ1ZSA9PSAkc3RhdHVzWyAncnVubmluZyddICkgewoJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oJ1ppcCBBcmNoaXZlIGZpbGUgY3JlYXRpb24gaW4gcHJvZ3Jlc3MuJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSApOwoJCQkJCXNsZWVwKDUpOwoJCQkJCSRzdGF0dXMgPSBwcm9jX2dldF9zdGF0dXMoICRwcm9jZXNzICk7CgkJCQkJCgkJCQkJLy8gQ291bGQgYWxzbyBjaGVjayBmb3IgcGVyc2lzdGVudCBmaW5hbCB6aXAgZmlsZSAoaS5lLiwgcHJlc2VudCBvdmVyIHR3byBsb29wcykKCQkJCQkvLyB3aGljaCBtaWdodCBtZWFuIHdlIGFyZSBzb21laG93IG5vdCBzZWVpbmcgdGhlIHByb2Nlc3MgYXMgZmluaXNoZWQgc28gd2Ugc2hvdWxkCgkJCQkJLy8gdGVybWluYXRlIGl0IGFuZCBjbG9zZSBpdCAtIGFuZCBpbmRpY2F0ZSBzb21lIGZhaWx1cmUKCQkJCX0KCQkJCQoJCQkJJGV4aXRjb2RlID0gJHN0YXR1c1sgJ2V4aXRjb2RlJyBdOwoJCQkJCgkJCQlwcm9jX2Nsb3NlKCAkcHJvY2VzcyApOwoJCQkJCgkJCX0gZWxzZSB7CgkJCQoJCQkJLy8gTXVzdCBjbGVhbiB1cCB0ZW1wb3JhcnkgZGlyZWN0b3J5CgkJCQoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnRmFpbGVkIHRvIGNyZWF0ZSBaaXAgcHJvY2VzczogJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSApOwoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnUmVtb3ZpbmcgdGVtcG9yYXJ5IGRpcmVjdG9yeS4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCQkKCQkJCWlmICggISggJHRoaXMtPmRlbGV0ZV9kaXJlY3RvcnlfcmVjdXJzaXZlKCAkdGVtcGRpciApICkgKSB7CgkJCQkKCQkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnVGVtcG9yYXJ5IGRpcmVjdG9yeSBjb3VsZCBub3QgYmUgZGVsZXRlZDogJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSAuICR0ZW1wZGlyICk7CgkJCQkKCQkJCX0KCQkJCQoJCQkJY2hkaXIoICR3b3JraW5nX2RpciApOwoJCQkJcmV0dXJuIGZhbHNlOwoJCQkJCgkJCX0KCQkJCgkJCS8vIFNldCBjdXJyZW50IHdvcmtpbmcgZGlyZWN0b3J5IGJhY2sgdG8gd2hlcmUgd2Ugd2VyZQoJCQljaGRpciggJHdvcmtpbmdfZGlyICk7CgkJCQoJCQkvLyBDb252ZW5pZW5jZSBmb3IgaGFuZGxpbmcgZGlmZmVyZW50IHNjYW5hcmlvcwoJCQkkcmVzdWx0ID0gZmFsc2U7CgkJCQoJCQkvLyBMb2cgZmlsZSBpcyBhbHdheXMgcHJlc2VudCAtIGVpdGhlciBjYXB0dXJpbmcgb3V0cHV0IG9yIGFzIGNvbW1hbmQgbGluZSBvcHRpb24KCQkJLy8gQWx3YXlzIHNjYW4gdGhlIGxvZ2ZpbGUgZm9yIHdhcm5pbmdzLCBldGMuIGFuZCBzaG93IHdhcm5pbmdzIGV2ZW4gaWYgdXNlciBoYXMgY2hvc2VuIHRvIGlnbm9yZSB0aGVtCgkJCXRyeSB7CgkJCQoJCQkJJGxvZ2ZpbGUgPSBuZXcgU3BsRmlsZU9iamVjdCggJGxvZ2ZpbGVfbmFtZSwgInJiIiApOwoJCQkJCgkJCQl3aGlsZSggISRsb2dmaWxlLT5lb2YoKSApIHsKCQkJCQoJCQkJCSRsaW5lID0gJGxvZ2ZpbGUtPmN1cnJlbnQoKTsKCQkJCQkkbG9nZmlsZS0+bmV4dCgpOwoJCQkJCgkJCQkJaWYgKCBwcmVnX21hdGNoKCAnL15ccyooemlwIHdhcm5pbmc6KS9pJywgJGxpbmUgKSApIHsKCQkJCQkKCQkJCQkJJHppcF93YXJuaW5nc1sgc2VsZjo6WklQX1dBUk5JTkdfR0VORVJJQ11bXSA9IHRyaW0oICRsaW5lICk7CgkJCQkJCSR6aXBfd2FybmluZ3NfY291bnQrKzsKCQkJCQkJCgkJCQkJfSBlbHNlaWYgKCBwcmVnX21hdGNoKCAnL15ccyooemlwIGVycm9yOikvaScsICRsaW5lICkgKSB7CgkJCQkJCgkJCQkJCSR6aXBfZXJyb3JzW10gPSB0cmltKCAkbGluZSApOwoJCQkJCQkkemlwX2Vycm9yc19jb3VudCsrOwoJCQkJCQoJCQkJCX0gZWxzZWlmICggcHJlZ19tYXRjaCggJy9eXHMqKGFkZGluZzopL2knLCAkbGluZSApICkgewoJCQkJCQoJCQkJCQkvLyBDdXJyZW50bHkgbm90IHByb2Nlc3NpbmcgYWRkaXRpb25zIGVudHJpZWQKCQkJCQkJLy8kemlwX2FkZGl0aW9uc1tdID0gdHJpbSggJGxpbmUgKTsKCQkJCQkJLy8kemlwX2FkZGl0aW9uc19jb3VudCsrOwoJCQkJCQoJCQkJCX0gZWxzZWlmICggcHJlZ19tYXRjaCggJy9eXHMqKHNkOikvaScsICRsaW5lICkgKSB7CgkJCQkJCgkJCQkJCSR6aXBfZGVidWdbXSA9IHRyaW0oICRsaW5lICk7CgkJCQkJCSR6aXBfZGVidWdfY291bnQrKzsKCQkJCQkKCQkJCQl9IGVsc2UgewoJCQkJCQoJCQkJCQkvLyBDdXJyZW50bHkgbm90IHByb2Nlc3Npbmcgb3RoZXIgZW50cmllcwoJCQkJCQkvLyR6aXBfb3RoZXJbXSA9IHRyaW0oICRsaW5lICk7CgkJCQkJCS8vJHppcF9vdGhlcl9jb3VudCsrOwoJCQkJCQoJCQkJCX0KCQkJCQkJCgkJCQl9CgkJCQkKCQkJCXVuc2V0KCAkbG9nZmlsZSApOwoJCQkJCgkJCQlAdW5saW5rKCAkbG9nZmlsZV9uYW1lICk7CgkJCQkKCQkJfSBjYXRjaCAoIEV4Y2VwdGlvbiAkZSApIHsKCQkJCgkJCQkvLyBTb21ldGhpbmcgZmlzaHkgLSB3ZSBzaG91bGQgaGF2ZSBiZWVuIGFibGUgdG8gb3BlbiB0aGUgbG9nIGZpbGUuLi4KCQkJCSRlcnJvcl9zdHJpbmcgPSAkZS0+Z2V0TWVzc2FnZSgpOwoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBzcHJpbnRmKCBfXygnTG9nIGZpbGUgY291bGQgbm90IGJlIG9wZW5lZCAtIGVycm9yIHJlcG9ydGVkOiAlMSRzJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwgJGVycm9yX3N0cmluZyApICk7CgkJCQkKCQkJfQoJCQkKCQkJLy8gU2V0IGNvbnZlbmllbmNlIGZsYWdzCQkJCgkJCSRoYXZlX3ppcF93YXJuaW5ncyA9ICggMCA8ICR6aXBfd2FybmluZ3NfY291bnQgKTsKCQkJJGhhdmVfemlwX2Vycm9ycyA9ICggMCA8ICR6aXBfZXJyb3JzX2NvdW50ICk7CgkJCSRoYXZlX3ppcF9hZGRpdGlvbnMgPSAoIDAgPCAkemlwX2FkZGl0aW9uc19jb3VudCApOwoJCQkkaGF2ZV96aXBfZGVidWcgPSAoIDAgPCAkemlwX2RlYnVnX2NvdW50ICk7CgkJCSRoYXZlX3ppcF9vdGhlciA9ICggMCA8ICR6aXBfb3RoZXJfY291bnQgKTsKCQkJCgkJCS8vIEFsd2F5cyByZXBvcnQgdGhlIG51bWJlciBvZiB3YXJuaW5ncyAtIGV2ZW4ganVzdCB0byBjb25maXJtIHRoYXQgd2UgZGlkbid0IGhhdmUgYW55CgkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgc3ByaW50ZiggX18oJ1ppcCBwcm9jZXNzIHJlcG9ydGVkOiAlMSRzIHdhcm5pbmdzJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwgJHppcF93YXJuaW5nc19jb3VudCApICk7CgoJCQkvLyBBbHdheXMgcmVwb3J0IHdhcm5pbmdzIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB1c2VyIGhhcyBzZWxlY3RlZCB0byBpZ25vcmUgdGhlbQoJCQlpZiAoIHRydWUgPT09ICRoYXZlX3ppcF93YXJuaW5ncyApIHsKCQkJCgkJCQkvLyBPdXRwdXQgb25seSB0aGUgZmlyc3QgbWF4X2xpbmVzIGxpbmVzIGF0IG1vc3QgLSBpZiBtb3JlIHRoZW4gaW5kaWNhdGUgdGhpcyBhbmQgbW92ZSB0aGUgZmlsZSBzbyBjYW4gYmVlbiByZXZpZXdlZAoJCQkJaWYgKCAkemlwX3dhcm5pbmdzX2NvdW50ID4gc2VsZjo6TUFYX1dBUk5JTkdfTElORVNfVE9fU0hPVyApIHsKCQkJCQoJCQkJCS8vIEFzIHdlIGhhdmUgbXVsdGktZGltZW5zaW9uYWwgYXJyYXkgd2UgbmVlZCB0byBpdGVyYXRlIHRocm91Z2ggdW50aWwgd2UgcmVhY2ggdGhlIG1heCB0byBzaG93CgkJCQkJJGZpcnN0X2xpbmVzID0gYXJyYXkoKTsKCQkJCQkKCQkJCQlmb3JlYWNoICggJHppcF93YXJuaW5ncyBhcyAkcmVhc29uID0+ICR3YXJuaW5nICkgewoJCQkJCQoJCQkJCQlmb3JlYWNoICggJHdhcm5pbmcgYXMgJGZpbGVuYW1lICkgewoKCQkJCQkJCSRmaXJzdF9saW5lc1tdID0gc3ByaW50ZiggX18oJ0ZpbGUgd2FybmluZyAoJTEkcyk6ICUyJHMnLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCBzZWxmOjokX3dhcm5pbmdfZGVzY1sgJHJlYXNvbiBdLCAkZmlsZW5hbWUgKTsKCQkJCQkJCWlmICggc2VsZjo6TUFYX1dBUk5JTkdfTElORVNfVE9fU0hPVyA8PSBzaXplb2YoICRmaXJzdF9saW5lcyApICkgeyBicmVhayAyOyB9CgoJCQkJCQl9CgkJCQkJCgkJCQkJfQoJCQkJCgkJCQkJZm9yZWFjaCAoICRmaXJzdF9saW5lcyBhcyAkbGluZSApIHsKCQkJCQoJCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCAnWmlwIHByb2Nlc3MgcmVwb3J0ZWQ6ICcsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgLiAkbGluZSApOwoJCQkJCgkJCQkJfQoJCQkJCQoJCQkJCS8vIFRvbyBtYW55IHdhcm5pbmdzIHRvIHNob3cgc28gZHVtcCB0aGVtIGluIGEgZmlsZSAoYW55IGV4aXN0aW5nIGZpbGUgd2lsbCBiZSBvdmVyd3JpdHRlbikKCQkJCQkkd2FybmluZ3NfZmlsZSA9IGRpcm5hbWUoIGRpcm5hbWUoICR0ZW1wZGlyICkgKSAuIERJUkVDVE9SWV9TRVBBUkFUT1IgLiAncGJfYmFja3VwYnVkZHknIC4gRElSRUNUT1JZX1NFUEFSQVRPUiAuIHNlbGY6OlpJUF9XQVJOSU5HU19GSUxFX05BTUU7CgkJCQkJCgkJCQkJJHdhcm5pbmdzX2FycmF5ID0gYXJyYXkoKTsKCQkJCQlmb3JlYWNoICggJHppcF93YXJuaW5ncyBhcyAkcmVhc29uID0+ICR3YXJuaW5nICkgewoJCQkJCQoJCQkJCQlmb3JlYWNoICggJHdhcm5pbmcgYXMgJGZpbGVuYW1lICkgewoKCQkJCQkJCSR3YXJuaW5nc19hcnJheVtdID0gc3ByaW50ZiggX18oJ0ZpbGUgd2FybmluZyAoJTEkcyk6ICUyJHMnIC4gUEhQX0VPTCwnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwgc2VsZjo6JF93YXJuaW5nX2Rlc2NbICRyZWFzb24gXSwgJGZpbGVuYW1lICk7CgoJCQkJCQl9CgkJCQkJCgkJCQkJfQoJCQkJCQkKCQkJCQlAZmlsZV9wdXRfY29udGVudHMoICR3YXJuaW5nc19maWxlLCAkd2FybmluZ3NfYXJyYXkgKTsKCQkJCQkKCQkJCQlpZiAoIEBmaWxlX2V4aXN0cyggJHdhcm5pbmdzX2ZpbGUgKSApIHsKCQkJCQkKCQkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXyggJ1ppcCBwcm9jZXNzIHJlcG9ydGVkICcsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgLiAoICR6aXBfd2FybmluZ3NfY291bnQgLSBzZWxmOjpNQVhfV0FSTklOR19MSU5FU19UT19TSE9XICkgLiBfXyggJyBtb3JlIGVycm9ycyAtIHBsZWFzZSByZXZpZXcgaW46ICcsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgLiAkd2FybmluZ3NfZmlsZSApOwoJCQkJCQkKCQkJCQl9CgkJCQkJCgkJCQkKCQkJCX0gZWxzZSB7CgkJCQkKCQkJCQkvLyBTbWFsbCBudW1iZXIgb2YgbGluZXMgc28ganVzdCBzaG93IHRoZW0gYWxsCgkJCQkJZm9yZWFjaCAoICR6aXBfd2FybmluZ3MgYXMgJHJlYXNvbiA9PiAkd2FybmluZyApIHsKCQkJCQkKCQkJCQkJZm9yZWFjaCAoICR3YXJuaW5nIGFzICRmaWxlbmFtZSApIHsKCgkJCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIHNwcmludGYoIF9fKCdGaWxlIHdhcm5pbmcgKCUxJHMpOiAlMiRzJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwgc2VsZjo6JF93YXJuaW5nX2Rlc2NbICRyZWFzb24gXSwgJGZpbGVuYW1lICkgKTsKCQkJCQkJCgkJCQkJCX0KCQkJCQkKCQkJCQl9CgkJCQkJCgkJCQl9CgkJCQkKCQkJfSBlbHNlIHsKCQkJCgkJCQkvLyBBcyB3ZSBoYXZlIG5vIHdhcm5pbmdzIG1ha2Ugc3VyZSB3ZSBkZWxldGUgYW55IHdhcm5pbmdzIGZpbGUgdGhhdCBtYXkgaGF2ZSBiZWVuIGxlZnQgZnJvbSBsYXN0IHRpbWUKCQkJCSR3YXJuaW5nc19maWxlID0gZGlybmFtZSggZGlybmFtZSggJHRlbXBkaXIgKSApIC4gRElSRUNUT1JZX1NFUEFSQVRPUiAuICdwYl9iYWNrdXBidWRkeScgLiBESVJFQ1RPUllfU0VQQVJBVE9SIC4gc2VsZjo6WklQX1dBUk5JTkdTX0ZJTEVfTkFNRTsKCQkJCWlmICggQGZpbGVfZXhpc3RzKCAkd2FybmluZ3NfZmlsZSApICkgewoJCQkJCgkJCQkJQHVubGluayggJHdhcm5pbmdzX2ZpbGUgKTsKCQkJCQkKCQkJCX0KCQkJCQkJCQkKCQkJfQoJCQkJCgkJCS8vIFNlZSBpZiB3ZSBjYW4gZmlndXJlIG91dCB3aGF0IGhhcHBlbmVkIC0gbm90ZSB0aGF0ICRleGl0Y29kZSBjb3VsZCBiZSBub24temVybyBmb3IgYSB3YXJuaW5nIG9yIGVycm9yCgkJCS8vIGlmICggKG5vIHppcCBmaWxlKSBvciAoZmF0YWwgZXhpdCBjb2RlKSBvciAobm90IGlnbm9yaW5nIHdhcm5hYmxlIGV4aXQgY29kZSkgb3IgKG5vdCBpZ25vcmluZyBzb21lIG90aGVyIGRldGVjdGVkIHdhcm5pbmcpICkKCQkJaWYgKCAoICEgQGZpbGVfZXhpc3RzKCAkdGVtcF96aXAgKSApIHx8CgkJCQkgKCAoIDAgIT0gJGV4aXRjb2RlICkgJiYgKCAxOCAhPSAkZXhpdGNvZGUgKSApIHx8CgkJCQkgKCAoIDE4ID09ICRleGl0Y29kZSApICYmICEkdGhpcy0+Z2V0X2lnbm9yZV93YXJuaW5ncygpICkgfHwKCQkJCSAoICRoYXZlX3ppcF93YXJuaW5ncyAgJiYgISR0aGlzLT5nZXRfaWdub3JlX3dhcm5pbmdzKCkgKSApIHsKCQkJCgkJCQkvLyBJZiB3ZSBoYWQgYSBub24temVybyBleGl0IGNvZGUgdGhlbiBzaG91bGQgcmVwb3J0IGl0IChmaWxlIG1heSBvciBtYXkgbm90IGJlIGNyZWF0ZWQpCgkJCQlpZiAoICRleGl0Y29kZSAhPSAwICkgewoJCQkJCgkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnWmlwIHByb2Nlc3MgZXhpdCBjb2RlOiAnLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApIC4gJGV4aXRjb2RlICk7CgkJCQkJCgkJCQl9CgkJCQkKCQkJCS8vIElmIHdlIGhhdmUgYW55IHppcCBlcnJvcnMgcmVwb3J0ZWQgc2hvdyB0aGVtIHJlZ2FyZGxlc3MKCQkJCWlmICggdHJ1ZSA9PT0gJGhhdmVfemlwX2Vycm9ycyApIHsKCQkJCQoJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgc3ByaW50ZiggX18oJ1ppcCBwcm9jZXNzIHJlcG9ydGVkOiAlMSRzIGVycm9ycycsJ2l0LWwxMG4tYmFja3VwYnVkZHknICksICR6aXBfZXJyb3JzX2NvdW50ICkgKTsKCQkJCQkKCQkJCQlmb3JlYWNoICggJHppcF9lcnJvcnMgYXMgJGxpbmUgKSB7CgkJCQkKCQkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXyggJ1ppcCBwcm9jZXNzIHJlcG9ydGVkOiAnLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApIC4gJGxpbmUgKTsKCQkJCQoJCQkJCX0KCQkJCQkKCQkJCX0KCgkJCQkvLyBSZXBvcnQgd2hldGhlciBvciBub3QgdGhlIHppcCBmaWxlIHdhcyBjcmVhdGVkICh3aGV0aGVyIHRoYXQgYmUgaW4gdGhlIGZpbmFsIG9yIHRlbXBvcmFyeSBsb2NhdGlvbikJCQkKCQkJCWlmICggISBAZmlsZV9leGlzdHMoICR0ZW1wX3ppcCApICkgewoJCQkJCgkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXyggJ1ppcCBBcmNoaXZlIGZpbGUgbm90IGNyZWF0ZWQgLSBjaGVjayBwcm9jZXNzIGV4aXQgY29kZS4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCQkJCgkJCQl9IGVsc2UgewoJCQkJCQoJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oICdaaXAgQXJjaGl2ZSBmaWxlIGNyZWF0ZWQgYnV0IHdpdGggZXJyb3JzL3dhcm5pbmdzIHNvIHdpbGwgYmUgZGVsZXRlZCAtIGNoZWNrIHByb2Nlc3MgZXhpdCBjb2RlIGFuZCB3YXJuaW5ncy4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgoJCQkJfQoJCQkJCgkJCQkvLyBUaGUgb3BlcmF0aW9uIGhhcyBmYWlsZWQgb25lIHdheSBvciBhbm90aGVyLiBOb3RlIHRoYXQgYXMgdGhlIHVzZXIgZGlkbid0IGNob29zZSB0byBpZ25vcmUgZXJyb3JzIHRoZSB6aXAgZmlsZQoJCQkJLy8gaXMgYWx3YXlzIGNyZWF0ZWQgaW4gYSB0ZW1wb3JhcnkgbG9jYXRpb24gYW5kIHRoZW4gb25seSBtb3ZlZCB0byBmaW5hbCBsb2NhdGlvbiBvbiBzdWNjZXNzIHdpdGhvdXQgZXJyb3Igb3Igd2FybmluZ3MuCgkJCQkvLyBUaGVyZWZvcmUgaWYgdGhlcmUgaXMgYSB6aXAgZmlsZSAocHJvZHVjZWQgYnV0IHdpdGggd2FybmluZ3MpIGl0IHdpbGwgbm90IGJlIHZpc2libGUgYW5kIHdpbGwgYmUgZGVsZXRlZCB3aGVuIHRoZQoJCQkJLy8gdGVtcG9yYXJ5IGRpcmVjdG9yeSBpcyBkZWxldGVkIGJlbG93LgoJCQkJCgkJCQkkcmVzdWx0ID0gZmFsc2U7CgkJCQkKCQkJfSBlbHNlIHsKCQkJCgkJCQkvLyBHb3QgZmlsZSB3aXRoIG5vIGVycm9yIG9yIHdhcm5pbmdzIF9vcl8gd2l0aCB3YXJuaW5ncyB0aGF0IHRoZSB1c2VyIGhhcyBjaG9zZW4gdG8gaWdub3JlCgkJCQlpZiAoIGZhbHNlID09PSAkdGhpcy0+Z2V0X2lnbm9yZV93YXJuaW5ncygpICkgewoJCQkJCgkJCQkJLy8gQmVjYXVzZSBub3QgaWdub3Jpbmcgd2FybmluZ3MgdGhlIHppcCBhcmNoaXZlIHdhcyBidWlsdCBpbiB0ZW1wb3JhcnkgbG9jYXRpb24gc28gd2UgbmVlZCB0byBtb3ZlIGl0CgkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnTW92aW5nIFppcCBBcmNoaXZlIGZpbGUgdG8gbG9jYWwgYXJjaGl2ZSBkaXJlY3RvcnkuJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSApOwoJCQkJCgkJCQkJLy8gTWFrZSBzdXJlIG5vIHN0YWxlIGZpbGUgaW5mb3JtYXRpb24KCQkJCQljbGVhcnN0YXRjYWNoZSgpOwoJCQkJCQoJCQkJCUByZW5hbWUoICR0ZW1wX3ppcCwgJHppcCApOwoJCQkJCQoJCQkJCWlmICggQGZpbGVfZXhpc3RzKCAkemlwICkgKSB7CgkJCQkJCgkJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oJ1ppcCBBcmNoaXZlIGZpbGUgbW92ZWQgdG8gbG9jYWwgYXJjaGl2ZSBkaXJlY3RvcnkuJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSApOwoJCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnbWVzc2FnZScsIF9fKCAnWmlwIEFyY2hpdmUgZmlsZSBzdWNjZXNzZnVsbHkgY3JlYXRlZCB3aXRoIG5vIGVycm9ycyBvciB3YXJuaW5ncy4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCQkJCQoJCQkJCQkkdGhpcy0+bG9nX2FyY2hpdmVfZmlsZV9zdGF0cyggJHppcCApOwoJCQkJCQkJCgkJCQkJCSRyZXN1bHQgPSB0cnVlOwoJCQkJCQkKCQkJCQl9IGVsc2UgewoJCQkJCQoJCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCdaaXAgQXJjaGl2ZSBmaWxlIGNvdWxkIG5vdCBiZSBtb3ZlZCB0byBsb2NhbCBhcmNoaXZlIGRpcmVjdG9yeS4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCQkJCSRyZXN1bHQgPSBmYWxzZTsKCQkJCQkJCgkJCQkJfQoJCQkJCQkKCQkJCX0gZWxzZSB7CgkJCQkKCQkJCQkvLyBXYXJuaW5ncyB3ZXJlIGJlaW5nIGlnbm9yZWQgc28gYnVpbHQgaW4gZmluYWwgbG9jYXRpb24gc28gbm8gbmVlZCB0byBtb3ZlIGl0CgkJCQkJaWYgKCBAZmlsZV9leGlzdHMoICR6aXAgKSApIHsKCQkJCQkKCQkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ21lc3NhZ2UnLCBfXyggJ1ppcCBBcmNoaXZlIGZpbGUgc3VjY2Vzc2Z1bGx5IGNyZWF0ZWQgd2l0aCBubyBlcnJvcnMgKGFueSB3YXJuaW5ncyBpZ25vcmVkIGJ5IHVzZXIgc2V0dGluZ3MpLicsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKTsKCQkJCQkJCgkJCQkJCSR0aGlzLT5sb2dfYXJjaGl2ZV9maWxlX3N0YXRzKCAkemlwICk7CgkJCQkJCQkKCQkJCQkJJHJlc3VsdCA9IHRydWU7CgkJCQkJCQoJCQkJCX0gZWxzZSB7CgkJCQkJCgkJCQkJCS8vIE9kZCBjb25kaXRpb24gLSBmaWxlIHNob3VsZCBiZSBwcmVzZW50IGJ1dCBhcHBhcmVudGx5IG5vdD8KCQkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnWmlwIEFyY2hpdmUgZmlsZSBjb3VsZCBub3QgYmUgZm91bmQgaW4gbG9jYWwgYXJjaGl2ZSBkaXJlY3RvcnkuJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSApOwoJCQkJCQkkcmVzdWx0ID0gZmFsc2U7CgkJCQkJCQoJCQkJCX0KCQkJCQoJCQkJfQoJCQkJCgkJCX0JCQkKCgkJCS8vIENsZWFudXAgdGhlIHRlbXBvcmFyeSBkaXJlY3RvcnkgdGhhdCB3aWxsIGhhdmUgYWxsIGRldHJpdHVzIGFuZCBtYXliZSBpbmNvbXBsZXRlIHppcCBmaWxlCQkJCgkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oJ1JlbW92aW5nIHRlbXBvcmFyeSBkaXJlY3RvcnkuJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSApOwoJCQkKCQkJaWYgKCAhKCAkdGhpcy0+ZGVsZXRlX2RpcmVjdG9yeV9yZWN1cnNpdmUoICR0ZW1wZGlyICkgKSApIHsKCQkJCgkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnVGVtcG9yYXJ5IGRpcmVjdG9yeSBjb3VsZCBub3QgYmUgZGVsZXRlZDogJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSAuICR0ZW1wZGlyICk7CgkJCQoJCQl9CgkJCQoJCQlyZXR1cm4gJHJlc3VsdDsKCQkJCQkJCQkJCQkJCgkJfQoJCQoJCS8qKgoJCSAqCWV4dHJhY3QoKQoJCSAqCgkJICoJRXh0cmFjdHMgdGhlIGNvbnRlbnRzIG9mIGEgemlwIGZpbGUgdG8gdGhlIHNwZWNpZmllZCBkaXJlY3RvcnkgdXNpbmcgdGhlIGJlc3QgdW56aXAgbWV0aG9kcyBwb3NzaWJsZS4KCQkgKgoJCSAqCUBwYXJhbQlzdHJpbmcJCSR6aXBfZmlsZQkJCQkJRnVsbCBwYXRoICYgZmlsZW5hbWUgb2YgWklQIGZpbGUgdG8gZXh0cmFjdCBmcm9tLgoJCSAqCUBwYXJhbQlzdHJpbmcJCSRkZXN0aW5hdGlvbl9kaXJlY3RvcnkJCUZ1bGwgZGlyZWN0b3J5IHBhdGggdG8gZXh0cmFjdCBpbnRvLgoJCSAqCUByZXR1cm4JYm9vbAkJCQkJCQkJCXRydWUgb24gc3VjY2VzcywgZmFsc2Ugb3RoZXJ3aXNlCgkJICovCgkJcHVibGljIGZ1bmN0aW9uIGV4dHJhY3QoICR6aXBfZmlsZSwgJGRlc3RpbmF0aW9uX2RpcmVjdG9yeSA9ICcnKSB7CgkJCgkJCS8vIFRoaXMgc2hvdWxkIG5ldmVyIGJlIGNhbGxlZCBidXQganVzdCBpbiBjYXNlIHJldHVybiBmYWxzZSBzaWxlbnRseQoJCQkvL3BiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oJ1RoZSAnLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApIC4gJHRoaXMtPmdldF9tZXRob2RfdGFnKCkgLiBfXygnIG1ldGhvZCBpcyBub3QgY3VycmVudGx5IHN1cHBvcnRlZCBmb3IgdW5hcmNoaXZpbmcuJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSApOwoJCQlyZXR1cm4gZmFsc2U7CgkJCQoJCX0KCgkJLyoqCgkJICoJZmlsZV9leGlzdHMoKQoJCSAqCQoJCSAqCVRlc3RzIHdoZXRoZXIgYSBmaWxlICh3aXRoIHBhdGgpIGV4aXN0cyBpbiB0aGUgZ2l2ZW4gemlwIGZpbGUKCQkgKglJZiBsZWF2ZV9vcGVuIGlzIHRydWUgdGhlbiB0aGUgemlwIG9iamVjdCB3aWxsIGJlIGxlZnQgb3BlbiBmb3IgZmFzdGVyIGNoZWNraW5nIGZvciBzdWJzZXF1ZW50IGZpbGVzIHdpdGhpbiB0aGlzIHppcAoJCSAqCQoJCSAqCUBwYXJhbQkJc3RyaW5nCSR6aXBfZmlsZQkJVGhlIHppcCBmaWxlIHRvIGNoZWNrCgkJICoJQHBhcmFtCQlzdHJpbmcJJGxvY2F0ZV9maWxlCVRoZSBmaWxlIHRvIHRlc3QgZm9yCgkJICoJQHBhcmFtCQlib29sCSRsZWF2ZV9vcGVuCQlPcHRpb25hbDogVHJ1ZSBpZiB0aGUgemlwIGZpbGUgc2hvdWxkIGJlIGxlZnQgb3BlbgoJCSAqCUByZXR1cm4JCWJvb2wvYXJyYXkJCQkJVHJ1ZSBpZiB0aGUgZmlsZSBpcyBmb3VuZCBpbiB0aGUgemlwIGFuZCBmYWxzZSBpZiBub3QsIGFycmF5IGZvciBvdGhlciBwcm9ibGVtCgkJICoKCQkgKi8KCQlwdWJsaWMgZnVuY3Rpb24gZmlsZV9leGlzdHMoICR6aXBfZmlsZSwgJGxvY2F0ZV9maWxlLCAkbGVhdmVfb3BlbiA9IGZhbHNlICkgewoJCQoJCQkvLyBUaGlzIHNob3VsZCBuZXZlciBiZSBjYWxsZWQgYnV0IGp1c3QgaW4gY2FzZSByZXR1cm4gZmFsc2Ugc2lsZW50bHkKCQkJLy9wYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCdUaGUgJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSAuICR0aGlzLT5nZXRfbWV0aG9kX3RhZygpIC4gX18oJyBtZXRob2QgaXMgbm90IGN1cnJlbnRseSBzdXBwb3J0ZWQgZm9yIGFyY2hpdmUgZmlsZSBjaGVja2luZy4nLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCXJldHVybiBhcnJheSggMSwgIk1ldGhvZCBkb2VzIG5vdCBzdXBwb3J0IGFjdGlvbiIgKTsKCgkJfQoJCQoJCS8qCWdldF9maWxlX2xpc3QoKQoJCSAqCQoJCSAqCUdldCBhbiBhcnJheSBvZiBhbGwgZmlsZXMgaW4gYSB6aXAgZmlsZSB3aXRoIHNvbWUgZmlsZSBwcm9wZXJ0aWVzLgoJCSAqCQoJCSAqCUBwYXJhbQkJc3RyaW5nCQkkemlwX2ZpbGUJVGhlIGZpbGUgdG8gbGlzdCB0aGUgY29udGVudCBvZgoJCSAqCUByZXR1cm4JCWJvb2x8YXJyYXkJCQkJZmFsc2Ugb24gZmFpbHVyZSwgb3RoZXJ3aXNlIGFycmF5IG9mIGZpbGUgcHJvcGVydGllcyAobWF5IGJlIGVtcHR5KQoJCSAqLwoJCXB1YmxpYyBmdW5jdGlvbiBnZXRfZmlsZV9saXN0KCAkemlwX2ZpbGUgKSB7CgkJCgkJCS8vIFRoaXMgc2hvdWxkIG5ldmVyIGJlIGNhbGxlZCBidXQganVzdCBpbiBjYXNlIHJldHVybiBmYWxzZSBzaWxlbnRseQoJCQkvL3BiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oJ1RoZSAnLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApIC4gJHRoaXMtPmdldF9tZXRob2RfdGFnKCkgLiBfXygnIG1ldGhvZCBpcyBub3QgY3VycmVudGx5IHN1cHBvcnRlZCBmb3IgYXJjaGl2ZSBmaWxlIGxpc3RpbmcuJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSApOwoJCQlyZXR1cm4gZmFsc2U7CgoJCX0KCQkKCQkvKglzZXRfY29tbWVudCgpCgkJICoJCgkJICoJUmV0cmlldmUgYXJjaGl2ZSBjb21tZW50LgoJCSAqCQoJCSAqCUBwYXJhbQkJc3RyaW5nCQkJJHppcF9maWxlCQlGaWxlbmFtZSBvZiBhcmNoaXZlIHRvIHNldCBjb21tZW50IG9uLgoJCSAqCUBwYXJhbQkJc3RyaW5nCQkJJGNvbW1lbnQJCUNvbW1lbnQgdG8gYXBwbHkgdG8gYXJjaGl2ZS4KCQkgKglAcmV0dXJuCQlib29sfHN0cmluZwkJCQkJCXRydWUgb24gc3VjY2VzcywgZXJyb3IgbWVzc2FnZSBvdGhlcndpc2UuCgkJICovCgkJcHVibGljIGZ1bmN0aW9uIHNldF9jb21tZW50KCAkemlwX2ZpbGUsICRjb21tZW50ICkgewoJCQoJCQkvLyBUaGlzIHNob3VsZCBuZXZlciBiZSBjYWxsZWQgYnV0IGp1c3QgaW4gY2FzZSByZXR1cm4gZmFsc2Ugc2lsZW50bHkKCQkJLy9wYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCdUaGUgJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSAuICR0aGlzLT5nZXRfbWV0aG9kX3RhZygpIC4gX18oJyBtZXRob2QgaXMgbm90IGN1cnJlbnRseSBzdXBwb3J0ZWQgZm9yIGFyY2hpdmUgY29tbWVudCBzZXR0aW5nLicsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKTsKCQkJcmV0dXJuICJNZXRob2QgZG9lcyBub3Qgc3VwcG9ydCBhY3Rpb24iOwoKCQl9CgoJCS8qCWdldF9jb21tZW50KCkKCQkgKgkKCQkgKglSZXRyaWV2ZSBhcmNoaXZlIGNvbW1lbnQuCgkJICoJCgkJICoJQHBhcmFtCQlzdHJpbmcJCSR6aXBfZmlsZQkJRmlsZW5hbWUgb2YgYXJjaGl2ZSB0byByZXRyaWV2ZSBjb21tZW50IGZyb20uCgkJICoJQHJldHVybgkJYm9vbHxzdHJpbmcJCQkJCWZhbHNlIG9uIGZhaWx1cmUsIFppcCBjb21tZW50IG90aGVyd2lzZS4KCQkgKi8KCQlwdWJsaWMgZnVuY3Rpb24gZ2V0X2NvbW1lbnQoICR6aXBfZmlsZSApIHsKCQkKCQkJLy8gVGhpcyBzaG91bGQgbmV2ZXIgYmUgY2FsbGVkIGJ1dCBqdXN0IGluIGNhc2UgcmV0dXJuIGZhbHNlIHNpbGVudGx5CgkJCS8vcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCBfXygnVGhlICcsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgLiAkdGhpcy0+Z2V0X21ldGhvZF90YWcoKSAuIF9fKCcgbWV0aG9kIGlzIG5vdCBjdXJyZW50bHkgc3VwcG9ydGVkIGZvciBhcmNoaXZlIGNvbW1lbnQgcmV0cmlldmFsLicsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKTsKCQkJcmV0dXJuIGZhbHNlOwoKCQl9CgkJCgl9IC8vIGVuZCBwbHVnaW5idWRkeV96YnppcHByb2MgY2xhc3MuCQoJCn0KPz4K
###PACKDATA,FILE_END,/lib/zipbuddy/zbzipproc.php,importbuddy/lib/zipbuddy/zbzipproc.php
###PACKDATA,FILE_START,/lib/zipbuddy/zbzipziparchive.php,importbuddy/lib/zipbuddy/zbzipziparchive.php

###PACKDATA,FILE_END,/lib/zipbuddy/zbzipziparchive.php,importbuddy/lib/zipbuddy/zbzipziparchive.php
###PACKDATA,FILE_START,/lib/zipbuddy/zipbuddy.php,importbuddy/lib/zipbuddy/zipbuddy.php

###PACKDATA,FILE_END,/lib/zipbuddy/zipbuddy.php,importbuddy/lib/zipbuddy/zipbuddy.php
###PACKDATA,FILE_START,/lib/mysqlbuddy/index.php,importbuddy/lib/mysqlbuddy/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/lib/mysqlbuddy/index.php,importbuddy/lib/mysqlbuddy/index.php
###PACKDATA,FILE_START,/lib/mysqlbuddy/mysqlbuddy.php,importbuddy/lib/mysqlbuddy/mysqlbuddy.php
PD9waHAKLyoJcGJfYmFja3VwYnVkZHlfbXlzcWxidWRkeSBjbGFzcwogKgkKICoJQHNpbmNlIDMuMC4wCiAqCiAqCUhlbHBzIGJhY2t1cCBhbmQgcmVzdG9yZSBkYXRhYmFzZSB0YWJsZXMuCiAqCUR1bXBzIGEgbXlzcWwgZGF0YWJhc2UgKGFsbCB0YWJsZXMsIHRhYmxlcyB3aXRoIGEgY2VydGFpbiBwcmVmaXgsIG9yIG5vbmUpIHdpdGggYWRkaXRpb25hbCBpbmNsdXNpb25zL2V4Y2x1c2lvbnMgb2YgdGFibGVzIHBvc3NpYmxlLgogKglBdXRvbWF0aWNhbGx5IGRldGVybWluZXMgYXZhaWxhYmxlIGR1bXAgbWV0aG9kcyAodW5sZXNzIG1ldGhvZCBpcyBmb3JjZWQpLiBSdW5zIG1ldGhvZHMgaW4gb3JkZXIgb2YgcHJlZmVyZW5jZS4gRmFsbHMgYmFjayBhdXRvbWF0aWNhbGx5CiAqCXRvIGFueSBgbGVzc2VyYCBtZXRob2RzIGlmIGFueSBmYWlsLgogKgogKglSZXF1aXJlbWVudHM6CiAqCiAqCQlFeHBlY3RzIG15c3FsIHRvIGFscmVhZHkgYmUgc2V0IHVwIGFuZCBjb25uZWN0ZWQuCiAqCiAqCUdlbmVyYWwgcHJvY2VzcyBvcmRlcjoKICoKICoJCUNvbnN0cnVjdGlvbjogX19jb25zdHJ1Y3QoKSAtPiBbYXZhaWxhYmxlX3ppcF9tZXRob2RzKCldCiAqCQlEdW1wOiBkdW1wKCkgLT4gX2NhbGN1bGF0ZV90YWJsZXMoKSAtPiBbX215c3FsIGFuZC9vciBfcGhwXQogKgogCQlNZXRob2QgcHJvY2VzczoKICoJCQlfbXlzcWwgbWV0aG9kIChGQVNUKToKICoJCQkJQnVpbGRzIHRoZSBjb21tYW5kIGxpbmUgLT4gcnVucyBjb21tYW5kIHZpYSBleGVjKCkgLT4gY2hlY2tzIGV4aXQgY29kZSAtPiB2ZXJpZmllcyAuc3FsIGZpbGUgd2FzIGNyZWF0ZWQ7IGZhbGxzIHRvIG5leHQgbWV0aG9kIGlmIGV4aXQgY29kZSBpcyBiYWQgb3IgLnNxbCBmaWxlIGlzIG1pc3NpbmcuCiAqCQkJX3BocCBtZXRob2QgKFNMT1c7IGNvbXBhdGliaWxpdHkgbW9kZTsgb25seSBtb2RlIHByZS0zLjApOgogKgkJCQlJdGVyYXRlcyB0aHJvdWdoIGFsbCB0YWJsZXMgaXNzdWluZyBTUUwgY29tbWFuZHMgdG8gc2VydmVyIHRvIGdldCBjcmVhdGUgc3RhdGVtZW50cyBhbmQgYWxsIGRhdGFiYXNlIGNvbnRlbnQuIFZlcnkgYnJ1dGUgZm9yY2UgbWV0aG9kLgogKgogKglAYXV0aG9yIER1c3RpbiBCb2x0b24gPCBodHRwOi8vZHVzdGluYm9sdG9uLmNvbSA+CiAqLwpjbGFzcyBwYl9iYWNrdXBidWRkeV9teXNxbGJ1ZGR5IHsKCQoJCgljb25zdCBDT01NQU5EX0xJTkVfTEVOR1RIX0NIRUNLX1RIUkVTSE9MRCA9IDI1MDsJCQkJCQkJCQkJCQkJLy8gSWYgY29tbWFuZCBsaW5lIGlzIGxvbmdlciB0aGFuIHRoaXMgdGhlbiB3ZSB3aWxsIHRyeSB0byBkZXRlcm1pbmUgbWF4IGNvbW1hbmQgbGluZSBsZW5ndGguCgkKCQoJLyoqKioqKioqKiogUHJvcGVydGllcyAqKioqKioqKioqLwoJCgkKCXByaXZhdGUgJF92ZXJzaW9uID0gJzAuMC4xJzsJCQkJCQkJCQkJCQkJCQkJCQkvLyBJbnRlcm5hbCB2ZXJzaW9uIG51bWJlciBmb3IgdGhpcyBsaWJyYXJ5LgoJCglwcml2YXRlICRfZGF0YWJhc2VfaG9zdCA9ICcnOwkJCQkJCQkJCQkJCQkJCQkJCS8vIERhdGFiYXNlIGhvc3Qvc2VydmVyLiBAc2VlIF9fY29uc3RydWN0KCkuCglwcml2YXRlICRfZGF0YWJhc2Vfc29ja2V0ID0gJyc7CQkJCQkJCQkJCQkJCQkJCQkJLy8gSWYgdXNpbmcgc29ja2V0cywgcG9pbnRzIHRvIHNvY2tldCBmaWxlLiBMZWZ0IGJsYW5rIGlmIHNvY2tldHMgbm90IGluIHVzZS4gQHNlZSBfX2NvbnN0cnVjdCgpLgoJcHJpdmF0ZSAkX2RhdGFiYXNlX25hbWUgPSAnJzsJCQkJCQkJCQkJCQkJCQkJCQkvLyBEYXRhYmFzZSBuYW1lLiBAc2VlIF9fY29uc3RydWN0KCkuCglwcml2YXRlICRfZGF0YWJhc2VfdXNlciA9ICcnOwkJCQkJCQkJCQkJCQkJCQkJCS8vIERhdGFiYXNlIHVzZXJuYW1lLiBAc2VlIF9fY29uc3RydWN0KCkuCglwcml2YXRlICRfZGF0YWJhc2VfcGFzcyA9ICcnOwkJCQkJCQkJCQkJCQkJCQkJCS8vIERhdGFiYXNlIHBhc3N3b3JkLiBAc2VlIF9fY29uc3RydWN0KCkuCglwcml2YXRlICRfZGF0YWJhc2VfcHJlZml4ID0gJyc7CQkJCQkJCQkJCQkJCQkJCQkJLy8gRGF0YWJhc2UgdGFibGUgcHJlZml4IHRvIGJhY2t1cCB3aGVuIGluIHByZWZpeCBtb2RlLiBAc2VlIF9fY29uc3RydWN0KCkuCgkKCXByaXZhdGUgJF9iYXNlX2R1bXBfbW9kZSA9ICcnOwkJCQkJCQkJCQkJCQkJCQkJCS8vIERldGVybWluZXMgYmFzZSB0YWJsZXMgdG8gaW5jbHVkZSBpbiBiYWNrdXAuIEV4OiBub25lLCBhbGwsIG9yIGJ5IHByZWZpeC4gQHNlZSBfX2NvbnN0cnVjdCgpLgoJcHJpdmF0ZSAkX2FkZGl0aW9uYWxfaW5jbHVkZXMgPSBhcnJheSgpOwkJCQkJCQkJCQkJCQkJCS8vIEFkZGl0aW9uYWwgdGFibGVzIHRvIGJhY2t1cCBpbiBhZGRpdGlvbiB0byB0aG9zZSBkZXRlcm1pbmVkIGJ5IGJhc2UgbW9kZS4KCXByaXZhdGUgJF9hZGRpdGlvbmFsX2V4Y2x1ZGVzID0gYXJyYXkoKTsJCQkJCQkJCQkJCQkJCQkvLyBUYWJsZXMgdG8gZXhjbHVkZSBmcm9tICggJF9hZGRpdGlvbmFsX2luY2x1ZGVzICsgdGhvc2UgZGV0ZXJtaW5lZCBieSBiYXNlIG1vZGUgKS4KCXByaXZhdGUgJF9tZXRob2RzID0gYXJyYXkoKTsJCQkJCQkJCQkJCQkJCQkJCQkvLyBBdmFpbGFibGUgbWVjaGFuaXNtcyBmb3IgZHVtcGluZyBpbiBvcmRlciBvZiBwcmVmZXJlbmNlLgoJcHJpdmF0ZSAkX215c3FsX2RpcmVjdG9yaWVzID0gYXJyYXkoKTsJCQkJCQkJCQkJCQkJCQkJLy8gUG9wdWxhdGVkIGJ5IF9jYWxjdWxhdGVfbXlzcWxfZGlyZWN0b3J5KCkuCglwcml2YXRlICRfZGVmYXVsdF9teXNxbF9kaXJlY3RvcmllcyA9IGFycmF5KCAnL3Vzci9iaW4vJywgJy91c3IvYmluL215c3FsLycsICcvdXNyL2xvY2FsL2Jpbi8nICk7CS8vIElmIG15c3FsIHRlbGxzIHVzIHdoZXJlIGl0cyBpbnN0YWxsZWQgd2UgcHJlcGVuZCB0byB0aGlzLiBCZWdpbm5pbmcgYW5kIHRyYWlsaW5nIHNsYXNoZXMuCglwcml2YXRlICRfbXlzcWxfZGlyZWN0b3J5ID0gJyc7CQkJCQkJCQkJCQkJCQkJCQkJLy8gVGVzdGVkIHdvcmtpbmcgbXlzcWwgZGlyZWN0b3J5IHRvIHVzZSBmb3IgYWN0dWFsIGR1bXAuCglwcml2YXRlICRfY29tbWFuZGJ1ZGR5OwoJCgkvKioqKioqKioqKiBNZXRob2RzICoqKioqKioqKiovCgkKCQoJLyoJX19jb25zdHJ1Y3QoKQoJICoJCgkgKglEZWZhdWx0IGNvbnN0cnVjdG9yLgoJICoJCgkgKglAcGFyYW0JCXN0cmluZwkJJGRhdGFiYXNlX2hvc3QJCQlIb3N0IC8gc2VydmVyIG9mIGRhdGFiYXNlIHRvIHB1bGwgZnJvbS4gTWF5IGJlIGluIHRoZSBmb3JtYXQ6IGBsb2NhbGhvc3RgIGZvciBub3JtYWw7IGBsb2NhbGhvc3Q6L3BhdGgvdG8vbXlzcWwuc29ja2AgZm9yIHNvY2tldHMuIElmIHNvY2tldHMgdGhlbiBwYXJhc2VkIGFuZCBpbnRlcm5hbCBjbGFzcyB2YXJpYWJsZXMgc2V0IGFwcHJvcHJpYXRlbHkuCgkgKglAcGFyYW0JCXN0cmluZwkJJGRhdGFiYXNlX25hbWUJCQlOYW1lIG9mIGRhdGFiYXNlIHRvIHB1bGwgZnJvbS4KCSAqCUBwYXJhbQkJc3RyaW5nCQkkZGF0YWJhc2VfdXNlcgkJCVVzZXIgb2YgZGF0YWJhc2UgdG8gcHVsbCBmcm9tLgoJICoJQHBhcmFtCQlzdHJpbmcJCSRkYXRhYmFzZV9wYXNzCQkJUGFzcyBvZiBkYXRhYmFzZSB0byBwdWxsIGZyb20uCgkgKglAcGFyYW0JCXN0cmluZwkJJGRhdGFiYXNlX3ByZWZpeAkJUHJlZml4IG9mIHRhYmxlcyBpbiBkYXRhYmFzZSB0byBwdWxsIGZyb20gLyBpbnNlcnQgaW50byAob25seSB1c2VkIGlmIGJhc2UgbW9kZSBpcyBgcHJlZml4YCkuCgkgKglAcGFyYW0JCWFycmF5CQkkZm9yY2VfbWV0aG9kcwkJCU9wdGlvbmFsIHBhcmFtZXRlciB0byBvdmVycmlkZSBhdXRvbWF0aWMgbWV0aG9kIGRldGVjdGlvbi4gU2tpcHMgdGVzdCBhbmQgcnVucyBmaXJzdCBtZXRob2QgZmlyc3QuICBGYWxscyBiYWNrIHRvIG90aGVyIG1ldGhvZHMgaWYgYW55IGZhaWx1cmUuIFBvc3NpYmxlIG1ldGhvZHM6ICBjb21tYW5kbGluZSwgcGhwCgkgKglAcmV0dXJuCQkKCSAqLwoJcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCAkZGF0YWJhc2VfaG9zdCwgJGRhdGFiYXNlX25hbWUsICRkYXRhYmFzZV91c2VyLCAkZGF0YWJhc2VfcGFzcywgJGRhdGFiYXNlX3ByZWZpeCwgJGZvcmNlX21ldGhvZHMgPSBhcnJheSgpICkgewoJCQoJCS8vIEhhbmRsZXMgY29tbWFuZCBsaW5lIGV4ZWN1dGlvbi4KCQlyZXF1aXJlX29uY2UoIHBiX2JhY2t1cGJ1ZGR5OjpwbHVnaW5fcGF0aCgpIC4gJy9saWIvY29tbWFuZGJ1ZGR5L2NvbW1hbmRidWRkeS5waHAnICk7CgkJJHRoaXMtPl9jb21tYW5kYnVkZHkgPSBuZXcgcGJfYmFja3VwYnVkZHlfY29tbWFuZGJ1ZGR5KCk7CgkJCgkJLy8gQ2hlY2sgZm9yIHVzZSBvZiBzb2NrZXRzIGluIGhvc3QuIEhhbmRsZSBpZiB1c2luZyBzb2NrZXRzLgoJCS8vJGRhdGFiYXNlX2hvc3QgPSAnbG9jYWxob3N0Oi9BcHBsaWNhdGlvbnMvWEFNUFAveGFtcHBmaWxlcy92YXIvbXlzcWwvbXlzcWwuc29jayc7CgkJaWYgKCBzdHJwb3MoICRkYXRhYmFzZV9ob3N0LCAnOicgKSA9PT0gZmFsc2UgKSB7IC8vIE5vcm1hbCBob3N0LgoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdEYXRhYmFzZSBob3N0IGZvciBkdW1waW5nOiBgJyAuICRkYXRhYmFzZV9ob3N0IC4gJ2AnICk7CgkJCSR0aGlzLT5fZGF0YWJhc2VfaG9zdCA9ICRkYXRhYmFzZV9ob3N0OwoJCX0gZWxzZSB7IC8vIE5vbi1ub3JtYWwgaG9zdCBzcGVjaWZpY2F0aW9uLgoJCQkkaG9zdF9zcGxpdCA9IGV4cGxvZGUoICc6JywgJGRhdGFiYXNlX2hvc3QgKTsKCQkJaWYgKCAhaXNfbnVtZXJpYyggJGhvc3Rfc3BsaXRbMV0gKSApIHsgLy8gU3RyaW5nIHNvIGFzc3VtZSBhIHNvY2tldC4KCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ0RhdGFiYXNlIGhvc3QgKHNvY2tldCkgZm9yIGR1bXBpbmcuIEhvc3Q6IGAnIC4gJGhvc3Rfc3BsaXRbMF0gLiAnYDsgU29ja2V0OiBgJyAuICRob3N0X3NwbGl0WzFdIC4gJ2AuJyApOwoJCQkJJHRoaXMtPl9kYXRhYmFzZV9ob3N0ID0gJGhvc3Rfc3BsaXRbMF07CgkJCQkkdGhpcy0+X2RhdGFiYXNlX3NvY2tldCA9ICRob3N0X3NwbGl0WzFdOwoJCQl9IGVsc2UgeyAvLyBOdW1lcmljLCB0cmVhdCBhcyBwb3J0IGFuZCBsZWF2ZSBhcyBvbmUgcGllY2UuCgkJCQkkdGhpcy0+X2RhdGFiYXNlX2hvc3QgPSAkZGF0YWJhc2VfaG9zdDsKCQkJfQoJCX0KCQl1bnNldCggJGhvc3Rfc3BsaXQgKTsKCQkKCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdMb2FkaW5nIG15c3FsZHVtcCBsaWJyYXJ5LicgKTsKCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdNeXNxbCBzZXJ2ZXIgZGVmYXVsdCBkaXJlY3RvcmllczogYCcgLiBpbXBsb2RlKCAnLCcsICR0aGlzLT5fZGVmYXVsdF9teXNxbF9kaXJlY3RvcmllcyApIC4gJ2AnICk7CgkJCgkJJHRoaXMtPl9kYXRhYmFzZV9uYW1lID0gJGRhdGFiYXNlX25hbWU7CgkJJHRoaXMtPl9kYXRhYmFzZV91c2VyID0gJGRhdGFiYXNlX3VzZXI7CgkJJHRoaXMtPl9kYXRhYmFzZV9wYXNzID0gJGRhdGFiYXNlX3Bhc3M7CgkJJHRoaXMtPl9kYXRhYmFzZV9wcmVmaXggPSAkZGF0YWJhc2VfcHJlZml4OwoJCQoJCWlmICggaXNfYXJyYXkoICRmb3JjZV9tZXRob2RzICkgKSB7CgkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ215c3FsYnVkZHk6IEZvcmNlIG1ldGhvZCBvZiBgJyAuIGNvdW50KCAkZm9yY2VfbWV0aG9kcyApIC4gJ2AgcGFzc2VkLicgKTsKCQl9IGVsc2UgewoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGJ1ZGR5OiBGb3JjZSBtZXRob2Qgbm90IGFuIGFycmF5LicgKTsKCQl9CgkJCgkJLy8gU2V0IG1lY2hhbmlzbSBmb3IgZHVtcGluZyAvIHJlc3RvcmluZy4KCQlpZiAoIGNvdW50KCAkZm9yY2VfbWV0aG9kcyApID4gMCApIHsgLy8gTWVjaGFuaXNtIGZvcmNlZC4gT3ZlcnJpZGluZyBhdXRvbWF0aWMgY2hlY2suCgkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdtZXNzYWdlJywgJ215c3FsYnVkZHk6IFNldHRpbmdzIG92ZXJyaWRpbmcgYXV0b21hdGljIGRldGVjdGlvbiBvZiBhdmFpbGFibGUgZGF0YWJhc2UgZHVtcCBtZXRob2RzLiBVc2luZyBmb3JjZWQgb3ZlcnJpZGUgbWV0aG9kczogYCcgLiBpbXBsb2RlKCAnLCcsICRmb3JjZV9tZXRob2RzICkgLiAnYC4nICk7CgkJCSR0aGlzLT5fbWV0aG9kcyA9ICRmb3JjZV9tZXRob2RzOwoJCX0gZWxzZSB7IC8vIE5vIG1ldGhvZCBkZWZpbmVkOyBhdXRvLWRldGVjdCB0aGUgYmVzdC4KCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ21lc3NhZ2UnLCAnbXlzcWxidWRkeTogTWV0aG9kIG5vdCBmb3JjZWQuIEFib3V0IHRvIGRldGVjdCBkaXJlY3RvcnkgYW5kIGF2YWlsYWJsZSBtZXRob2RzLicgKTsKCQkJLy8gVHJ5IHRvIGRldGVybWluZSBteXNxbCBsb2NhdGlvbiAvIHBvc3NpYmxlIGxvY2F0aW9ucy4KCQkJJHRoaXMtPl9teXNxbF9kaXJlY3RvcmllcyA9ICR0aGlzLT5fY2FsY3VsYXRlX215c3FsX2RpcigpOyAvLyBEb24ndCBuZWVkIHRvIGNoZWNrIHRoaXMgaW4gZm9yY2VkIG1vZGUuCgkJCQoJCQkkdGhpcy0+X21ldGhvZHMgPSAkdGhpcy0+YXZhaWxhYmxlX2R1bXBfbWV0aG9kcygpOyAvLyBSdW4gYWZ0ZXIgX2NhbGN1bGF0ZV9teXNxbF9kaXIoKS4KCQl9CgkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ21lc3NhZ2UnLCAnbXlzcWxidWRkeTogRGV0ZWN0ZWQgZGF0YWJhc2UgZHVtcCBtZXRob2RzOiBgJyAuIGltcGxvZGUoICcsJywgJHRoaXMtPl9tZXRob2RzICkgLiAnYC4nICk7CgkJCgl9IC8vIEVuZCBfX2NvbnN0cnVjdCgpLgoJCgkKCQoJLyoJYXZhaWxhYmxlX2R1bXBfbWV0aG9kcygpCgkgKgkKCSAqCWZ1bmN0aW9uIGRlc2NyaXB0aW9uCgkgKgkKCSAqCUBwYXJhbQkJCgkgKglAcmV0dXJuCQlzdHJpbmcJCQkJUG9zc2libGUgcmV0dXJuczogIG15c3FsZHVtcCwgcGhwCgkgKi8KCXB1YmxpYyBmdW5jdGlvbiBhdmFpbGFibGVfZHVtcF9tZXRob2RzKCkgewoJCQoJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ215c3FsZHVtcCB0ZXN0OiBUZXN0aW5nIGF2YWlsYWJsZSBteXNxbCBkYXRhYmFzZSBkdW1wIG1ldGhvZHMuJyApOwoJCWlmICggZnVuY3Rpb25fZXhpc3RzKCAnZXhlYycgKSApIHsgLy8gRXhlYyBpcyBhdmFpbGFibGUgc28gdGVzdCBteXNxbGR1bXAgZnJvbSBoZXJlLgoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGR1bXAgdGVzdDogZXhlYygpIGZ1bmN0aW9uIGV4aXN0cy4gVGVzdGluZyBydW5uaW5nIG15c3FsZHVtcCB2aWEgZXhlYygpLicgKTsKCQkJCgkJCQoJCQkvKioqKioqKioqKiBCZWdpbiBwcmVwYXJpbmcgY29tbWFuZCAqKioqKioqKioqLwoJCQkvLyBIYW5kbGUgV2luZG93cyB3YW50aW5nIC5leGUuCgkJCWlmICggc3RyaXN0ciggUEhQX09TLCAnV0lOJyApICYmICFzdHJpc3RyKCBQSFBfT1MsICdEQVJXSU4nICkgKSB7IC8vIFJ1bm5pbmcgV2luZG93cy4gKG5vdCBkYXJ3aW4pCgkJCQkkY29tbWFuZCA9ICdtc3FsZHVtcC5leGUnOwoJCQl9IGVsc2UgewoJCQkJJGNvbW1hbmQgPSAnbXlzcWxkdW1wJzsKCQkJfQoJCQkKCQkJJGNvbW1hbmQgLj0gIiAtLXZlcnNpb24iOwoJCQkKCQkJLy8gUmVkaXJlY3QgU1RERVJSIHRvIFNURE9VVC4KCQkJJGNvbW1hbmQgLj0gJyAgMj4mMSc7CgkJCQoJCQkvKioqKioqKioqKiBFbmQgcHJlcGFyaW5nIGNvbW1hbmQgKioqKioqKioqKi8KCQkJCgkJCS8vIExvb3AgdGhyb3VnaCBhbGwgcG9zc2libGUgZGlyZWN0b3JpZXMgdG8gcnVuIGNvbW1hbmQgdGhyb3VnaC4KCQkJZm9yZWFjaCggJHRoaXMtPl9teXNxbF9kaXJlY3RvcmllcyBhcyAkbXlzcWxfZGlyZWN0b3J5ICkgeyAvLyBUcnkgZWFjaCBwb3NzaWJsZSBkaXJlY3RvcnkuIG15c3FsIGRpcmVjdG9yeSBpbmNsdWRlZCB0cmFpbGluZyBzbGFzaC4KCQkJCQoJCQkJLy8gUnVuIGNvbW1hbmQuCgkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGR1bXAgdGVzdCBydW5uaW5nIG5leHQuJyApOwoJCQkJbGlzdCggJGV4ZWNfb3V0cHV0LCAkZXhlY19leGl0X2NvZGUgKSA9ICR0aGlzLT5fY29tbWFuZGJ1ZGR5LT5leGVjdXRlKCAkbXlzcWxfZGlyZWN0b3J5IC4gJGNvbW1hbmQgKTsKCQkJCQoJCQkJaWYgKCBzdHJpc3RyKCBpbXBsb2RlKCAnICcsICRleGVjX291dHB1dCApLCAnVmVyJyApICE9PSBmYWxzZSApIHsgLy8gU3RyaW5nIFZlciBhcHBlYXJlZCBpbiByZXNwb25zZSAoZXhwZWN0ZWQgcmVzcG9uc2UgdG8gbXlzcWxkdW1wIC0tdmVyc2lvbgoJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ215c3FsZHVtcCB0ZXN0OiBDb21tYW5kIGFwcGVhcnMgdG8gYmUgYWNjZXNzaWJsZSBhbmQgcmV0dXJucyBleHBlY3RlZCByZXNwb25zZS4nICk7CgkJCQkJJHRoaXMtPl9teXNxbF9kaXJlY3RvcnkgPSAkbXlzcWxfZGlyZWN0b3J5OyAvLyBTZXQgdG8gdXNlIHRoaXMgZGlyZWN0b3J5IGZvciB0aGUgcmVhbCBkdW1wLgoJCQkJCXJldHVybiBhcnJheSggJ2NvbW1hbmRsaW5lJywgJ3BocCcgKTsgLy8gbXlzcWxkdW1wIGJlc3QsIHBocCBuZXh0LgoJCQkJfQoJCQl9CgkJCQoJCQkKCQl9IGVsc2UgeyAvLyBObyBleGVjKCkgc28gbXVzdCBmYWxsIGJhY2sgdG8gUEhQIG1ldGhvZCBvbmx5LgoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGR1bXAgdGVzdDogZXhlYygpIHVuYXZhaWxhYmxlIHNvIHNraXBwaW5nIGNvbW1hbmQgbGluZSBteXNxbGR1bXAgY2hlY2suJyApOwoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnbWVzc2FnZScsICdteXNxbGR1bXAgdGVzdDogRmFsbGluZyBiYWNrIHRvIGRhdGFiYXNlIGNvbXBhdGliaWxpdHkgbW9kZSAoUEhQZHVtcCBlbXVsYXRpb24pLiBUaGlzIGlzIHNsb3dlci4nICk7CgkJCXJldHVybiBhcnJheSggJ3BocCcgKTsKCQl9CgkJCgkJcmV0dXJuIGFycmF5KCAncGhwJyApOwoJCQoJfSAvLyBFbmQgYXZhaWxhYmxlX2R1bXBfbWV0aG9kKCkuCgkKCQoJCgkvKglfY2FsY3VsYXRlX215c3FsX2RpcigpCgkgKgkKCSAqCVRyaWVzIHRvIGRldGVybWluZSB0aGUgcGF0aCB0byB3aGVyZSBteXNxbCBpcyBpbnN0YWxsZWQuICBOZWVkZWQgZm9yIHJ1bm5pbmcgYnkgY29tbWFuZCBsaW5lLiAgUHJlcGVuZHMgZm91bmQgbG9jYXRpb24gdG8gbGlzdCBvZiBwb3NzaWJsZSBkZWZhdWx0IG15c3FsIGRpcmVjdG9yaWVzLgoJICoJCgkgKglAcmV0dXJuCQlhcnJheQkJCUFycmF5IG9mIGRpcmVjdG9yaWVzIGluIHByZWZlcnJlZCBvcmRlci4KCSAqLwoJcHJpdmF0ZSBmdW5jdGlvbiBfY2FsY3VsYXRlX215c3FsX2RpcigpIHsKCQkKCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGJ1ZGR5OiBBdHRlbXB0aW5nIHRvIGNhbGN1bGF0ZSBleGFjdCBteXNxbCBkaXJlY3RvcnkuJyApOwoJCSRmYWlsZWQgPSB0cnVlOwoJCSRteXNxbF9kaXJlY3RvcmllcyA9ICR0aGlzLT5fZGVmYXVsdF9teXNxbF9kaXJlY3RvcmllczsKCQkKCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoICJTSE9XIFZBUklBQkxFUyBMSUtFICdiYXNlZGlyJyIgKTsKCQlpZiAoICRyZXN1bHQgIT09IGZhbHNlICkgewoJCQkkcm93ID0gbXlzcWxfZmV0Y2hfcm93KCAkcmVzdWx0ICk7CgkJCWlmICggJHJvdyAhPT0gZmFsc2UgKSB7CgkJCQkKCQkJCSRiYXNlZGlyID0gcnRyaW0oICRyb3dbMV0sICcvXFwnICk7IC8vIFRyaW0gdHJhaWxpbmcgc2xhc2hlcy4KCQkJCSRteXNxbGRpciA9ICRiYXNlZGlyIC4gJy9iaW4vJzsKCQkJCWFycmF5X3Vuc2hpZnQoICRteXNxbF9kaXJlY3RvcmllcywgJG15c3FsZGlyICk7IC8vIFByZXBlbmRzIHRoZSBqdXN0IGZvdW5kIGRpcmVjdG9yeSB0byB0aGUgYmVnaW5uaW5nIG9mIHRoZSBsaXN0LgoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnbXlzcWxidWRkeTogTXlzcWwgcmVwb3J0ZWQgaXRzIGRpcmVjdG9yeS4gUmVwb3J0ZWQ6IGAnIC4gJHJvd1sxXSAuICdgOyBBZGRpbmcgYmluYXJ5IGxvY2F0aW9uIHRvIGJlZ2lubmluZyBvZiBteXNxbCBkaXJlY3RvcnkgbGlzdDogYCcgLiAkbXlzcWxkaXIgLiAnYCcgKTsKCQkJCSRmYWlsZWQgPSBmYWxzZTsKCQkJCQoJCQl9CgkJCW15c3FsX2ZyZWVfcmVzdWx0KCAkcmVzdWx0ICk7IC8vIEZyZWUgbWVtb3J5LgoJCX0KCQkKCQlpZiAoICRmYWlsZWQgPT09IHRydWUgKSB7CgkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ215c3FsYnVkZHk6IE15c3FsIHdvdWxkIG5vdCByZXBvcnQgaXRzIGRpcmVjdG9yeS4nICk7CgkJfQoJCQoJCXJldHVybiAkbXlzcWxfZGlyZWN0b3JpZXM7CgkJCgl9IC8vIEVuZCBfY2FsY3VsYXRlX215c3FsX2RpcigpLgoJCgkKCQoJLyoJZHVtcCgpCgkgKgkKCSAqCWZ1bmN0aW9uIGRlc2NyaXB0aW9uCgkgKgoJICoJQHNlZSBfbXlzcWxkdW1wKCkuCgkgKglAc2VlIF9waHBkdW1wKCkuCgkgKgkKCSAqCUBwYXJhbQkJc3RyaW5nCQkkb3V0cHV0X2RpcmVjdG9yeQkJRGlyZWN0b3J5IHRvIG91dHB1dCB0by4gTWF5IGFsc28gYmUgdXNlZCBhcyBhIHRlbXBvcmFyeSBmaWxlIGxvY2F0aW9uLiBUcmFpbGluZyBzbGFzaCBhdXRvLWFkZGVkIGlmIG1pc3NpbmcuCgkgKglAcGFyYW0JCWFycmF5CQkkdGFibGVzCQkJCQlBcnJheSBvZiB0YWJsZXMgdG8gZHVtcC4KCSAqCVJFTU9WRUQ6IEBwYXJhbQkJc3RyaW5nCQkkYmFzZV9kdW1wX21vZGUJCQlEZXRlcm1pbmVzIHdoaWNoIGRhdGFiYXNlIHRhYmxlcyB0byBkdW1wIGJ5IGRlZmF1bHQuICRhZGRpdGlvbmFsX1tpbmNsdWRlcy9leGNsdWRlc10gbW9kaWZpZWQuIE1vZGVzOiBhbGwsIG5vbmUsIG9yIHByZWZpeC4KCSAqCVJFTU9WRUQ6IEBwYXJhbQkJYXJyYXkJCSRhZGRpdGlvbmFsX2luY2x1ZGVzCUFycmF5IG9mIGFkZGl0aW9uYWwgdGFibGUocykgdG8gSU5DTFVERSBpbiBkdW1wLiBBZGRlZCBpbiBhZGRpdGlvbiB0byB0aG9zZSBmb3VuZCBieSB0aGUgJGJhc2VfZHVtcF9tb2RlCgkgKglSRU1PVkVEOiBAcGFyYW0JCWFycmF5CQkkYWRkaXRpb25hbF9leGNsdWRlcwlBcnJheSBvZiBhZGRpdGlvbmFsIHRhYmxlKHMpIHRvIEVYQ0xVREUgZnJvbSBkdW1wLiBSZW1vdmVkIGZyb20gdGhvc2UgZm91bmQgYnkgdGhlICRiYXNlX2R1bXBfbW9kZSArICRhZGRpdGlvbmFsX2luY2x1ZGVzLgoJICoJQHJldHVybgoJICovCglwdWJsaWMgZnVuY3Rpb24gZHVtcCggJG91dHB1dF9kaXJlY3RvcnksICR0YWJsZXMgPSBhcnJheSgpICkgeyAvLywgJGJhc2VfZHVtcF9tb2RlLCAkYWRkaXRpb25hbF9pbmNsdWRlcyA9IGFycmF5KCksICRhZGRpdGlvbmFsX2V4Y2x1ZGVzID0gYXJyYXkoKSApIHsKCQkkcmV0dXJuID0gZmFsc2U7CgkJCgkJJG91dHB1dF9kaXJlY3RvcnkgPSBydHJpbSggJG91dHB1dF9kaXJlY3RvcnksICcvJyApIC4gJy8nOyAvLyBNYWtlIHN1cmUgd2UgaGF2ZSB0cmFpbGluZyBzbGFzaC4KCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnYWN0aW9uJywgJ3N0YXJ0X2RhdGFiYXNlJyApOwoJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdtZXNzYWdlJywgJ1N0YXJ0aW5nIGRhdGFiYXNlIGR1bXAgcHJvY2VkdXJlLicgKTsKCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICJteXNxbGJ1ZGR5OiBPdXRwdXQgZGlyZWN0b3J5OiBgeyRvdXRwdXRfZGlyZWN0b3J5fWAuIiApOwoJCWlmICggY291bnQoICR0YWJsZXMgKSA9PSAxICkgewoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdEdW1waW5nIHNpbmdsZSB0YWJsZSBgJyAuICR0YWJsZXNbMF0gLiAnYC4nICk7CgkJfSBlbHNlIHsKCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnVGFibGUgZHVtcCBjb3VudDogYCcgLiBjb3VudCggJHRhYmxlcyApIC4gJ2AuJyApOwoJCX0KCQlpZiAoIGZpbGVfZXhpc3RzKCAkb3V0cHV0X2RpcmVjdG9yeSAuICdkYl8xLnNxbCcgKSApIHsKCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnRGF0YWJhc2UgU1FMIGZpbGUgZXhpc3RzLiBJdCB3aWxsIGJlIGFwcGVuZGVkIHRvLicgKTsKCQl9CgkJCgkJLy8gQXR0ZW1wdCBlYWNoIG1ldGhvZCBpbiBvcmRlci4KCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdQcmVwYXJpbmcgdG8gZHVtcCB1c2luZyBhdmFpbGFibGUgbWV0aG9kKHMpIGJ5IHByaW9yaXR5LiBNZXRob2RzOiBgJyAuIGltcGxvZGUoICcsJywgJHRoaXMtPl9tZXRob2RzICkgLiAnYCcgKTsKCQlmb3JlYWNoKCAkdGhpcy0+X21ldGhvZHMgYXMgJG1ldGhvZCApIHsKCQkJaWYgKCBtZXRob2RfZXhpc3RzKCAkdGhpcywgIl9kdW1wX3skbWV0aG9kfSIgKSApIHsKCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ215c3FsYnVkZHk6IEF0dGVtcHRpbmcgZHVtcCBtZXRob2QgYCcgLiAkbWV0aG9kIC4gJ2AuJyApOwoJCQkJJHJlc3VsdCA9IGNhbGxfdXNlcl9mdW5jKCBhcnJheSggJHRoaXMsICJfZHVtcF97JG1ldGhvZH0iICksICRvdXRwdXRfZGlyZWN0b3J5LCAkdGFibGVzICk7CgkJCQkKCQkJCWlmICggJHJlc3VsdCA9PT0gdHJ1ZSApIHsgLy8gRHVtcCBjb21wbGV0ZWQgc3VjY2VzZnVsbHkgd2l0aCB0aGlzIG1ldGhvZC4KCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGJ1ZGR5OiBEdW1wIG1ldGhvZCBgJyAuICRtZXRob2QgLiAnYCBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5LicgKTsKCQkJCQkkcmV0dXJuID0gdHJ1ZTsKCQkJCQlicmVhazsKCQkJCX0gZWxzZWlmICggJHJlc3VsdCA9PT0gZmFsc2UgKSB7IC8vIER1bXAgZmFpbGVkIHRoaXMgbWV0aG9kLiBXaWxsIHRyeSBjb21wYXRpYmlsaXR5IGZhbGxiYWNrIHRvIG5leHQgbW9kZSBpZiBhYmxlLgoJCQkJCS8vIERvIG5vdGhpbmcuIFdpbGwgdHJ5IG5leHQgbW9kZSBuZXh0IGxvb3AuCgkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnbXlzcWxidWRkeTogRHVtcCBtZXRob2QgYCcgLiAkbWV0aG9kIC4gJ2AgZmFpbGVkLiBUcnlpbmcgYW5vdGhlciBjb21wYXRpYmlsaXR5IG1vZGUgbmV4dCBpZiBhYmxlLicgKTsKCQkJCX0gZWxzZSB7IC8vIFNvbWV0aGluZyBlbHNlIHJldHVybmVkOyBuZWVkIHRvIHJlc3VtZT8gVE9ETzogdGhpcyBpcyBmb3IgZnV0dXJlIHVzZSBmb3IgcmVzdW1pbmcgZHVtcC4KCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGJ1ZGR5OiBVbmV4ZXBlY3RlZCByZXNwb25zZTogYCcgLiBpbXBsb2RlKCAnLCcsICRyZXN1bHQgKSAuICdgJyApOwoJCQkJfQoJCQl9CgkJfQoJCQoJCS8vcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ3N0YXR1cycsICdkYXRhYmFzZV9lbmQnICk7CgkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2FjdGlvbicsICdmaW5pc2hfZGF0YWJhc2UnICk7CgkJCgkJaWYgKCAkcmV0dXJuID09PSB0cnVlICkgeyAvLyBTdWNjZXNzLgoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnbWVzc2FnZScsICdEYXRhYmFzZSBkdW1wIHByb2NlZHVyZSBzdWNjZWVkZWQuJyApOwoJCQlyZXR1cm4gdHJ1ZTsKCQl9IGVsc2UgeyAvLyBPdmVyYWxsIGZhaWx1cmUuCgkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdlcnJvcicsICdEYXRhYmFzZSBkdW1wIHByb2NlZHVyZSBmYWlsZWQuJyApOwoJCQlyZXR1cm4gZmFsc2U7CgkJfQoJCQoJfSAvLyBFbmQgZHVtcCgpLgoJCgkKCQoJLyoJX2R1bXBfY29tbWFuZGxpbmUoKQoJICoJCgkgKglmdW5jdGlvbiBkZXNjcmlwdGlvbgoJICoJCgkgKglAcGFyYW0JCXN0cmluZwkJJG91dHB1dF9kaXJlY3RvcnkJCURpcmVjdG9yeSB0byBvdXRwdXQgdG8uIE1heSBhbHNvIGJlIHVzZWQgYXMgYSB0ZW1wb3JhcnkgZmlsZSBsb2NhdGlvbi4gVHJhaWxpbmcgc2xhc2ggcmVxdWlyZWQuIGR1bXAoKSBhdXRvLWFkZHMgdHJhaWxpbmcgc2xhc2ggYmVmb3JlIHBhc3NpbmcuCgkgKglAcGFyYW0JCWFycmF5CQkkdGFibGVzCQkJCQlBcnJheSBvZiB0YWJsZXMgdG8gZHVtcC4KCSAqCVJFTU9WRUQ6IEBwYXJhbQkJc3RyaW5nCQkkYmFzZV9kdW1wX21vZGUJCQlCYXNlIGR1bXAgbW9kZS4gVXNlZCB0byB0ZWxsIHdoZXRoZXIgb3Igbm90IHRvIGR1bXAgZW50aXJlIGRhdGFiYXNlIG9yIHBpZWNlbWVhbCB0YWJsZXMuIFRyeSB0byBrZWVwIGNvbW1hbmQgbGluZSBzaG9ydC4KCSAqCVJFTU9WRUQ6IEBwYXJhbQkJYXJyYXkJCSRhZGRpdGlvbmFsX2V4Y2x1ZGVzCUFkZGl0aW9uYWwgZXhjbHVkZXMuIFVzZWQgdG8gdGVsbCB3aGV0aGVyIG9yIG5vdCB0byBkdW1wIGVudGlyZSBkYXRhYmFzZSBvciBwaWVjZW1lYWwgdGFibGVzLiBUcnkgdG8ga2VlcCBjb21tYW5kIGxpbmUgc2hvcnQuCgkgKglAcmV0dXJuCQkKCSAqLwoJcHJpdmF0ZSBmdW5jdGlvbiBfZHVtcF9jb21tYW5kbGluZSggJG91dHB1dF9kaXJlY3RvcnksICR0YWJsZXMgKSB7IC8vLCAkYmFzZV9kdW1wX21vZGUsICRhZGRpdGlvbmFsX2V4Y2x1ZGVzICkgewoJCQoJCSRvdXRwdXRfZmlsZSA9ICRvdXRwdXRfZGlyZWN0b3J5IC4gJ2RiXzEuc3FsJzsKCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGJ1ZGR5OiBQcmVwYXJpbmcgdG8gcnVuIGNvbW1hbmQgbGluZSBteXNxbGR1bXAgdmlhIGV4ZWMoKS4nICk7CgkJJGV4Y2x1ZGVfY29tbWFuZCA9ICcnOwoJCQoJCS8qCgkJaWYgKCAoICRiYXNlX2R1bXBfbW9kZSA9PSAnYWxsJyApICYmICggY291bnQoICRhZGRpdGlvbmFsX2V4Y2x1ZGVzICkgPT0gMCApICkgeyAvLyBEdW1waW5nIEFMTCB0YWJsZXMgaW4gdGhlIGRhdGFiYXNlIHNvIGRvIG5vdCBzcGVjaWZ5IHRhYmxlcyBpbiBjb21tYW5kIGxpbmUuCgkJCS8vIERvIG5vdGhpbmcuIEp1c3QgZHVtcCBmdWxsIGRhdGFiYXNlLgoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGJ1ZGR5OiBEdW1waW5nIGVudGlyZSBkYXRhYmFzZSB3aXRoIG5vIGV4Y2x1c2lvbnMuJyApOwoJCX0gZWxzZWlmICggKCAkYmFzZV9kdW1wX21vZGUgPT0gJ2FsbCcgKSAmJiAoIGNvdW50KCAkYWRkaXRpb25hbF9leGNsdWRlcyApID4gMCApICkgeyAvLyBEdW1waW5nIGFsbCB0YWJsZXMgYnkgZGVmYXVsdCBCVVQgYWxzbyBleGNsdWRpbmcgY2VydGFpbiBvbmVzLgoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGJ1ZGR5OiBEdW1waW5nIGVudGlyZSBkYXRhYmFzZSB3aXRoIGFkZGl0aW9uYWwgZXhjbHVzaW9ucy4nICk7CgkJCS8vIEhhbmRsZSBhZGRpdGlvbmFsIGV4Y2x1c2lvbnMuCgkJCSRhZGRpdGlvbmFsX2V4Y2x1ZGVzID0gYXJyYXlfZmlsdGVyKCAkYWRkaXRpb25hbF9leGNsdWRlcyApOyAvLyBpZ25vcmUgYW55IHBoYW50b20gZXhjbHVkZXMuCgkJCWZvcmVhY2goICRhZGRpdGlvbmFsX2V4Y2x1ZGVzIGFzICRhZGRpdGlvbmFsX2V4Y2x1ZGUgKSB7CgkJCQkkZXhjbHVkZV9jb21tYW5kIC49ICIgLS1pZ25vcmUtdGFibGU9eyR0aGlzLT5fZGF0YWJhc2VfbmFtZX0ueyRhZGRpdGlvbmFsX2V4Y2x1ZGV9IjsKCQkJfQoJCX0gZWxzZSB7IC8vIE9ubHkgZHVtcGluZyBjZXJ0YWluIAoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGJ1ZGR5OiBEdW1waW5nIHNwZWNpZmljIHRhYmxlcy4nICk7CgkJCSR0YWJsZXNfc3RyaW5nID0gaW1wbG9kZSggJyAnLCAkdGFibGVzICk7IC8vIFNwZWNpZmljIHRhYmxlcyBsaXN0ZWQgdG8gZHVtcC4KCQl9CgkJKi8KCQkKCQkkdGFibGVzX3N0cmluZyA9IGltcGxvZGUoICcgJywgJHRhYmxlcyApOyAvLyBTcGVjaWZpYyB0YWJsZXMgbGlzdGVkIHRvIGR1bXAuCgkJCgkJCgkJLyoqKioqKioqKiogQmVnaW4gcHJlcGFyaW5nIGNvbW1hbmQgKioqKioqKioqKi8KCQkvLyBIYW5kbGUgV2luZG93cyB3YW50aW5nIC5leGUuCgkJaWYgKCBzdHJpc3RyKCBQSFBfT1MsICdXSU4nICkgJiYgIXN0cmlzdHIoIFBIUF9PUywgJ0RBUldJTicgKSApIHsgLy8gUnVubmluZyBXaW5kb3dzLiAobm90IGRhcndpbikKCQkJJGNvbW1hbmQgPSAkdGhpcy0+X215c3FsX2RpcmVjdG9yeSAuICdtc3FsZHVtcC5leGUnOwoJCX0gZWxzZSB7CgkJCSRjb21tYW5kID0gJHRoaXMtPl9teXNxbF9kaXJlY3RvcnkgLiAnbXlzcWxkdW1wJzsKCQl9CgkJCgkJLy8gSGFuZGxlIHBvc3NpYmxlIHNvY2tldHMuCgkJaWYgKCAkdGhpcy0+X2RhdGFiYXNlX3NvY2tldCAhPSAnJyApIHsKCQkJJGNvbW1hbmQgLj0gIiAtLXNvY2tldD17JHRoaXMtPl9kYXRhYmFzZV9zb2NrZXR9IjsKCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnbXlzcWxidWRkeTogVXNpbmcgc29ja2V0cyBpbiBjb21tYW5kLicgKTsKCQl9CgkJCgkJLy8gVE9ETyBXSU5ET1dTIE5PVEU6IGluZm9ybWF0aW9uIGluIHRoZSBNeVNRTCBkb2N1bWVudGF0aW9uIGFib3V0IG15c3FsZHVtcCBuZWVkaW5nIHRvIHVzZSAtLXJlc3VsdC1maWxlPSBvbiBXaW5kb3dzIHRvIGF2b2lkIHNvbWUgaXNzdWUgd2l0aCBsaW5lIGVuZGluZ3MuCgkJLyoKCQlOb3RlczoKCQkJLS1za2lwLW9wdAkJCQlTa2lwcyBzb21lIGRlZmF1bHQgb3B0aW9ucy4gTVVTVCBhZGQgYmFjayBpbiBjcmVhdGUtb3B0aW9ucyBlbHNlIGF1dG9pbmNyZW1lbnQgd2lsbCBiZSBsb3N0ISBTZWUgaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL3JlZm1hbi81LjUvZW4vbXlzcWxkdW1wLmh0bWwjb3B0aW9uX215c3FsZHVtcF9vcHQKCQkJLS1xdWljawoJCQktLXNraXAtY29tbWVudHMJCQlEb250IGJvdGhlciB3aXRoIGV4dHJhIGNvbW1lbnRzLgoJCQktLWNyZWF0ZS1vcHRpb25zCQlSZXF1aXJlZCB0byBhZGQgaW4gYXV0byBpbmNyZW1lbnQgb3B0aW9uLgoJCQktLWRpc2FibGUta2V5cwkJCVByZXZlbnQgcmUtaW5kZXhpbmcgdGhlIGRhdGFiYXNlIGFmdGVyIGVhY2ggYW5kIGV2ZXJ5IGluc2VydCB1bnRpbCB0aGUgZW50aXJlIHRhYmxlIGlzIGluc2VydGVkLiBQcmV2ZW50cyB0aW1lb3V0cyB3aGVuIGEgZGIgdGFibGUgaGFzIGZ1bGx0ZXh0IGtleXMgZXNwZWNpYWxseS4KCQkqLwoJCSRjb21tYW5kIC49ICIgLS1ob3N0PSIgLiBlc2NhcGVzaGVsbGFyZyggJHRoaXMtPl9kYXRhYmFzZV9ob3N0ICkgLiAiIC0tdXNlcj0iIC4gZXNjYXBlc2hlbGxhcmcoICR0aGlzLT5fZGF0YWJhc2VfdXNlciApIC4gIiAtLXBhc3N3b3JkPSIgLiBlc2NhcGVzaGVsbGFyZyggJHRoaXMtPl9kYXRhYmFzZV9wYXNzICkgLiAiIC0tc2tpcC1vcHQgLS1xdWljayAtLWRpc2FibGUta2V5cyAtLXNraXAtY29tbWVudHMgLS1jcmVhdGUtb3B0aW9ucyB7JGV4Y2x1ZGVfY29tbWFuZH0gIiAuIGVzY2FwZXNoZWxsYXJnKCAkdGhpcy0+X2RhdGFiYXNlX25hbWUgKSAuICIgeyR0YWJsZXNfc3RyaW5nfSAyPiYxID4+IHskb3V0cHV0X2ZpbGV9IjsgLy8gMj4mMSByZWRpcmVjdCBTVERFUlIgdG8gU1RET1VULgoJCS8qKioqKioqKioqIEVuZCBwcmVwYXJpbmcgY29tbWFuZCAqKioqKioqKioqLwoJCQoJCQoJCS8qKioqKioqKioqIEJlZ2luIGNvbW1hbmQgbGluZSBsZW5ndGggY2hlY2sgKioqKioqKioqKi8KCQkvLyBTaW1wbGUgY2hlY2sgY29tbWFuZCBsaW5lIGxlbmd0aC4gSWYgaXQgYXBwZWFycyBsb25nIHRoZW4gZG8gYWR2YW5jZWQgY2hlY2sgdmlhIGNvbW1hbmQgbGluZSB0byBzZWUgd2hhdCBhY3R1YWwgbGltaXQgaXMuIEZhbGxzIGJhY2sgaWYgdG9vIGxvbmcgdG8gZXhlY3V0ZSBvdXIgcHJvY2VzcyBpbiBvbmUgZ28uCgkJLy8gVE9ETzogSW4gdGhlIGZ1dHVyZSBoYW5kbGUgZmFsbGJhY2sgYmV0dGVyIGJ5IHBvc3NpYmx5IGJyZWFraW5nIHRoZSBjb21tYW5kIHVwIGlmIHBvc3NpYmxlIHJhdGhlciB0aGFuIHN0cmljdCBmYWxsYmFjayB0byBQSFAgZHVtcGluZy4KCQkkY29tbWFuZF9sZW5ndGggPSBzdHJsZW4oICRjb21tYW5kICk7CgkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnbXlzcWxidWRkeTogQ29tbWFuZCBsZW5ndGg6IGAnIC4gJGNvbW1hbmRfbGVuZ3RoIC4gJ2AuJyApOwoJCWlmICggJGNvbW1hbmRfbGVuZ3RoID4gc2VsZjo6Q09NTUFORF9MSU5FX0xFTkdUSF9DSEVDS19USFJFU0hPTEQgKSB7IC8vIEFyYml0cmFyeSBsZW5ndGguIFNlZW1zIHN0YW5kYXJkIG1heCBsZW5ndGhzIGFyZSA+IDIwMDAwMCBvbiBMaW51eC4gfjg2MDAgb24gV2luZG93cz8KCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnbXlzcWxidWRkeTogQ29tbWFuZCBsaW5lIGxlbmd0aCBvZiBgJyAuICRjb21tYW5kX2xlbmd0aCAuICdgIChieXRlcykgaXMgbGFyZ2UgZW5vdWdoICggPicgLiBzZWxmOjpDT01NQU5EX0xJTkVfTEVOR1RIX0NIRUNLX1RIUkVTSE9MRCAuICcgKSB0byB2ZXJpZnkgY29tcGF0aWJpbGl0eS4gQ2hlY2tpbmcgbWF4aW11bSBhbGxvd2VkIGNvbW1hbmQgbGluZSBsZW5ndGggZm9yIHRoaXMgc3l0ZW0uJyApOwoJCQlsaXN0KCAkZXhlY19vdXRwdXQsICRleGVjX2V4aXRfY29kZSApID0gJHRoaXMtPl9jb21tYW5kYnVkZHktPmV4ZWN1dGUoICdlY2hvICQoKCAkKGdldGNvbmYgQVJHX01BWCkgLSAkKGVudiB8IHdjIC1jKSApKScgKTsgLy8gVmFsdWUgd2lsbCBiZSBhIG51bWJlci4gVGhpcyBpcyB0aGUgbWF4aW11bSBieXRlIHNpemUgb2YgdGhlIGNvbW1hbmQgbGluZS4KCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnbXlzcWxidWRkeTogQ29tbWFuZCBvdXRwdXQ6IGAnIC4gaW1wbG9kZSggJywnLCAkZXhlY19vdXRwdXQgKSAuICdgOyBFeGl0IGNvZGU6IGAnIC4gJGV4ZWNfZXhpdF9jb2RlIC4gJ2A7IEV4aXQgY29kZSBkZXNjcmlwdGlvbjogYCcgLiBwYl9iYWNrdXBidWRkeTo6JGZpbGVzeXN0ZW0tPmV4aXRfY29kZV9sb29rdXAoICRleGVjX2V4aXRfY29kZSApIC4gJ2AnICk7CgkJCWlmICggaXNfYXJyYXkoICRleGVjX291dHB1dCApICYmIGlzX251bWVyaWMoICRleGVjX291dHB1dFswXSApICkgewoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnbXlzcWxidWRkeTogRGV0ZWN0ZWQgbWF4aW11bSBjb21tYW5kIGxpbmUgbGVuZ3RoIGZvciB0aGlzIHN5c3RlbTogYCcgLiAkZXhlY19vdXRwdXRbMF0gLiAnYC4nICk7CgkJCQlpZiAoICRjb21tYW5kX2xlbmd0aCA+ICggJGV4ZWNfb3V0cHV0WzBdIC0gMTAwICkgKSB7IC8vIENoZWNrIGlmIHdlIGV4Y2VlZCBtYXhpbXVtIGxlbmd0aC4gU3VidHJhY3QgMTAwIHRvIG1ha2Ugcm9vbSBmb3IgcGF0aCBkZWZpbml0aW9uLgoJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ215c3FsYnVkZHk6IFRoaXMgc3lzdGVtXCdzIG1heGltdW0gY29tbWFuZCBsaW5lIGxlbmd0aCBvZiBgJyAuICRleGVjX291dHB1dFswXSAuICdgIGlzIHNob3J0ZXIgdGhhbiBjb21tYW5kIGxlbmd0aCBvZiBgJyAuICRjb21tYW5kX2xlbmd0aCAuICdgLiBGYWxsaW5nIGJhY2sgaW50byBjb21wYXRpYmlsaXR5IG1vZGUgdG8gaW5zdXJlIGRhdGFiYXNlIGR1bXAgaW50ZWdyaXR5LicgKTsKCQkJCQlyZXR1cm4gZmFsc2U7CgkJCQl9IGVsc2UgewoJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ215c3FsYnVkZHk6IFRoaXMgc3lzdGVtXCdzIG1heGltdW0gY29tbWFuZCBsaW5lIGxlbmd0aCBvZiBgJyAuICRleGVjX291dHB1dFswXSAuICdgIGlzIGxvbmdlciB0aGFuIGNvbW1hbmQgbGVuZ3RoIG9mIGAnIC4gJGNvbW1hbmRfbGVuZ3RoIC4gJ2AuIENvbnRpbnVpbmcuJyApOwoJCQkJfQoJCQl9IGVsc2UgewoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnbXlzcWxidWRkeTogVW5hYmxlIHRvIGRldGVybWluZSBtYXhpbXVtIGNvbW1hbmQgbGluZSBsZW5ndGguIEZhbGxpbmcgYmFjayBpbnRvIGNvbXBhdGliaWxpdHkgbW9kZSB0byBpbnN1cmUgZGF0YWJhc2UgZHVtcCBpbnRlZ3JpdHkuJyApOwoJCQkJcmV0dXJuIGZhbHNlOyAvLyBGYWxsIGJhY2sgdG8gY29tcGF0aWJpbHR5IG1vZGUganVzdCBpbiBjYXNlLgoJCQl9CgkJfSBlbHNlIHsKCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnbXlzcWxidWRkeTogQ29tbWFuZCBsaW5lIGxlbmd0aCBsZW5ndGggY2hlY2sgc2tpcHBlZCBzaW5jZSBpdCBpcyBsZXNzIHRoYW4gY2hlY2sgdGhyZXNob2xkIGAnIC4gc2VsZjo6Q09NTUFORF9MSU5FX0xFTkdUSF9DSEVDS19USFJFU0hPTEQgLiAnYC4nICk7CgkJfQoJCS8qKioqKioqKioqIEVuZCBjb21tYW5kIGxpbmUgbGVuZ3RoIGNoZWNrICoqKioqKioqKiovCgkJCgkJCgkJLy8gUnVuIGNvbW1hbmQuCgkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnbXlzcWxidWRkeTogUnVubmluZyBkdW1wIHZpYSBjb21tYW5kbGluZSBuZXh0LicgKTsKCQlsaXN0KCAkZXhlY19vdXRwdXQsICRleGVjX2V4aXRfY29kZSApID0gJHRoaXMtPl9jb21tYW5kYnVkZHktPmV4ZWN1dGUoICRjb21tYW5kICk7CgkJCgkJLy8gQ2hlY2sgZm9yIHVuZXhwZWN0ZWQgbXlzcWwgY29tbWFuZCBsaW5lIHJlc3BvbnNlIHRleHQuLi4KCQlpZiAoIGlzX2FycmF5KCAkZXhlY19vdXRwdXQgKSApIHsKCQkJZm9yZWFjaCggJGV4ZWNfb3V0cHV0IGFzICRleGVjX291dHB1dF9saW5lICkgewoJCQkJaWYgKCBmYWxzZSAhPT0gc3RyaXN0ciggJGV4ZWNfb3V0cHV0X2xpbmUsICd1bnJlY29nbml6ZWQgb3B0aW9uJyApICkgewoJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdlcnJvcicsICdteXNxbGR1bXAgZGlkIG5vdCByZWNvZ25pemUgb25lIG9yIG1vcmUgb3B0aW9ucy4gVmVyaWZ5IG15c3FsZHVtcCB2ZXJzaW9uIGlzIHVwIHRvIGRhdGUuIEZhbGxpbmcgYmFjayB0byBjb21wYXRpYmlsaXR5IG1vZGUuIEVycm9yOiBgJyAuICRleGVjX291dHB1dF9saW5lIC4gJ2AuJyApOwoJCQkJCXJldHVybiBmYWxzZTsKCQkJCX0KCQkJfQoJCX0KCQkKCQkvLyBJZiBteXNxbCB3ZW50IGF3YXkgd2hpbGUgd2Ugd2VyZSBidXN5IHdpdGggY29tbWFuZCBsaW5lIHRyeSB0byByZS1lc3RhYmxpc2guCgkJZ2xvYmFsICR3cGRiOwoJCWlmICggQG15c3FsX3BpbmcoICR3cGRiLT5kYmggKSAhPT0gdHJ1ZSApIHsgLy8gTm8gbG9uZ2VyIGNvbm5lY3RlZCB0byBkYXRhYmFzZS4KCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2Vycm9yJywgJ215c3FsYnVkZHk6IEVycm9yICM0Mzg0OTM3NC4gRGF0YWJhc2Ugd2VudCBhd2F5IGZyb20gUEhQIHdoaWxlIHJ1bm5pbmcgZnJvbSBjb21tYW5kIGxpbmUuIFRoZSBQSFAgPC0tPiBteXNxbCBjb25uZWN0aW9uIGxpa2VseSB0aW1lZCBvdXQgd2hpbGUgd2Ugd2VyZSBkb2luZyBvdGhlciB0aGluZ3MuJyApOwoJCQkKCQkJLy8gQ2xlYW4gdXAgY29ubmVjdGlvbi4KCQkJQG15c3FsX2Nsb3NlKCAkd3BkYi0+ZGJoICk7CgkJCSR3cGRiLT5yZWFkeSA9IGZhbHNlOwoJCQkKCQkJLy8gQXR0ZW1wdCB0byByZWNvbm5lY3QuCgkJCSR3cGRiLT5kYl9jb25uZWN0KCk7CgkJCQoJCQkvLyBDaGVjayBpZiByZWNvbm5lY3Qgd29ya2VkLgoJCQlpZiAoICggTlVMTCA9PSAkd3BkYi0+ZGJoICkgfHwgKCAhbXlzcWxfcGluZyggJHdwZGItPmRiaCApICkgKSB7IC8vIFJlY29ubmVjdCBmYWlsZWQgaWYgd2UgaGF2ZSBhIG51bGwgcmVzb3VyY2Ugb3IgcGluZyBmYWlscwoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2Vycm9yJywgX18oJ0RhdGFiYXNlIFNlcnZlciByZWNvbm5lY3Rpb24gZmFpbGVkLicsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCX0gZWxzZSB7CgkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsIF9fKCAnRGF0YWJhc2UgU2VydmVyIHJlY29ubmVjdGlvbiBzdWNjZXNzZnVsLicsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApICk7CgkJCQkkcmVzdWx0ID0gdHJ1ZTsKCQkJfQoJCX0KCQkKCQkKCQkvLyBDaGVjayB0aGUgcmVzdWx0IG9mIHRoZSAKCQlpZiAoICRleGVjX2V4aXRfY29kZSA9PSAnMCcgKSB7CgkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ215c3FsYnVkZHk6IENvbW1hbmQgYXBwZWFycyB0byBzdWNjZWVkZWQgYW5kIHJldHVybmVkIHByb3BlciByZXNwb25zZS4nICk7CgkJCWlmICggZmlsZV9leGlzdHMoICRvdXRwdXRfZmlsZSApICkgeyAvLyBTUUwgZmlsZSBmb3VuZC4gU1VDQ0VTUyEKCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdtZXNzYWdlJywgJ215c3FsYnVkZHk6IERhdGFiYXNlIGR1bXAgU1FMIGZpbGUgZXhpc3RzLicgKTsKCQkJCQoJCQkJLy8gRGlzcGxheSBmaW5hbCBTUUwgZmlsZSBzaXplLgoJCQkJJHNxbF9maWxlc2l6ZSA9IHBiX2JhY2t1cGJ1ZGR5OjokZm9ybWF0LT5maWxlX3NpemUoIGZpbGVzaXplKCAkb3V0cHV0X2ZpbGUgKSApOwoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnRmluYWwgU1FMIGRhdGFiYXNlIGR1bXAgZmlsZSBzaXplIG9mIGAnIC4gYmFzZW5hbWUoICRvdXRwdXRfZmlsZSApIC4gJ2A6ICcgLiAkc3FsX2ZpbGVzaXplIC4gJy4nICk7CgkJCQkKCQkJCXJldHVybiB0cnVlOwoJCQl9IGVsc2UgeyAvLyBTUUwgZmlsZSBNSVNTSU5HLiBGQUlMVVJFIQoJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2Vycm9yJywgJ215c3FsYnVkZHk6IFRob3VnaCBjb21tYW5kIHJlcG9ydGVkIHN1Y2Nlc3MgZGF0YWJhc2UgZHVtcCBTUUwgZmlsZSBpcyBtaXNzaW5nOiBgJyAuICRvdXRwdXRfZmlsZSAuICdgLicgKTsKCQkJCXJldHVybiBmYWxzZTsKCQkJfQoJCX0gZWxzZSB7CgkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ215c3FsYnVkZHk6IFdhcm5pbmcgIzkwMzAuIENvbW1hbmQgZGlkIG5vdCBleGl0IG5vcm1hbGx5LiBUaGlzIGlzIG5vcm1hbCBpcyB5b3VyIHNlcnZlciBkb2VzIG5vdCBzdXBwb3J0IGNvbW1hbmQgbGluZSBteXNxbCBmdW5jdGlvbmFsaXR5LiBGYWxsaW5nIGJhY2sgdG8gZGF0YWJhc2UgZHVtcCBjb21wYXRpYmlsaXR5IG1vZGVzLicgKTsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCQkKCQkKCQkvLyBTaG91bGQgbmV2ZXIgZ2V0IHRvIGhlcmUuCgkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2Vycm9yJywgJ215c3FsYnVkZHk6IFVuY2F1Z2h0IGV4Y2VwdGlvbiAjNDUzODkwLicgKTsKCQlyZXR1cm4gZmFsc2U7CgkJCgl9IC8vIEVuZCBfZHVtcF9jb21tYW5kbGluZSgpLgoJCgkKCQoJLyoJX3BocGR1bXAoKQoJICoJCgkgKglQSFAtYmFzZWQgZHVtcGluZyBvZiBTUUwgZGF0YS4gQ29tcGF0aWJpbGl0eSBtb2RlLiBXYXMgb25seSBtb2RlIHByZS0zLjAuCgkgKgkKCSAqCUBwYXJhbQkJc3RyaW5nCQkkb3V0cHV0X2RpcmVjdG9yeQkJRGlyZWN0b3J5IHRvIG91dHB1dCB0by4gTWF5IGFsc28gYmUgdXNlZCBhcyBhIHRlbXBvcmFyeSBmaWxlIGxvY2F0aW9uLiBUcmFpbGluZyBzbGFzaCByZXF1aXJlZC4gZHVtcCgpIGF1dG8tYWRkcyB0cmFpbGluZyBzbGFzaCBiZWZvcmUgcGFzc2luZy4KCSAqCUBwYXJhbQkJYXJyYXkJCSR0YWJsZXMJCQkJCUFycmF5IG9mIHRhYmxlcyB0byBkdW1wLgoJICoJUkVNT1ZFRDogQHBhcmFtCQlzdHJpbmcJCSRiYXNlX2R1bXBfbW9kZQkJCUJhc2UgZHVtcCBtb2RlLiBOT1QgVVNFRC4gQ29uc2lzdGVudCB3aXRoIG90aGVyIGR1bXAgbW9kZS4KCSAqCVJFTU9WRUQ6IEBwYXJhbQkJYXJyYXkJCSRhZGRpdGlvbmFsX2V4Y2x1ZGVzCUFkZGl0aW9uYWwgZXhjbHVkZXMuIE5PVCBVU0VELiBDb25zaXN0ZW50IHdpdGggb3RoZXIgZHVtcCBtb2RlLgoJICoJQHJldHVybgkJCgkgKi8KCXByaXZhdGUgZnVuY3Rpb24gX2R1bXBfcGhwKCAkb3V0cHV0X2RpcmVjdG9yeSwgJHRhYmxlcyApIHsgLy8sICRiYXNlX2R1bXBfbW9kZSwgJGFkZGl0aW9uYWxfZXhjbHVkZXMgKSB7CgkJCgkJJG91dHB1dF9maWxlID0gJG91dHB1dF9kaXJlY3RvcnkgLiAnZGJfMS5zcWwnOwoJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ215c3FsYnVkZHk6IFByZXBhcmluZyB0byBydW4gUEhQIG15c3FsZHVtcCBjb21wYXRpYmlsaXR5IG1vZGUuJyApOwoJCQoJCWlmICggZmFsc2UgPT09ICggJGZpbGVfaGFuZGxlID0gZm9wZW4oICRvdXRwdXRfZmlsZSwgJ2EnICkgKSApIHsKCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2Vycm9yJywgJ0Vycm9yICM5MDE4OiBEYXRhYmFzZSBmaWxlIGlzIG5vdCBjcmVhdGFibGUvd3JpdGFibGUuIENoZWNrIHlvdXIgcGVybWlzc2lvbnMgZm9yIGZpbGUgYCcgLiAkb3V0cHV0X2ZpbGUgLiAnYCBpbiBkaXJlY3RvcnkgYCcgLiAkb3V0cHV0X2RpcmVjdG9yeSAuICdgLicgKTsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCQkKCQkKCQlnbG9iYWwgJHdwZGI7CgkJaWYgKCAhaXNfb2JqZWN0KCAkd3BkYiApICkgewoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZXJyb3InLCAnV29yZFByZXNzIGRhdGFiYXNlIG9iamVjdCAkd3BkYiBkaWQgbm90IGV4aXN0LiBUaGlzIHNob3VsZCBub3QgaGFwcGVuLicgKTsKCQkJZXJyb3JfbG9nKCAnV29yZFByZXNzIGRhdGFiYXNlIG9iamVjdCAkd3BkYiBkaWQgbm90IGV4aXN0LiBUaGlzIHNob3VsZCBub3QgaGFwcGVuLiBCYWNrdXBCdWRkeSBFcnJvciAjODk0NTU4Nzk3My4nICk7CgkJCXJldHVybiBmYWxzZTsKCQl9CgkJCgkJLy8gQ29ubmVjdCBpZiBub3QgY29ubmVjdGVkIGZvciBpbXBvcnRidWRkeS4KCQlpZiAoICFteXNxbF9waW5nKCAkd3BkYi0+ZGJoICkgKSB7CgkJCW15c3FsX2Nvbm5lY3QoICR0aGlzLT5fZGF0YWJhc2VfaG9zdCwgJHRoaXMtPl9kYXRhYmFzZV91c2VyLCAkdGhpcy0+X2RhdGFiYXNlX3Bhc3MgKTsKCQkJbXlzcWxfc2VsZWN0X2RiKCAkdGhpcy0+X2RhdGFiYXNlX25hbWUgKTsKCQl9CgkJCgkJJF9jb3VudCA9IDA7CgkJJGluc2VydF9zcWwgPSAnJzsKCQkKCQlnbG9iYWwgJHdwZGI7IC8vIFVzZWQgbGF0ZXIgZm9yIGNoZWNraW5nIHRoYXQgd2UgYXJlIHN0aWxsIGNvbm5lY3RlZCB0byBEQi4KCQkKCQkvLyBJdGVyYXRlIHRocm91Z2ggYWxsIHRoZSB0YWJsZXMgdG8gYmFja3VwLgoJCS8vIFRPRE86IEZ1dHVyZSBhYmlsaXR5IHRvIGJyZWFrIHVwIERCIGV4cG9ydGluZyB0byBtdWx0aXBsZSBwYWdlIGxvYWRzIGlmIG5lZWRlZC4gUmVhbGx5IHN0aWxsIG5lZWQgdGhpcyBub3cgdGhhdCB3ZSBoYXZlIGNvbW1hbmQgbGluZSBkdW1wPwoJCWZvcmVhY2goICR0YWJsZXMgYXMgJHRhYmxlX2tleSA9PiAkdGFibGUgKSB7CgkJCSRjcmVhdGVfdGFibGUgPSBteXNxbF9xdWVyeSgiU0hPVyBDUkVBVEUgVEFCTEUgYHskdGFibGV9YCIpOwoJCQkKCQkJaWYgKCAkY3JlYXRlX3RhYmxlID09PSBmYWxzZSApIHsKCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdlcnJvcicsICdVbmFibGUgdG8gYWNjZXNzIGFuZCBkdW1wIGRhdGFiYXNlIHRhYmxlIGAnIC4gJHRhYmxlIC4gJ2AuIFRhYmxlIG1heSBub3QgZXhpc3QuIFNraXBwaW5nIGJhY2t1cCBvZiB0aGlzIHRhYmxlLicgKTsKCQkJCS8vcGJfYmFja3VwYnVkZHk6OiRjbGFzc2VzWydjb3JlJ10tPm1haWxfZXJyb3IoICdFcnJvciAjNDUzNzM4NDogVW5hYmxlIHRvIGFjY2VzcyBhbmQgZHVtcCBkYXRhYmFzZSB0YWJsZSBgJyAuICR0YWJsZSAuICdgLiBUYWJsZSBtYXkgbm90IGV4aXN0LiBTa2lwcGluZyBiYWNrdXAgb2YgdGhpcyB0YWJsZS4nICk7CgkJCQljb250aW51ZTsgLy8gU2tpcCB0aGlzIGl0ZXJhdGlvbiBhcyBhY2Nlc3NpbmcgdGhpcyB0YWJsZSBmYWlsZWQuCgkJCX0KCQkJCgkJCS8vIFRhYmxlIGNyZWF0aW9uIHRleHQuCgkJCSRjcmVhdGVfdGFibGVfYXJyYXkgPSBteXNxbF9mZXRjaF9hcnJheSggJGNyZWF0ZV90YWJsZSApOwoJCQlteXNxbF9mcmVlX3Jlc3VsdCggJGNyZWF0ZV90YWJsZSApOyAvLyBGcmVlIG1lbW9yeS4KCQkJJGluc2VydF9zcWwgLj0gc3RyX3JlcGxhY2UoICJcbiIsICcnLCAkY3JlYXRlX3RhYmxlX2FycmF5WzFdICkgLiAiO1xuIjsgLy8gUmVtb3ZlIGludGVybmFsIGxpbmVicmVha3M7IG9ubHkgcHV0IG9uZSBhdCBlbmQuCgkJCXVuc2V0KCAkY3JlYXRlX3RhYmxlX2FycmF5ICk7CgkJCQoJCQkvLyBEaXNhYmxlIGtleXMgZm9yIHRoaXMgdGFibGUuCgkJCSRpbnNlcnRfc3FsIC49ICIvKiE0MDAwMCBBTFRFUiBUQUJMRSBgeyR0YWJsZX1gIERJU0FCTEUgS0VZUyAqLztcbiI7CgkJCQoJCQkvLyBSb3cgY3JlYXRpb24gdGV4dCBmb3IgYWxsIHJvd3Mgd2l0aGluIHRoaXMgdGFibGUuCgkJCSR0YWJsZV9xdWVyeSA9IG15c3FsX3F1ZXJ5KCJTRUxFQ1QgKiBGUk9NIGAkdGFibGVgIikgb3IgcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2Vycm9yJywgJ0Vycm9yICM5MDAxOiBVbmFibGUgdG8gcmVhZCBkYXRhYmFzZSB0YWJsZSBgJyAuICR0YWJsZSAuICdgLiBZb3VyIGJhY2t1cCB3aWxsIG5vdCBpbmNsdWRlIGRhdGEgZnJvbSB0aGlzIHRhYmxlICh5b3UgbWF5IGlnbm9yZSB0aGlzIHdhcm5pbmcgaWYgeW91IGRvIG5vdCBuZWVkIHRoaXMgc3BlY2lmaWMgZGF0YSkuIFRoaXMgaXMgZHVlIHRvIHRoZSBmb2xsb3dpbmcgZXJyb3I6ICcgLiBteXNxbF9lcnJvcigpICk7CgkJCWlmICggJHRhYmxlX3F1ZXJ5ID09PSBmYWxzZSApIHsKCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdlcnJvcicsICdFUlJPUiAjODU0NDk3NDUuIFVuYWJsZSB0byByZXRyaWV2ZSBkYXRhIGZyb20gdGFibGUgYCcgLiAkdGFibGUgLiAnYC4gVGhpcyB0YWJsZSBtYXkgYmUgY29ycnVwdCAodHJ5IHJlcGFpcmluZyB0aGUgZGF0YWJhc2UpIG9yIHRvbyBsYXJnZSB0byBob2xkIGluIG1lbW9yeSAoaW5jcmVhc2UgbXlzcWwgYW5kL29yIFBIUCBtZW1vcnkpLiBDaGVjayB5b3VyIFBIUCBlcnJvciBsb2cgZm9yIGZ1cnRoZXIgZXJyb3JzIHdoaWNoIG1heSBwcm92aWRlIGZ1cnRoZXIgaW5mb3JtYXRpb24uIE5vdCBjb250aW51aW5nIGRhdGFiYXNlIGR1bXAgdG8gaW5zdXJlIGJhY2t1cCBpbnRlZ3JpdHkuJyApOwoJCQkJcmV0dXJuIGZhbHNlOwoJCQl9CgkJCQoJCQkkbnVtX2ZpZWxkcyA9IG15c3FsX251bV9maWVsZHMoJHRhYmxlX3F1ZXJ5KTsKCQkJd2hpbGUgKCAkZmV0Y2hfcm93ID0gbXlzcWxfZmV0Y2hfYXJyYXkoICR0YWJsZV9xdWVyeSApICkgewoJCQkJJGluc2VydF9zcWwgLj0gIklOU0VSVCBJTlRPIGAkdGFibGVgIFZBTFVFUygiOwoJCQkJZm9yICggJG49MTsgJG48PSRudW1fZmllbGRzOyAkbisrICkgewoJCQkJCSRtID0gJG4gLSAxOwoJCQkJCQkJCQkKCQkJCQlpZiAoICRmZXRjaF9yb3dbJG1dID09PSBOVUxMICkgewoJCQkJCQkkaW5zZXJ0X3NxbCAuPSAiTlVMTCwgIjsKCQkJCQl9IGVsc2UgewoJCQkJCQkkaW5zZXJ0X3NxbCAuPSAiJyIgLiBteXNxbF9yZWFsX2VzY2FwZV9zdHJpbmcoICRmZXRjaF9yb3dbJG1dICkgLiAiJywgIjsKCQkJCQl9CgkJCQl9CgkJCQkkaW5zZXJ0X3NxbCA9IHN1YnN0ciggJGluc2VydF9zcWwsIDAsIC0yICk7CgkJCQkkaW5zZXJ0X3NxbCAuPSAiKTtcbiI7CgkJCQkKCQkJCWZ3cml0ZSggJGZpbGVfaGFuZGxlLCAkaW5zZXJ0X3NxbCApOwoJCQkJJGluc2VydF9zcWwgPSAnJzsKCQkJCQoJCQkJLy8gSGVscCBrZWVwIEhUVFAgYWxpdmUuCgkJCQkkX2NvdW50Kys7CgkJCQlpZiAoJF9jb3VudCA+PSA0MDApIHsKCQkJCQllY2hvICcgJzsKCQkJCQlwYl9iYWNrdXBidWRkeTo6Zmx1c2goKTs7CgkJCQkJJF9jb3VudCA9IDA7CgkJCQl9CgkJCX0gLy8gRW5kIGZvcmVhY2ggJHRhYmxlcy4KCQkJCgkJCS8vIFJlLWVuYWJsZSBrZXlzIGZvciB0aGlzIHRhYmxlLgoJCQkkaW5zZXJ0X3NxbCAuPSAiLyohNDAwMDAgQUxURVIgVEFCTEUgYHskdGFibGV9YCBFTkFCTEUgS0VZUyAqLztcbiI7CgkJCQoJCQkvLyB0ZXN0aW5nOiBteXNxbF9jbG9zZSggJHdwZGItPmRiaCApOwoJCQkvLyBWZXJpZnkgZGF0YWJhc2UgaXMgc3RpbGwgY29ubmVjdGVkIGFuZCB3b3JraW5nIHByb3Blcmx5LiBTb21ldGltZXMgbXlzcWwgcnVucyBvdXQgb2YgbWVtb3J5IGFuZCBkaWVzIGluIHRoZSBhYm92ZSBmb3JlYWNoLgoJCQkvLyBObyBwb2ludCBpbiByZWNvbm5lY3RpbmcgYXMgd2UgY2FuIE5PVCB0cnVzdCB0aGF0IG91ciBkdW1wIHdhcyBzdWNjZXNmdWwgYW55bW9yZSAoaXQgbW9zdCBsaWtlbHkgd2FzIG5vdCkuCgkJCWlmICggQG15c3FsX3BpbmcoICR3cGRiLT5kYmggKSApIHsgLy8gU3RpbGwgY29ubmVjdGVkIHRvIGRhdGFiYXNlLgoJCQkJbXlzcWxfZnJlZV9yZXN1bHQoICR0YWJsZV9xdWVyeSApOyAvLyBGcmVlIG1lbW9yeS4KCQkJfSBlbHNlIHsgLy8gRGF0YWJhc2Ugbm90IGNvbm5lY3RlZC4KCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdlcnJvcicsIF9fKCAnRVJST1IgIzkwMjY6IFRoZSBteVNRTCBzZXJ2ZXIgd2VudCBhd2F5IHVuZXhwZWN0ZWRseSBkdXJpbmcgZGF0YWJhc2UgZHVtcC4gVGhpcyBpcyBhbG1vc3QgYWx3YXlzIGNhdXNlZCBieSBteVNRTCBydW5uaW5nIG91dCBvZiBtZW1vcnkuIFRoZSBiYWNrdXAgaW50ZWdyaXR5IGNhbiBubyBsb25nZXIgYmUgZ3VhcmFudGVlZCBzbyB0aGUgYmFja3VwIGhhcyBiZWVuIGhhbHRlZC4nICkgLiAnICcgLiBfXyggJ0xhc3QgdGFibGUgZHVtcGVkIGJlZm9yZSBkYXRhYmFzZSBzZXJ2ZXIgd2VudCBhd2F5OiAnICkgLiAnYCcgLiAkdGFibGUgLiAnYC4nICk7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCQkJCgkJCS8vIEhlbHAga2VlcCBIVFRQIGFsaXZlLgoJCQllY2hvICcgJzsKCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnRHVtcGVkIGRhdGFiYXNlIHRhYmxlIGAnIC4gJHRhYmxlIC4gJ2AuJyApOwoJCQlwYl9iYWNrdXBidWRkeTo6Zmx1c2goKTs7CgkJCQoJCQkvL3Vuc2V0KCAkdGFibGVzWyR0YWJsZV9rZXldICk7CgkJfQoJCQoJCWZjbG9zZSggJGZpbGVfaGFuZGxlICk7CgkJdW5zZXQoICRmaWxlX2hhbmRsZSApOwoJCQoJCQoJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgX18oJ0ZpbmlzaGVkIFBIUCBiYXNlZCBTUUwgZHVtcCBtZXRob2QuJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKTsKCQkKCQlyZXR1cm4gdHJ1ZTsKCQkKCX0gLy8gRW5kIF9waHBkdW1wKCkuCgkKCQoJCgkvKglnZXRfbWV0aG9kcygpCgkgKgkKCSAqCUdldCBhbiBhcnJheSBvZiBtZXRob2RzLiBOb3RlOiBJZiBmb3JjZSBvdmVycmlkaW5nIG1ldGhvZHMgdGhlbiBkZXRlY3RlZCBtZXRob2RzIHdpbGwgbm90IGJlIGFibGUgdG8gZGlzcGxheS4KCSAqCQoJICoJQHJldHVybgkJYXJyYXkJCQkJQXJyYXkgb2YgbWV0aG9kcy4KCSAqLwoJcHVibGljIGZ1bmN0aW9uIGdldF9tZXRob2RzKCkgewoJCXJldHVybiAkdGhpcy0+X21ldGhvZHM7Cgl9CgkKCQoJCgkvKglpbXBvcnQoKQoJICoJCgkgKglJbXBvcnQgU1FMIGNvbnRlbnRzIG9mIGEgLnNxbCBmaWxlIGludG8gdGhlIGRhdGFiYXNlLiBPbmx5IG1vZGlmaWNhdGlvbiBpcyB0byB0YWJsZSBwcmVmaXggaWYgbmVlZGVkLiBQcmVmaXhlcyAobmV3IGFuZCBvbGQpIHByb3ZpZGVkIGluIGNvbnN0cnVjdG9yLgoJICoJQXV0b21hdGljYWxseSBoYW5kbGVzIGZhbGxiYWNrIGJhc2VkIG9uIGJlc3QgYXZhaWxhYmxlIG1ldGhvZHMuCgkgKgkKCSAqCUBwYXJhbQkJc3RyaW5nCQkkc3FsX2ZpbGUJCQkJRnVsbCBhYnNvbHV0ZSBwYXRoIHRvIC5zcWwgZmlsZSB0byBpbXBvcnQgZnJvbS4KIAkgKglAcGFyYW0JCXN0cmluZwkJJG9sZF9wcmVmaXgJCQkJT2xkIGRhdGFiYXNlIHByZWZpeC4gTmV3IHByZWZpeCBwcm92aWRlZCBpbiBjb25zdHJ1Y3Rvci4KIAkgKglAcGFyYW0JCWludAkJCSRxdWVyeV9zdGFydAkJCVF1ZXJ5IG51bWJlciAoYWthIGxpbmUgbnVtYmVyKSB0byByZXN1bWUgaW1wb3J0IGF0LgogCSAqCUBwYXJhbQkJYm9vbGVhbgkJJGlnbm9yZV9leGlzdGluZwkJV2hldGhlciBvciBub3QgdG8gYWxsb3cgaW1wb3J0IGlmIHRhYmxlcyBleGlzdCBhbHJlYWR5LiBEZWZhdWx0OiBmYWxzZS4KCSAqCUByZXR1cm4JCW1peGVkCQkJCQkJCQl0cnVlIG9uIHN1Y2Nlc3MgKGJvb2xlYW4pCgkgKgkJCQkJCQkJCQkJCQlmYWxzZSBvbiBmYWlsdXJlIChib29sZWFuKQoJICoJCQkJCQkJCQkJCQkJaW50ZWdlciAoaW50KSBvbiBuZWVkaW5nIGEgcmVzdW1zZSAoaW50ZWdlciBpcyByZXN1bWUgbnVtYmVyIGZvciBuZXh0IHBhZ2UgbG9hZHMgJHF1ZXJ5X3N0YXJ0KQoJICovCglwdWJsaWMgZnVuY3Rpb24gaW1wb3J0KCAkc3FsX2ZpbGUsICRvbGRfcHJlZml4LCAkcXVlcnlfc3RhcnQgPSAwLCAkaWdub3JlX2V4aXN0aW5nID0gZmFsc2UgKSB7CgkJJHJldHVybiA9IGZhbHNlOwoJCQoJCS8vIFJlcXVpcmUgYSBuZXcgdGFibGUgcHJlZml4LgoJCWlmICggJHRoaXMtPl9kYXRhYmFzZV9wcmVmaXggPT0gJycgKSB7CgkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdlcnJvcicsICdFUlJPUiA5MDA4OiBBIGRhdGFiYXNlIHByZWZpeCBpcyByZXF1aXJlZCBmb3IgaW1wb3J0aW5nLicgKTsKCQl9CgkJCgkJaWYgKCAkcXVlcnlfc3RhcnQgPiAwICkgewoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnbWVzc2FnZScsICdDb250aW51aW5nIHRvIHJlc3RvcmUgZGF0YWJhc2UgZHVtcCBzdGFydGluZyBhdCBxdWVyeSAnIC4gJHF1ZXJ5X3N0YXJ0IC4gJy4nICk7CgkJfSBlbHNlIHsKCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ21lc3NhZ2UnLCAnUmVzdG9yaW5nIGRhdGFiYXNlIGR1bXAuIFRoaXMgbWF5IHRha2UgYSBtb21lbnQuLi4nICk7CgkJfQoJCQoJCS8vIENoZWNrIHdoZXRoZXIgb3Igbm90IHRhYmxlcyBhbHJlYWR5IGV4aXN0IHRoYXQgbWlnaHQgY29sbGlkZS4KCQlpZiAoICRpZ25vcmVfZXhpc3RpbmcgPT09IGZhbHNlICkgewoJCQlpZiAoICRxdWVyeV9zdGFydCA9PSAwICkgeyAvLyBDaGVjayBudW1iZXIgb2YgdGFibGVzIGFscmVhZHkgZXhpc3Rpbmcgd2l0aCB0aGlzIHByZWZpeC4gU2tpcHMgdGhpcyBjaGVjayBvbiBzdWJzdGVwcyBvZiBEQiBpbXBvcnQuCgkJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoICJTSE9XIFRBQkxFUyBMSUtFICciIC4gbXlzcWxfcmVhbF9lc2NhcGVfc3RyaW5nKCBzdHJfcmVwbGFjZSggJ18nLCAnXF8nLCAkdGhpcy0+X2RhdGFiYXNlX3ByZWZpeCApICkgLiAiJSciICk7CgkJCQlpZiAoIG15c3FsX251bV9yb3dzKCAkcmVzdWx0ICkgPiAwICkgewoJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdlcnJvcicsICdFcnJvciAjOTAxNDogRGF0YWJhc2UgaW1wb3J0IGhhbHRlZCB0byBwcmV2ZW50IG92ZXJ3cml0aW5nIGV4aXN0aW5nIFdvcmRQcmVzcyBkYXRhLicsICdUaGUgZGF0YWJhc2UgYWxyZWFkeSBjb250YWlucyBhIFdvcmRQcmVzcyBpbnN0YWxsYXRpb24gd2l0aCB0aGlzIHByZWZpeCAoJyAuIG15c3FsX251bV9yb3dzKCAkcmVzdWx0ICkgLiAnIHRhYmxlcykuIFJlc3RvcmUgaGFzIGJlZW4gc3RvcHBlZCB0byBwcmV2ZW50IG92ZXJ3cml0aW5nIGV4aXN0aW5nIGRhdGEuICoqKiBQbGVhc2UgZ28gYmFjayBhbmQgZW50ZXIgYSBuZXcgZGF0YWJhc2UgbmFtZSBhbmQvb3IgcHJlZml4IE9SIHNlbGVjdCB0aGUgb3B0aW9uIHRvIHdpcGUgdGhlIGRhdGFiYXNlIHByaW9yIHRvIGltcG9ydCBmcm9tIHRoZSBhZHZhbmNlZCBzZXR0aW5ncyBvbiB0aGUgZmlyc3QgaW1wb3J0IHN0ZXAuICoqKicgKTsKCQkJCQlyZXR1cm4gZmFsc2U7CgkJCQl9CgkJCQl1bnNldCggJHJlc3VsdCApOwoJCQl9CgkJfQoJCQoJCQoJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdtZXNzYWdlJywgJ1N0YXJ0aW5nIGRhdGFiYXNlIGltcG9ydCBwcm9jZWR1cmUuJyApOwoJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ215c3FsYnVkZHk6IE1heGltdW0gZXhlY3V0aW9uIHRpbWUgZm9yIHRoaXMgcnVuOiAnIC4gcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydtYXhfZXhlY3V0aW9uX3RpbWUnXSAuICcgc2Vjb25kcy4nICk7CgkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnbXlzcWxidWRkeTogT2xkIHByZWZpeDogYCcgLiAkb2xkX3ByZWZpeCAuICdgOyBOZXcgcHJlZml4OiBgJyAuICR0aGlzLT5fZGF0YWJhc2VfcHJlZml4IC4gJ2AuJyApOwoJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgIm15c3FsYnVkZHk6IEltcG9ydGluZyBTUUwgZmlsZTogYHskc3FsX2ZpbGV9YC4gT2xkIHByZWZpeDogYHskb2xkX3ByZWZpeH1gLiBRdWVyeSBzdGFydDogYHskcXVlcnlfc3RhcnR9YC4iICk7CgkJZmx1c2goKTsKCQkKCQkvLyBBdHRlbXB0IGVhY2ggbWV0aG9kIGluIG9yZGVyLgoJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ1ByZXBhcmluZyB0byBpbXBvcnQgdXNpbmcgYXZhaWxhYmxlIG1ldGhvZChzKSBieSBwcmlvcml0eS4gQmFzaW5nIGltcG9ydCBtZXRob2RzIG9mZiBkdW1wIG1ldGhvZHM6IGAnIC4gaW1wbG9kZSggJywnLCAkdGhpcy0+X21ldGhvZHMgKSAuICdgJyApOwoJCWZvcmVhY2goICR0aGlzLT5fbWV0aG9kcyBhcyAkbWV0aG9kICkgewoJCQlpZiAoIG1ldGhvZF9leGlzdHMoICR0aGlzLCAiX2ltcG9ydF97JG1ldGhvZH0iICkgKSB7CgkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGJ1ZGR5OiBBdHRlbXB0aW5nIGltcG9ydCBtZXRob2QgYCcgLiAkbWV0aG9kIC4gJ2AuJyApOwoJCQkJJHJlc3VsdCA9IGNhbGxfdXNlcl9mdW5jKCBhcnJheSggJHRoaXMsICJfaW1wb3J0X3skbWV0aG9kfSIgKSwgJHNxbF9maWxlLCAkb2xkX3ByZWZpeCwgJHF1ZXJ5X3N0YXJ0LCAkaWdub3JlX2V4aXN0aW5nICk7CgkJCQkKCQkJCWlmICggJHJlc3VsdCA9PT0gdHJ1ZSApIHsgLy8gRHVtcCBjb21wbGV0ZWQgc3VjY2VzZnVsbHkgd2l0aCB0aGlzIG1ldGhvZC4KCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGJ1ZGR5OiBJbXBvcnQgbWV0aG9kIGAnIC4gJG1ldGhvZCAuICdgIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHkuJyApOwoJCQkJCSRyZXR1cm4gPSB0cnVlOwoJCQkJCWJyZWFrOwoJCQkJfSBlbHNlaWYgKCAkcmVzdWx0ID09PSBmYWxzZSApIHsgLy8gRHVtcCBmYWlsZWQgdGhpcyBtZXRob2QuIFdpbGwgdHJ5IGNvbXBhdGliaWxpdHkgZmFsbGJhY2sgdG8gbmV4dCBtb2RlIGlmIGFibGUuCgkJCQkJLy8gRG8gbm90aGluZy4gV2lsbCB0cnkgbmV4dCBtb2RlIG5leHQgbG9vcC4KCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGJ1ZGR5OiBJbXBvcnQgbWV0aG9kIGAnIC4gJG1ldGhvZCAuICdgIGZhaWxlZC4gVHJ5aW5nIGFub3RoZXIgY29tcGF0aWJpbGl0eSBtb2RlIG5leHQgaWYgYWJsZS4nICk7CgkJCQl9IGVsc2UgeyAvLyBTb21ldGhpbmcgZWxzZSByZXR1cm5lZDsgdXNlZCBmb3IgcmVzdW1pbmcgKGludGVnZXIpIG9yIGEgbWVzc2FnZSAoc3RyaW5nKS4KCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZGV0YWlscycsICdteXNxbGJ1ZGR5OiBOb24tYm9vbGVhbiByZXNwb25zZSAodXN1YWxseSBtZWFucyByZXN1bWUgaXMgbmVlZGVkKTogYCcgLiAkcmVzdWx0IC4gJ2AnICk7CgkJCQkJcmV0dXJuICRyZXN1bHQ7IC8vIERvbnQgZmFsbGJhY2sgaWYgdGhpcyBoYXBwZW5zLiBVc3VhbGx5IG1lYW5zIHJlc3VtZSBpcyBuZWVkZWQgdG8gZmluaXNoLgoJCQkJfQoJCQl9CgkJfQoJCQkJCgkJaWYgKCAkcmV0dXJuID09PSB0cnVlICkgeyAvLyBTdWNjZXNzLgoJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnbWVzc2FnZScsICdEYXRhYmFzZSBpbXBvcnQgcHJvY2VkdXJlIHN1Y2NlZWRlZC4nICk7CgkJCXJldHVybiB0cnVlOwoJCX0gZWxzZSB7IC8vIE92ZXJhbGwgZmFpbHVyZS4KCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2Vycm9yJywgJ0RhdGFiYXNlIGltcG9ydCBwcm9jZWR1cmUgZGlkIG5vdCBjb21wbGV0ZSBvciBmYWlsZWQuJyApOwoJCQlyZXR1cm4gZmFsc2U7CgkJfQoJCQoJfSAvLyBFbmQgaW1wb3J0KCkuCgkKCQoJCglwdWJsaWMgZnVuY3Rpb24gX2ltcG9ydF9jb21tYW5kbGluZSggJHNxbF9maWxlLCAkb2xkX3ByZWZpeCwgJHF1ZXJ5X3N0YXJ0ID0gMCwgJGlnbm9yZV9leGlzdGluZyA9IGZhbHNlICkgewoJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ215c3FsYnVkZHk6IFByZXBhcmluZyB0byBydW4gY29tbWFuZCBsaW5lIG15c3FsIGltcG9ydCB2aWEgZXhlYygpLicgKTsKCQkKCQkKCQkvLyBJZiBwcmVmaXggaGFzIGNoYW5nZWQgdGhlbiBuZWVkIHRvIHVwZGF0ZSB0aGUgZmlsZS4KCQlpZiAoICRvbGRfcHJlZml4ICE9ICR0aGlzLT5fZGF0YWJhc2VfcHJlZml4ICkgewoJCQlpZiAoICFpc3NldCggcGJfYmFja3VwYnVkZHk6OiRjbGFzc2VzWyd0ZXh0cmVwbGFjZWJ1ZGR5J10gKSApIHsKCQkJCXJlcXVpcmVfb25jZSggcGJfYmFja3VwYnVkZHk6OnBsdWdpbl9wYXRoKCkgLiAnL2xpYi90ZXh0cmVwbGFjZWJ1ZGR5L3RleHRyZXBsYWNlYnVkZHkucGhwJyApOwoJCQkJcGJfYmFja3VwYnVkZHk6OiRjbGFzc2VzWyd0ZXh0cmVwbGFjZWJ1ZGR5J10gPSBuZXcgcGJfYmFja3VwYnVkZHlfdGV4dHJlcGxhY2VidWRkeSgpOwoJCQl9OwoJCQlwYl9iYWNrdXBidWRkeTo6JGNsYXNzZXNbJ3RleHRyZXBsYWNlYnVkZHknXS0+c2V0X21ldGhvZHMoIGFycmF5KCAnY29tbWFuZGxpbmUnICkgKTsgLy8gZG9udCBmYWxsYmFjayBpbnRvIHRleHQgdmVyc2lvbiBoZXJlLgoJCQkKCQkJJHJlZ2V4X2NvbmRpdGlvbiA9ICIoSU5TRVJUIElOVE98Q1JFQVRFIFRBQkxFfFJFRkVSRU5DRVN8Q09OU1RSQUlOVHxBTFRFUiBUQUJMRSkgKGA/KXskb2xkX3ByZWZpeH0iOwoJCQlwYl9iYWNrdXBidWRkeTo6JGNsYXNzZXNbJ3RleHRyZXBsYWNlYnVkZHknXS0+c3RyaW5nX3JlcGxhY2UoICRzcWxfZmlsZSwgJG9sZF9wcmVmaXgsICR0aGlzLT5fZGF0YWJhc2VfcHJlZml4LCAkcmVnZXhfY29uZGl0aW9uICk7CgkJCQoJCQkkc3FsX2ZpbGUgPSAkc3FsX2ZpbGUgLiAnLnRtcCc7IC8vIE5ldyBTUUwgZmlsZSBjcmVhdGVkIGJ5IHRleHRyZXBsYWNlYnVkZHkuCgkJfQoJCQoJCQoJCS8qKioqKioqKioqIEJlZ2luIHByZXBhcmluZyBjb21tYW5kICoqKioqKioqKiovCgkJLy8gSGFuZGxlIFdpbmRvd3Mgd2FudGluZyAuZXhlLiBOb3RlOiBleGVjdXRhYmxlIGRpcmVjdG9yeSBwYXRoIGlzIHByZXBlbmRlZCBvbiBleGVjKCkgbGluZSBvZiBjb2RlLgoJCWlmICggc3RyaXN0ciggUEhQX09TLCAnV0lOJyApICYmICFzdHJpc3RyKCBQSFBfT1MsICdEQVJXSU4nICkgKSB7IC8vIFJ1bm5pbmcgV2luZG93cy4gKG5vdCBkYXJ3aW4pCgkJCSRjb21tYW5kID0gJ21zcWwuZXhlJzsKCQl9IGVsc2UgewoJCQkkY29tbWFuZCA9ICdteXNxbCc7CgkJfQoJCQoJCS8vIEhhbmRsZSBwb3NzaWJsZSBzb2NrZXRzLgoJCWlmICggJHRoaXMtPl9kYXRhYmFzZV9zb2NrZXQgIT0gJycgKSB7CgkJCSRjb21tYW5kIC49ICIgLS1zb2NrZXQ9eyR0aGlzLT5fZGF0YWJhc2Vfc29ja2V0fSI7CgkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdkZXRhaWxzJywgJ215c3FsYnVkZHk6IFVzaW5nIHNvY2tldHMgaW4gY29tbWFuZC4nICk7CgkJfQoJCQoJCS8vJGNvbW1hbmQgLj0gIiAtLWhvc3Q9eyR0aGlzLT5fZGF0YWJhc2VfaG9zdH0gLS11c2VyPXskdGhpcy0+X2RhdGFiYXNlX3VzZXJ9IC0tcGFzc3dvcmQ9eyR0aGlzLT5fZGF0YWJhc2VfcGFzc30gLS1kZWZhdWx0X2NoYXJhY3Rlcl9zZXQgdXRmOCB7JHRoaXMtPl9kYXRhYmFzZV9uYW1lfSA8IHskc3FsX2ZpbGV9IjsKCQkkY29tbWFuZCAuPSAiIC0taG9zdD0iIC4gZXNjYXBlc2hlbGxhcmcoJHRoaXMtPl9kYXRhYmFzZV9ob3N0KSAuICIgLS11c2VyPSIgLiBlc2NhcGVzaGVsbGFyZygkdGhpcy0+X2RhdGFiYXNlX3VzZXIpIC4gIiAtLXBhc3N3b3JkPSIgLiBlc2NhcGVzaGVsbGFyZygkdGhpcy0+X2RhdGFiYXNlX3Bhc3MpIC4gIiAtLWRlZmF1bHRfY2hhcmFjdGVyX3NldCB1dGY4ICIgLiBlc2NhcGVzaGVsbGFyZygkdGhpcy0+X2RhdGFiYXNlX25hbWUpIC4gIiAyPiYxIDwgeyRzcWxfZmlsZX0iOyAvLyAyPiYxIHJlZGlyZWN0IFNUREVSUiB0byBTVERPVVQuCgkJLyoqKioqKioqKiogRW5kIHByZXBhcmluZyBjb21tYW5kICoqKioqKioqKiovCgkJCgkJLy8gUnVuIGNvbW1hbmQuCgkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnbXlzcWxidWRkeTogUnVubmluZyBpbXBvcnQgdmlhIGNvbW1hbmQgbGluZSBuZXh0LicgKTsKCQlsaXN0KCAkZXhlY19vdXRwdXQsICRleGVjX2V4aXRfY29kZSApID0gJHRoaXMtPl9jb21tYW5kYnVkZHktPmV4ZWN1dGUoICR0aGlzLT5fbXlzcWxfZGlyZWN0b3J5IC4gJGNvbW1hbmQgKTsKCQkKCQkKCQkvLyBUT0RPOiBSZW1vdmVkIG15c3FsIHBpbmdpbmcgaGVyZS4gRG8gd2UgbmVlZCAob3IgZXZlbiB3YW50KSB0aGF0IGhlcmU/CgkJCgkJCgkJLy8gQ2hlY2sgdGhlIHJlc3VsdCBvZiB0aGUgZXhlY3V0aW9uLgoJCWlmICggJGV4ZWNfZXhpdF9jb2RlID09ICcwJyApIHsKCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2RldGFpbHMnLCAnbXlzcWxidWRkeTogQ29tbWFuZCBhcHBlYXJzIHRvIHN1Y2NlZWRlZCBhbmQgcmV0dXJuZWQgcHJvcGVyIHJlc3BvbnNlLicgKTsKCQkJcmV0dXJuIHRydWU7CgkJfSBlbHNlIHsKCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2Vycm9yJywgJ215c3FsYnVkZHk6IENvbW1hbmQgZGlkIG5vdCBleGl0IG5vcm1hbGx5LiBGYWxsaW5nIGJhY2sgdG8gZGF0YWJhc2UgZHVtcCBjb21wYXRpYmlsaXR5IG1vZGVzLicgKTsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCQkKCQkKCQkvLyBTaG91bGQgbmV2ZXIgZ2V0IHRvIGhlcmUuCgkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2Vycm9yJywgJ215c3FsYnVkZHk6IFVuY2F1Z2h0IGV4Y2VwdGlvbiAjNDMzMDUzODkwLicgKTsKCQlyZXR1cm4gZmFsc2U7Cgl9IC8vIEVuZCBfaW1wb3J0X2NvbW1hbmRsaW5lKCkuCgkKCQoJCglmdW5jdGlvbiBzdHJpbmdfYmVnaW5zX3dpdGgoICRzdHJpbmcsICRzZWFyY2ggKSB7CgkJcmV0dXJuICggc3RybmNtcCggJHN0cmluZywgJHNlYXJjaCwgc3RybGVuKCRzZWFyY2gpICkgPT0gMCApOwoJfQoJCgkKCQoJLyoJX2ltcG9ydF9waHAoKQoJICoJCgkgKglJbXBvcnQgZnJvbSAuU1FMIGZpbGUgaW50byBkYXRhYmFzZSB2aWEgUEhQIGJ5IHJlYWRpbmcgaW4gZmlsZSBsaW5lIGJ5IGxpbmUuCgkgKglVc2luZyBjb2RlYmFzZSBmcm9tIEJhY2t1cEJ1ZGR5IC8gaW1wb3J0YnVkZHkgMi54LgoJICoJQHNlZSBpbXBvcnQoKS4KCSAqCUBzaW5jZSAyLnguCgkgKgkKCSAqCUBwYXJhbQkJU0VFIGltcG9ydCgpIFBBUkFNRVRFUlMhIQoJICoJQHJldHVybgkJbWl4ZWQJCQlUcnVlIG9uIHN1Y2Nlc3MgKGFuZCBjb21wbGV0aW9uKSwgaW50ZWdlciBvbiBpbmNvbXBsZXRlIChyZXN1bWUgbmVlZGVkIHZpYSAkcXVlcnlfc3RhcnQpLCBmYWxzZSBvbiBmYWlsdXJlLgoJICovCglwdWJsaWMgZnVuY3Rpb24gX2ltcG9ydF9waHAoICRzcWxfZmlsZSwgJG9sZF9wcmVmaXgsICRxdWVyeV9zdGFydCA9IDAsICRpZ25vcmVfZXhpc3RpbmcgPSBmYWxzZSApIHsKCQkKCQkkdGhpcy0+dGltZV9zdGFydCA9IHRpbWUoKTsKCQkKCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnbWVzc2FnZScsICdTdGFydGluZyBpbXBvcnQgb2YgU1FMIGRhdGEuLi4gVGhpcyBtYXkgdGFrZSBhIG1vbWVudC4uLicgKTsKCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzICgnZGV0YWlscycsICdMb2FkaW5nIFNRTCBmcm9tIGZpbGUgYCcgLiAkc3FsX2ZpbGUgLiAnYC4nICk7CgkJJGZpbGVfc3RyZWFtID0gQGZvcGVuKCAkc3FsX2ZpbGUsICdyJyApOwoJCQoJCWlmICggZmFsc2UgPT09ICRmaWxlX3N0cmVhbSApIHsKCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ2Vycm9yJywgJ0Vycm9yICM5MDA5OiBVbmFibGUgdG8gZmluZCBhbnkgZGF0YWJhc2UgYmFja3VwIGRhdGEgaW4gdGhlIHNlbGVjdGVkIGJhY2t1cCBvciBjb3VsZCBub3Qgb3BlbiBmaWxlIChwb3NzaWJseSBkdWUgdG8gcGVybWlzc2lvbnMpLiBUcmllZCBvcGVuaW5nIGZpbGUgYCcgLiAkc3FsX2ZpbGUgLiAnYC4gRXJyb3IgIzkwMDkuJyApOwoJCQlyZXR1cm4gZmFsc2U7CgkJfQoJCQoJCS8vIEl0ZXJhdGUgdGhyb3VnaCBlYWNoIGZ1bGwgcm93IGFjdGlvbiBhbmQgaW1wb3J0IGl0IG9uZSBhdCBhIHRpbWUuCgkJCQoJCSRxdWVyeV9jb3VudCA9IDA7CgkJJGZpbGVfZGF0YSA9ICcnOwoJCS8qICRpbl9jcmVhdGVfdGFibGVfYmxvY2sgPSBmYWxzZTsgKi8KCQkKCQl3aGlsZSAoICEgZmVvZiggJGZpbGVfc3RyZWFtICkgKSB7CgkJCgkJCXdoaWxlICggZmFsc2UgPT09IHN0cnBvcyggJGZpbGVfZGF0YSwgIjtcbiIgKSApIHsKCQkJCSRmaWxlX2RhdGEgLj0gZnJlYWQoICRmaWxlX3N0cmVhbSwgNDA5NiApOwoJCQl9CgkJCQoJCQkkcXVlcmllcyA9IGV4cGxvZGUoICI7XG4iLCAkZmlsZV9kYXRhICk7CgkJCQoJCQlpZiAoIHByZWdfbWF0Y2goICIvO1xuJC8iLCAkZmlsZV9kYXRhICkgKSB7CgkJCQkkZmlsZV9kYXRhID0gJyc7CgkJCX0gZWxzZSB7CgkJCQkkZmlsZV9kYXRhID0gYXJyYXlfcG9wKCAkcXVlcmllcyApOwoJCQl9CgkJCQoJCQkvLyBUT0RPOiBERUJVR0dJTkc6CgkJCS8vcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydtYXhfZXhlY3V0aW9uX3RpbWUnXSA9IDAuNDE7CgkJCQoJCQkvLyBMb29wcyB0aHJvdWdoIGVhY2ggZnVsbCBxdWVyeS4KCQkJZm9yZWFjaCAoIChhcnJheSkgJHF1ZXJpZXMgYXMgJHF1ZXJ5ICkgewoJCQkJaWYgKCAkcXVlcnlfY291bnQgPCAoICRxdWVyeV9zdGFydCAtIDEgKSApIHsgLy8gSGFuZGxlIHNraXBwaW5nIGFueSBxdWVyaWVzIHVwIHRvIHRoZSBwb2ludCB3ZSBhcmUgYXQuCgkJCQkJJHF1ZXJ5X2NvdW50Kys7CgkJCQkJY29udGludWU7IC8vIENvbnRpbnVlIHRvIG5leHQgZm9yZWFjaCBpdGVyYXRpb24uCgkJCQl9IGVsc2UgewoJCQkJCSRxdWVyeV9jb3VudCsrOwoJCQkJfQoJCQkJCgkJCQkkcXVlcnkgPSB0cmltKCAkcXVlcnkgKTsKCQkJCQoJCQkJaWYgKCBlbXB0eSggJHF1ZXJ5ICkgfHwgKCAkdGhpcy0+c3RyaW5nX2JlZ2luc193aXRoKCAkcXVlcnksICcvKiE0MDEwMycgKSApICkgeyAvLyBJZiBibGFuayBsaW5lIG9yIHN0YXJ0cyB3aXRoIC8qITQwMTAzIChteXNxbGR1bXAgZmlsZSBoYXMgdGhpcyBqdW5rIGluIGl0KS4KCQkJCQljb250aW51ZTsKCQkJCX0KCQkJCQoJCQkJLyoKCQkJCWlmICggJGluX2NyZWF0ZV90YWJsZV9ibG9jayA9PT0gdHJ1ZSApIHsKCQkJCX0gZWxzZSB7IC8vIFdhdGNoIGZvciBiZWdpbm5pbmcgb2YgQ1JFQVRFIFRBQkxFIGJsb2NrIGlmIG5vdCBpbiBvbmUuCgkJCQkJLy8gSGFuZGxlIGJyb2tlbiB1cCBDUkVBVEUgVEFCTEUgYmxvY2tzIGNhdXNlZCBieSBteXNxbGR1bXAuCgkJCQkJaWYgKCAkdGhpcy0+c3RyaW5nX2JlZ2luc193aXRoKCAkcXVlcnksICdDUkVBVEUgVEFCTEUnICkgKSB7CgkJCQkJCSRpbl9jcmVhdGVfdGFibGVfYmxvY2sgPSB0cnVlOwoJCQkJCX0KCQkJCX0KCQkJCSovCgkJCQkKCQkJCSRyZXN1bHQgPSAkdGhpcy0+X2ltcG9ydF9zcWxfZHVtcF9saW5lKCAkcXVlcnksICRvbGRfcHJlZml4LCAkaWdub3JlX2V4aXN0aW5nICk7CgkJCQkKCQkJCWlmICggZmFsc2UgPT09ICRyZXN1bHQgKSB7IC8vIFNraXBwZWQgcXVlcnkKCQkJCQljb250aW51ZTsKCQkJCX0KCQkJCQoJCQkJaWYgKCAwID09PSAoICRxdWVyeV9jb3VudCAlIDIwMDAgKSApIHsgLy8gRGlzcGxheSBXb3JraW5nIGV2ZXJ5IDE1MDAgcXVlcmllcyBpbXBvcnRlZC4KCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnbWVzc2FnZScsICdXb3JraW5nLi4uIEltcG9ydGVkICcgLiAkcXVlcnlfY291bnQgLiAnIHF1ZXJpZXMgc28gZmFyLicgKTsKCQkJCX0KCQkJCS8qCgkJCQlpZiAoIDAgPT09ICggJHF1ZXJ5X2NvdW50ICUgNjAwMCApICkgewoJCQkJCWVjaG8gIjxicj5cbiI7CgkJCQl9CgkJCQkqLwoJCQkJCgkJCQkvLyBJZiB3ZSBhcmUgd2l0aGluIDEgc2Vjb25kIG9mIHJlYWNoaW5nIG1heGltdW0gUEhQIHJ1bnRpbWUgdGhlbiBzdG9wIGhlcmUgc28gdGhhdCBpdCBjYW4gYmUgcGlja2VkIHVwIGluIGFub3RoZXIgUEhQIHByb2Nlc3MuLi4KCQkJCWlmICggKCAoIG1pY3JvdGltZSggdHJ1ZSApIC0gJHRoaXMtPnRpbWVfc3RhcnQgKSArIDEgKSA+PSBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ21heF9leGVjdXRpb25fdGltZSddICkgewoJCQkJCS8vIFRPRE86IERlYnVnZ2luZzoKCQkJCQkvL2lmICggKCAoIG1pY3JvdGltZSggdHJ1ZSApIC0gJHRoaXMtPnRpbWVfc3RhcnQgKSApID49IHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snbWF4X2V4ZWN1dGlvbl90aW1lJ10gKSB7CgkJCQkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ21lc3NhZ2UnLCAnRXhoYXVzdGVkIGF2YWlsYWJsZSBQSFAgdGltZSB0byBpbXBvcnQgZm9yIHRoaXMgcGFnZSBsb2FkLiBMYXN0IHF1ZXJ5OiAnIC4gJHF1ZXJ5X2NvdW50IC4gJy4nICk7CgkJCQkJCgkJCQkJZmNsb3NlKCAkZmlsZV9zdHJlYW0gKTsKCQkJCQkKCQkJCQlyZXR1cm4gKCAkcXVlcnlfY291bnQgKyAxICk7CgkJCQkJLy9icmVhayAyOwoJCQkJfSAvLyBFbmQgaWYuCgkJCQkKCQkJfSAvLyBFbmQgZm9yZWFjaCgpLgoJCQkKCQl9IC8vIEVuZCB3aGlsZSgpLgoJCQoJCWZjbG9zZSggJGZpbGVfc3RyZWFtICk7CgkJCgkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ21lc3NhZ2UnLCAnSW1wb3J0IG9mIFNRTCBkYXRhIGluIGNvbXBhdGliaWxpdHkgbW9kZSAoUEhQKSBjb21wbGV0ZS4nICk7CQkJCgkJcGJfYmFja3VwYnVkZHk6OnN0YXR1cyggJ21lc3NhZ2UnLCAnVG9vayAnIC4gcm91bmQoIG1pY3JvdGltZSggdHJ1ZSApIC0gJHRoaXMtPnRpbWVfc3RhcnQsIDMgKSAuICcgc2Vjb25kcyBvbiAnIC4gJHF1ZXJ5X2NvdW50IC4gJyBxdWVyaWVzLiAnICk7CgkJCgkJcmV0dXJuIHRydWU7CgkJCgl9IC8vIEVuZCBfaW1wb3J0X3BocCgpLgoJCgkKCQoJLyoqCgkgKglfaW1wb3J0X3NxbF9kdW1wX2xpbmUoKQoJICoKCSAqCUltcG9ydHMgYSBsaW5lL3F1ZXJ5IGludG8gdGhlIGRhdGFiYXNlLgoJICoJSGFuZGxlcyB1c2luZyB0aGUgc3BlY2lmaWVkIHRhYmxlIHByZWZpeC4KCSAqCUBzaW5jZSAyLnguCgkgKgoJICoJQHBhcmFtCQlzdHJpbmcJCSRxdWVyeQkJCVF1ZXJ5IHN0cmluZyB0byBydW4gZm9yIGltcG9ydGluZy4KCSAqCUBwYXJhbQkJc3RyaW5nCQkkb2xkX3ByZWZpeAkJT2xkIHByZWZpeC4gKG5ldyBwcmVmaXggd2FzIHBhc3NlZCBpbiBjb25zdHJ1Y3RvcikuCgkgKglAcmV0dXJuCQlib29sZWFuCQkJCQkJVHJ1ZT1zdWNjZXNzLCBGYWxzZT1mYWlsZWQuCgkgKgoJICovCglmdW5jdGlvbiBfaW1wb3J0X3NxbF9kdW1wX2xpbmUoICRxdWVyeSwgJG9sZF9wcmVmaXgsICRpZ25vcmVfZXhpc3RpbmcgKSB7CgkJJG5ld19wcmVmaXggPSAkdGhpcy0+X2RhdGFiYXNlX3ByZWZpeDsKCQkKCQkkcXVlcnlfb3BlcmF0b3JzID0gJ0lOU0VSVCBJTlRPfENSRUFURSBUQUJMRXxSRUZFUkVOQ0VTfENPTlNUUkFJTlR8QUxURVIgVEFCTEV8XC9cKiFcZCtccytBTFRFUiBUQUJMRSc7CgkJCgkJLy8gUmVwbGFjZSBkYXRhYmFzZSBwcmVmaXggaW4gcXVlcnkuCgkJaWYgKCAkb2xkX3ByZWZpeCAhPT0gJG5ld19wcmVmaXggKSB7CgkJCSRxdWVyeSA9IHByZWdfcmVwbGFjZSggIi9eKCRxdWVyeV9vcGVyYXRvcnMpKFxzK2A/KSRvbGRfcHJlZml4L2kiLCAiXCR7MX1cJHsyfSRuZXdfcHJlZml4IiwgJHF1ZXJ5ICk7IC8vIDQtMjktMTEKCQl9CgkJCgkJLy8gUnVuIHRoZSBxdWVyeQoJCS8vIERpc2FibGVkIHRvIHByZXZlbnQgZnJvbSBydW5uaW5nIG9uIEVWRVJZIGxpbmUuIE5vdyBqdXN0IHJ1bm5pbmcgYmVmb3JlIHRoaXMuIG15c3FsX3F1ZXJ5KCJTRVQgTkFNRVMgJ3V0ZjgnIik7IC8vIEZvcmNlIFVURjgKCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoICRxdWVyeSApOwoJCQoJCWlmICggZmFsc2UgPT09ICRyZXN1bHQgKSB7CgkJCWlmICggJGlnbm9yZV9leGlzdGluZyAhPT0gdHJ1ZSApIHsKCQkJCSRteXNxbF9lcnJvciA9IG15c3FsX2Vycm9yKCk7CgkJCQkvL2lmICggY291bnQoIHNlbGY6OiRfbGltaXRfOTAxMF9jb3VudCA8IHNlbGY6OkxJTUlUXzkwMTBfTE9HX01BWCApICkgeyAvLyBIYXZlbnQgbWF4ZWQgb3V0IDkwMTAgZXJyb3JzIHlldC4KCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdlcnJvcicsICdFcnJvciAjOTAxMDogVW5hYmxlIHRvIGltcG9ydCBTUUwgcXVlcnk6ICcgLiAkbXlzcWxfZXJyb3IgKTsKCQkJCS8vCXNlbGY6OiRfbGltaXRfOTAxMF9jb3VudCsrOwoJCQkJLyp9IGVsc2VpZiAoIGNvdW50KCBzZWxmOjokX2xpbWl0XzkwMTBfY291bnQgPT0gc2VsZjo6TElNSVRfOTAxMF9MT0dfTUFYICkgICkgewoJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdlcnJvcicsICdFcnJvciAjOTAxMDogVW5hYmxlIHRvIGltcG9ydCBTUUwgcXVlcnk6ICcgLiAkbXlzcWxfZXJyb3IgKTsKCQkJCQkkb3ZlcmZsb3dfbG9nX2ZpbGUgPSBBQlNQQVRIIC4gaW1wb3J0YnVkZHkgLiAnJzsKCQkJCQlwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCAnZXJyb3InLCAnV0FSTklORzogQXMgYSBsYXJnZSBhbW91bnQgb2YgOTAxMCBlcnJvcnMgaGF2ZSBiZWVuIGVuY291bnRlcmVkIHRoZSBkaXNwbGF5IG9mIGFueSBmdXJ0aGVyIDkwMTAgZXJyb3JzIHdpbGwgYmUgcmVkaXJlY3RlZCB0byB0aGUgb3ZlcmZsb3cgbG9nIGxvY2F0ZWQgYXQgYCcgLiAkb3ZlcmZsb3dfbG9nX2ZpbGUgLiAnYC4gTk9URTogOTAxMCBlcnJvcnMgaW5kaWNhdGluZyBkdXBsaWNhdGVzIGNhbiBvZnRlbiBiZSBzYWZlbHkgaWdub3JlZC4nICk7CgkJCQl9IGVsc2UgeyAvLyBNYXhlZCBvdXQuCgkJCQkJLy8gU2F2ZSA5MDEwIGVycm9ycyB0byBvdmVyZmxvdyBsb2cuCgkJCQkJJG92ZXJmbG93X2xvZ19maWxlID0gQUJTUEFUSCAuIGltcG9ydGJ1ZGR5IC4gJyc7CgkJCQkJQGZpbGVfcHV0X2NvbnRlbnRzICggJG92ZXJmbG93X2xvZ19maWxlLCAnRXJyb3IgIzkwMTA6IFVuYWJsZSB0byBpbXBvcnQgU1FMIHF1ZXJ5OiAnIC4gJG15c3FsX2Vycm9yLCBGSUxFX0FQUEVORCApOwoJCQkJfSovCgkJCQlpZiAoIGZhbHNlICE9PSBzdHJpc3RyKCAkbXlzcWxfZXJyb3IsICdzZXJ2ZXIgaGFzIGdvbmUgYXdheScgKSApIHsgLy8gaWYgc3RyaW5nIGRlbm90ZXMgdGhhdCBteXNxbCBzZXJ2ZXIgaGFzIGdvbmUgYXdheSBiYWlsIHNpbmNlIGl0IHdpbGwgbGlrZWx5IGp1c3QgZmxvb2QgdXNlciB3aXRoIGVycm9ycy4uLgoJCQkJCXBiX2JhY2t1cGJ1ZGR5OjpzdGF0dXMoICdlcnJvcicsICdFcnJvciAjOTAxMGI6IEhhbHRpbmcgYmFja3VwIHByb2Nlc3MgYXMgbXlzcWwgc2VydmVyIGhhcyBnb25lIGF3YXkgYW5kIGRhdGFiYXNlIGRhdGEgY291bGQgbm90IGJlIGltcG9ydGVkLiBUeXBpY2FsbHkgdGhlIHJlc3RvcmUgY2Fubm90IGNvbnRpbnVlIHNvIHRoZSBwcm9jZXNzIGhhcyBiZWVuIGhhbHRlZC4gVGhpcyBpcyB1c3VhbGx5IGNhdXNlZCBieSBhIHByb2JsZW1hdGljIG15c3FsIHNlcnZlciBhdCB5b3VyIGhvc3RpbmcgcHJvdmlkZXIsIGxvdyBteXNxbCB0aW1lb3V0cywgZXRjLiBDb250YWN0IHlvdXIgaG9zdGluZyBjb21wYW55IGZvciBzdXBwb3J0LicgKTsKCQkJCQlkaWUoICdCQUNLVVAgSEFMVEVEJyApOwoJCQkJfQoJCQl9CgkJCXJldHVybiBmYWxzZTsKCQl9IGVsc2UgewoJCQlyZXR1cm4gdHJ1ZTsKCQl9CgkJCgl9IC8vIEVuZCBfaW1wb3J0X3NxbF9kdW1wX2xpbmUoKS4KCQoJCgkKfSAvLyBFbmQgcGJfYmFja3VwYnVkZHlfbXlzcWxidWRkeSBjbGFzcy4KPz4=
###PACKDATA,FILE_END,/lib/mysqlbuddy/mysqlbuddy.php,importbuddy/lib/mysqlbuddy/mysqlbuddy.php
###PACKDATA,FILE_START,/lib/textreplacebuddy/index.php,importbuddy/lib/textreplacebuddy/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/lib/textreplacebuddy/index.php,importbuddy/lib/textreplacebuddy/index.php
###PACKDATA,FILE_START,/lib/textreplacebuddy/textreplacebuddy.php,importbuddy/lib/textreplacebuddy/textreplacebuddy.php

###PACKDATA,FILE_END,/lib/textreplacebuddy/textreplacebuddy.php,importbuddy/lib/textreplacebuddy/textreplacebuddy.php
###PACKDATA,FILE_START,/lib/cpanel/cpanel.php,importbuddy/lib/cpanel/cpanel.php
PD9waHAKLyoKRVhBTVBMRToKCnJlcXVpcmVfb25jZSggcGJfYmFja3VwYnVkZHk6OnBsdWdpbl9wYXRoKCkgLiAnL2xpYi9jcGFuZWwvY3BhbmVsLnBocCcgKTsKIAokY3BhbmVsX3VzZXIgPSBwYl9iYWNrdXBidWRkeTo6X0dFVCggJ3VzZXInICk7CiRjcGFuZWxfcGFzc3dvcmQgPSBwYl9iYWNrdXBidWRkeTo6X0dFVCggJ3Bhc3MnICk7CiRjcGFuZWxfaG9zdCA9ICJmb28uY29tIjsKJGRiX25hbWUgPSAnYXBwbGVzJzsKJGRiX3VzZXIgPSAnb3Jhbmdlcyc7CiRkYl9wYXNzID0gJ2JhbmFuYXMnOwokY3JlYXRlX2RiX3Jlc3VsdCA9IHBiX2JhY2t1cGJ1ZGR5X2NwYW5lbDo6Y3JlYXRlX2RiKCAkY3BhbmVsX3VzZXIsICRjcGFuZWxfcGFzc3dvcmQsICRjcGFuZWxfaG9zdCwgJGRiX25hbWUsICRkYl91c2VyLCAkZGJfcGFzcyApOwoKaWYgKCAkY3JlYXRlX2RiX3Jlc3VsdCA9PT0gdHJ1ZSApIHsKCWVjaG8gJ1N1Y2Nlc3MhIENyZWF0ZWQgZGF0YWJhc2UsIHVzZXIsIGFuZCBhc3NpZ25lZCB1c2VkIHRvIGRhdGFiYXNlLic7Cn0gZWxzZSB7CgllY2hvICdFcnJvcihzKTo8YnI+PHByZT4nIC4gcHJpbnRfciggJGNyZWF0ZV9kYl9yZXN1bHQsIHRydWUgKSAuICc8L3ByZT4nOwp9CgoqLwoKCgovKglwYl9iYWNrdXBidWRkeV9jcGFuZWwgQ2xhc3MKICoJCiAqCU1hbmFnZSBzb21lIGNwYW5lbCBzZXR0aW5ncy4KICoJCiAqCUBhdXRob3IJCUR1c3RpbiBCb2x0b24gPGh0dHA6Ly9kdXN0aW5ib2x0b24uY29tPiBTZXB0IDIwMTIuCiAqLwpjbGFzcyBwYl9iYWNrdXBidWRkeV9jcGFuZWwgewoKCgkvLyBUT0RPOiBVc2UgbW9yZSByb2J1c3QgdGhhbiBmaWxlX2dldF9jb250ZW50cygpLgoKCQoJLyoJY3JlYXRlX2RiKCkKCSAqCQoJICoJQ3JlYXRlIGEgZGF0YWJhc2UgYW5kIGFzc2lnbiBhIHVzZXIgdG8gaXQgd2l0aCBhbGwgcHJpdmlsYWdlcy4KCSAqCQoJICoJQHBhcmFtCQkKCSAqCUByZXR1cm4JCXRydWV8YXJyYXkJCUJvb2xlYW4gdHJ1ZSBvbiBzdWNjZXNzLCBlbHNlIGFuIGFycmF5IG9mIGVycm9ycy4KCSAqLwoJcHVibGljIHN0YXRpYyBmdW5jdGlvbiBjcmVhdGVfZGIoICRjcGFuZWxfdXNlciwgJGNwYW5lbF9wYXNzd29yZCwgJGNwYW5lbF9ob3N0LCAkZGJfbmFtZSwgJGRiX3VzZXIsICRkYl91c2VycGFzcywgJGNwYW5lbF9wb3J0ID0gJzIwODInICkgewoJCSRjcGFuZWxfc2tpbiA9ICJ4MyI7CgkJJGVycm9ycyA9IGFycmF5KCk7CgkJCgkJJGNwYW5lbF9wYXNzd29yZCA9IHVybGVuY29kZSggJGNwYW5lbF9wYXNzd29yZCApOyAvLyBQYXNzIG9mdGVuIGhhcyBzcGVjaWFsIGNoYXJzIHNvIGVuY29kZS4KCQkKCQkvLyBDYWxjdWxhdGUgYmFzZSBVUkwuCgkJJGJhc2VfdXJsID0gImh0dHA6Ly97JGNwYW5lbF91c2VyfTp7JGNwYW5lbF9wYXNzd29yZH1AeyRjcGFuZWxfaG9zdH06eyRjcGFuZWxfcG9ydH0vZnJvbnRlbmQveyRjcGFuZWxfc2tpbn0iOwoJCQoJCS8vIEdlbmVyYXRlIGNyZWF0ZSBkYXRhYmFzZSBVUkwuCgkJJGNyZWF0ZV9kYXRhYmFzZV91cmwgPSAkYmFzZV91cmwgLiAiL3NxbC9hZGRiLmh0bWw/ZGI9eyRkYl9uYW1lfSI7CgkJLy9lY2hvICRjcmVhdGVfZGF0YWJhc2VfdXJsIC4gJzxicj4nOwoJCQoJCQoJCS8vIENyZWF0ZSByZXF1ZXN0IGNvcmUgb2JqIGZvciBjb25uZWN0aW5nIHRvIEhUVFAuCgkJJHJlcXVlc3QgPSBuZXcgUmVxdWVzdENvcmUoICRjcmVhdGVfZGF0YWJhc2VfdXJsICk7CgkJdHJ5IHsKCQkJJHJlc3VsdCA9ICRyZXF1ZXN0LT5zZW5kX3JlcXVlc3QoIGZhbHNlICk7CgkJfSBjYXRjaCAoRXhjZXB0aW9uICRlKSB7CgkJCWlmICggc3RyaXN0ciggJGUtPmdldE1lc3NhZ2UoKSwgJ2NvdWxkblwndCBjb25uZWN0IHRvIGhvc3QnICkgIT09IGZhbHNlICkgewoJCQkJJGVycm9yc1tdID0gJ1VuYWJsZSB0byBjb25uZWN0IHRvIGhvc3QgYCcgLiAkY3BhbmVsX2hvc3QgLiAnYCBvbiBwb3J0IGAnIC4gJGNwYW5lbF9wb3J0IC4gJ2AuIFZlcmlmeSB0aGUgY1BhbmVsIGRvbWFpbi9VUkwgYW5kIG1ha2Ugc3VyZSB0aGUgc2VydmVyIGlzIGFibGUgdG8gaW5pdGlhdGUgb3V0Z29pbmcgaHR0cCBjb25uZWN0aW9ucyBvbiBwb3J0ICcgLiAkY3BhbmVsX3BvcnQgLiAnLiBTb21lIGhvc3RzIGJsb2NrIHRoaXMuJzsKCQkJCXJldHVybiAkZXJyb3JzOwoJCQl9CgkJCSRlcnJvcnNbXSA9ICdDYXVnaHQgZXhjZXB0aW9uOiAnIC4gJGUtPmdldE1lc3NhZ2UoKTsKCQkJcmV0dXJuICRlcnJvcnM7CgkJfQoJCQoJCQoJCS8vIEdlbmVyYXRlIGNyZWF0ZSBkYXRhYmFzZSB1c2VyIFVSTC4KCQkkY3JlYXRlX3VzZXJfdXJsID0gJGJhc2VfdXJsIC4gIi9zcWwvYWRkdXNlci5odG1sP3VzZXI9eyRkYl91c2VyfSZwYXNzPXskZGJfdXNlcnBhc3N9IjsKCQkvL2VjaG8gJGNyZWF0ZV91c2VyX3VybCAuICc8YnI+JzsKCQkKCQkvLyBHZW5lcmF0ZSBhc3NpZ24gdXNlciBkYXRhYmFzZSBhY2Nlc3MgVVJMLgoJCSRhc3NpZ25fdXNlcl91cmwgPSAkYmFzZV91cmwgLiAiL3NxbC9hZGR1c2VydG9kYi5odG1sP3VzZXI9eyRjcGFuZWxfdXNlcn1feyRkYl91c2VyfSZkYj17JGNwYW5lbF91c2VyfV97JGRiX25hbWV9JkFMTD1BTEwiOwoJCS8vZWNobyAkYXNzaWduX3VzZXJfdXJsIC4gJzxicj4nOwoJCQoJCQoJCQoJCWlmICggc3RyaXN0ciggJHJlc3VsdCwgJ0xvZyBpbicgKSAhPT0gZmFsc2UgKSB7IC8vIE5vIHN1Y2VzcyBhZGRpbmcgREIuCgkJCSRlcnJvcnNbXSA9ICdVbmFibGUgdG8gbG9nIGludG8gY1BhbmVsIHdpdGggZ2l2ZW4gdXNlcm5hbWUvcGFzc3dvcmQuIFZlcmlmeSB0aGUgY3JlZGVudGlhbHMgYXJlIGNvcnJlY3QgZm9yIHRoaXMgY1BhbmVsIGRvbWFpbi4nOwoJCX0KCQlpZiAoIHN0cmlzdHIoICRyZXN1bHQsICdBZGRlZCB0aGUgRGF0YWJhc2UnICkgPT09IGZhbHNlICkgeyAvLyBObyBzdWNlc3MgYWRkaW5nIERCLgoJCQkkZXJyb3JzW10gPSAnRXJyb3IgZW5jb3VudGVyZWQgYWRkaW5nIGRhdGFiYXNlLic7CgkJfQoJCWlmICggc3RyaXN0ciggJHJlc3VsdCwgJ3Byb2JsZW0gY3JlYXRpbmcgdGhlIGRhdGFiYXNlJyApICE9PSBmYWxzZSApIHsgLy8gU29tZXRoaW5nIGZhaWxlZC4KCQkJJGVycm9yc1tdID0gJ1VuYWJsZSB0byBjcmVhdGUgZGF0YWJhc2UuJzsKCQl9CgkJaWYgKCBzdHJpc3RyKCAkcmVzdWx0LCAnZGF0YWJhc2UgbmFtZSBhbHJlYWR5IGV4aXN0cycgKSAhPT0gZmFsc2UgKSB7IC8vIERCIGFscmVhZHkgZXhpc3RzLgoJCQkkZXJyb3JzW10gPSAnVGhlIGRhdGFiYXNlIG5hbWUgYWxyZWFkeSBleGlzdHMuJzsKCQl9CgkJCgkJCgkJLy8gUnVuIGNyZWF0ZSBkYXRhYmFzZSB1c2VyLgoJCWlmICggY291bnQoICRlcnJvcnMgKSA9PT0gMCApIHsKCQkJJHJlcXVlc3QgPSBuZXcgUmVxdWVzdENvcmUoICRjcmVhdGVfdXNlcl91cmwgKTsKCQkJdHJ5IHsKCQkJCSRyZXN1bHQgPSAkcmVxdWVzdC0+c2VuZF9yZXF1ZXN0KCBmYWxzZSApOwoJCQl9IGNhdGNoIChFeGNlcHRpb24gJGUpIHsKCQkJCSRlcnJvcnNbXSA9ICdDYXVnaHQgZXhjZXB0aW9uOiAnIC4gJGUtPmdldE1lc3NhZ2UoKTsKCQkJCXJldHVybiAkZXJyb3JzOwoJCQl9CgkJCQoJCQlpZiAoIHN0cmlzdHIoICRyZXN1bHQsICdBZGRlZCB1c2VyJyApID09PSBmYWxzZSApIHsgLy8gTm8gc3VjY2VzcyBhZGRpbmcgdXNlci4KCQkJCSRlcnJvcnNbXSA9ICdFcnJvciBlbmNvdW50ZXJlZCBhZGRpbmcgdXNlci4nOwoJCQl9CgkJCWlmICggc3RyaXN0ciggJHJlc3VsdCwgJ2V4aXN0cyBpbiB0aGUgZGF0YWJhc2UnICkgIT09IGZhbHNlICkgeyAvLyBBbHJlYWR5IGV4aXN0cy4KCQkJCSRlcnJvcnNbXSA9ICdVc2VybmFtZSBhbHJlYWR5IGV4aXN0cy4nOwoJCQl9CgkJfQoJCQoJCS8vIFJ1biBhc3NpZ24gdXNlciB0byBkYXRhYmFzZS4KCQlpZiAoIGNvdW50KCAkZXJyb3JzICkgPT09IDAgKSB7CgkJCSRyZXF1ZXN0ID0gbmV3IFJlcXVlc3RDb3JlKCAkYXNzaWduX3VzZXJfdXJsICk7CgkJCXRyeSB7CgkJCQkkcmVzdWx0ID0gJHJlcXVlc3QtPnNlbmRfcmVxdWVzdCggZmFsc2UgKTsKCQkJfSBjYXRjaCAoRXhjZXB0aW9uICRlKSB7CgkJCQkkZXJyb3JzW10gPSAnQ2F1Z2h0IGV4Y2VwdGlvbjogJyAuICRlLT5nZXRNZXNzYWdlKCk7CgkJCQlyZXR1cm4gJGVycm9yczsKCQkJfQoJCQkKCQkJaWYgKCBzdHJpc3RyKCAkcmVzdWx0LCAnd2FzIGFkZGVkIHRvIHRoZSBkYXRhYmFzZScgKSA9PT0gZmFsc2UgKSB7IC8vIE5vIHN1Y2Nlc3MgYWRkaW5nIHVzZXIuCgkJCQkkZXJyb3JzW10gPSAnRXJyb3IgZW5jb3VudGVyZWQgYXNzaWduaW5nIHVzZXIgdG8gZGF0YWJhc2UuJzsKCQkJfQoJCX0KCQkKCQlpZiAoIGNvdW50KCAkZXJyb3JzICkgPiAwICkgeyAvLyBPbmUgb3IgbW9yZSBlcnJvcnMuCgkJCXJldHVybiAkZXJyb3JzOwoJCX0gZWxzZSB7CgkJCXJldHVybiB0cnVlOyAvLyBTdWNjZXNzIQoJCX0KCQkKCX0KCn0gLy8gZW5kIGNsYXNzLg==
###PACKDATA,FILE_END,/lib/cpanel/cpanel.php,importbuddy/lib/cpanel/cpanel.php
###PACKDATA,FILE_START,/pluginbuddy/_getting_started.php,importbuddy/pluginbuddy/_getting_started.php

###PACKDATA,FILE_END,/pluginbuddy/_getting_started.php,importbuddy/pluginbuddy/_getting_started.php
###PACKDATA,FILE_START,/pluginbuddy/_image_downsize.php,importbuddy/pluginbuddy/_image_downsize.php
PD9waHAKLy8gTk9URTogTm8gbmFtZXNwYWNlIGZvciB0aGUgaW1hZGUgZG93bnNpemluZyBmdW5jdGlvbmFsaXR5LgoKLyoJSW1hZ2UgRG93bnNpemVyIC0gSXRlcmF0aW9uIDIwIC0gMy8yNC8xMQogKgogKglIYW5kbGVzIHJlc2l6aW5nIGltYWdlIHRodW1ibmFpbHMgb24gZGVtYW5kIHRvIHRoZSByZXF1ZXN0ZWQgY3VzdG9tIGltYWdlIHNpemUuCiAqCiAqCU9yaWdpbmFsbHkgd3JpdHRlbiBieSBDaHJpcyBKZWFuLiBNb2RpZmllZCBieSBEdXN0aW4gQm9sdG9uCiAqCQogKi8KaWYgKCAhZnVuY3Rpb25fZXhpc3RzKCAnaXRoZW1lc19maWx0ZXJfaW1hZ2VfZG93bnNpemUnICkgKSB7CglhZGRfZmlsdGVyKCAnaW1hZ2VfZG93bnNpemUnLCAnaXRoZW1lc19maWx0ZXJfaW1hZ2VfZG93bnNpemUnLCAxMCwgMyApOyAvLyBMYXRjaCBpbiB3aGVuIGEgY3VzdG9tIGltYWdlIHNpemUgaXMgY2FsbGVkLgoJYWRkX2ZpbHRlciggJ2ludGVybWVkaWF0ZV9pbWFnZV9zaXplc19hZHZhbmNlZCcsICdpdGhlbWVzX2ZpbHRlcl9pbWFnZV9kb3duc2l6ZV9ibG9ja2V4dHJhJywgMTAsIDMgKTsgLy8gQ3VzdG9tIGltYWdlIHNpemUgYmxvY2tlciB0byBibG9jayBnZW5lcmF0aW9uIG9mIHRodW1icyBmb3Igc2l6ZXMgb3RoZXIgc2l6ZXMgZXhjZXB0IHdoZW4gY2FsbGVkLgoJZnVuY3Rpb24gaXRoZW1lc19maWx0ZXJfaW1hZ2VfZG93bnNpemUoICRyZXN1bHQsICRpZCwgJHNpemUgKSB7CgkJZ2xvYmFsICRfaXRoZW1lc190ZW1wX2Rvd25zaXplX3NpemU7CgkJaWYgKCBpc19hcnJheSggJHNpemUgKSApIHsgLy8gRG9udCBib3RoZXIgd2l0aCBub24tbmFtZWQgc2l6ZXMuIExldCB0aGVtIHByb2NlZWQgbm9ybWFsbHkuIFdlIG5lZWQgdG8gc2V0IHNvbWV0aGluZyB0byBibG9jayB0aGUgYmxvY2tlciB0aG91Z2guCgkJCSRfaXRoZW1lc190ZW1wX2Rvd25zaXplX3NpemUgPSAnYXJyYXlfc2l6ZSc7CgkJCXJldHVybjsKCQl9CgkJCgkJLy8gU3RvcmUgY3VycmVudCBtZXRhIGluZm9ybWF0aW9uIGFuZCBzaXplIGRhdGEuCgkJZ2xvYmFsICRfaXRoZW1lc190ZW1wX2Rvd25zaXplX21ldGE7CgkJJF9pdGhlbWVzX3RlbXBfZG93bnNpemVfc2l6ZSA9ICRzaXplOwoJCSRfaXRoZW1lc190ZW1wX2Rvd25zaXplX21ldGEgPSB3cF9nZXRfYXR0YWNobWVudF9tZXRhZGF0YSggJGlkICk7CgkJCgkJaWYgKCAhaXNfYXJyYXkoICRfaXRoZW1lc190ZW1wX2Rvd25zaXplX21ldGEgKSApIHsgcmV0dXJuICRyZXN1bHQ7IH0KCQlpZiAoICFpc19hcnJheSggJHNpemUgKSAmJiAhZW1wdHkoICRfaXRoZW1lc190ZW1wX2Rvd25zaXplX21ldGFbJ3NpemVzJ11bJHNpemVdICkgKSB7CgkJCSRkYXRhID0gJF9pdGhlbWVzX3RlbXBfZG93bnNpemVfbWV0YVsnc2l6ZXMnXVskc2l6ZV07CgkJCS8vIFNvbWUgaGFuZGxpbmcgaWYgdGhlIHNpemUgZGVmaW5lZCBmb3IgdGhpcyBzaXplIG5hbWUgaGFzIGNoYW5nZWQuCgkJCWdsb2JhbCAkX3dwX2FkZGl0aW9uYWxfaW1hZ2Vfc2l6ZXM7CgkJCWlmICggZW1wdHkoICRfd3BfYWRkaXRpb25hbF9pbWFnZV9zaXplc1skc2l6ZV0gKSApIHsgLy8gTm90IGEgY3VzdG9tIHNpemUgc28gcmV0dXJuIGRhdGEgYXMgaXMuCgkJCQkkaW1nX3VybCA9IHdwX2dldF9hdHRhY2htZW50X3VybCggJGlkICk7CgkJCQkkaW1nX3VybCA9IHBhdGhfam9pbiggZGlybmFtZSggJGltZ191cmwgKSwgJGRhdGFbJ2ZpbGUnXSApOwoJCQkJcmV0dXJuIGFycmF5KCAkaW1nX3VybCwgJGRhdGFbJ3dpZHRoJ10sICRkYXRhWydoZWlnaHQnXSwgdHJ1ZSApOwoJCQl9IGVsc2UgeyAvLyBDdXN0b20gc2l6ZSBzbyBvbmx5IHJldHVybiBpZiBjdXJyZW50IGltYWdlIGZpbGUgZGltZW5zaW9ucyBtYXRjaCB0aGUgZGVmaW5lZCBvbmVzLgoJCQkJJGltZ191cmwgPSB3cF9nZXRfYXR0YWNobWVudF91cmwoICRpZCApOwoJCQkJJGltZ191cmwgPSBwYXRoX2pvaW4oIGRpcm5hbWUoICRpbWdfdXJsICksICRkYXRhWydmaWxlJ10gKTsKCQkJCXJldHVybiBhcnJheSggJGltZ191cmwsICRkYXRhWyd3aWR0aCddLCAkZGF0YVsnaGVpZ2h0J10sIHRydWUgKTsKCQkJfQoJCX0KCQkKCQlyZXF1aXJlX29uY2UoIEFCU1BBVEggLiAnL3dwLWFkbWluL2luY2x1ZGVzL2ltYWdlLnBocCcgKTsKCQkkdXBsb2FkcyA9IHdwX3VwbG9hZF9kaXIoKTsKCQlpZiAoICFpc19hcnJheSggJHVwbG9hZHMgKSB8fCAoIGZhbHNlICE9PSAkdXBsb2Fkc1snZXJyb3InXSApICkgeyByZXR1cm4gJHJlc3VsdDsgfQoJCSRmaWxlX3BhdGggPSAieyR1cGxvYWRzWydiYXNlZGlyJ119L3skX2l0aGVtZXNfdGVtcF9kb3duc2l6ZV9tZXRhWydmaWxlJ119IjsKCQkKCQkvLyBJbWFnZSBpcyByZXNpemVkIHdpdGhpbiB0aGUgZnVuY3Rpb24gaW4gdGhlIGZvbGxvd2luZyBsaW5lLgoJCSR0ZW1wX21ldGFfaW5mb3JtYXRpb24gPSB3cF9nZW5lcmF0ZV9hdHRhY2htZW50X21ldGFkYXRhKCAkaWQsICRmaWxlX3BhdGggKTsgLy8gdHJpZ2dlcnMgZmlsdGVyX2ltYWdlX2Rvd25zaXplX2Jsb2NrZXh0cmEoKSBmdW5jdGlvbiB2aWEgZmlsdGVyIHdpdGhpbi4gZ2VuZXJhdGUgaW1hZ2VzLiByZXR1cm5zIG5ldyBtZXRhIGRhdGEgZm9yIGltYWdlIChvbmx5IGluY2x1ZGVzIHRoZSBqdXN0LWdlbmVyYXRlZCBpbWFnZSBzaXplKS4KCQkKCQkkbWV0YV9pbmZvcm1hdGlvbiA9ICRfaXRoZW1lc190ZW1wX2Rvd25zaXplX21ldGE7IC8vIEdldCB0aGUgb2xkIG9yaWdpbmFsIG1ldGEgaW5mb3JtYXRpb24uCgkJCgkJaWYgKCAhZW1wdHkoICR0ZW1wX21ldGFfaW5mb3JtYXRpb25bJ3NpemVzJ11bJF9pdGhlbWVzX3RlbXBfZG93bnNpemVfc2l6ZV0gKSApIHsgLy8gVGhpcyBuYW1lZCBzaXplIHJldHVybmVkIHNpemUgZGltZW5zaW9ucyBpbiB0aGUgc2l6ZSBhcnJheSBrZXkgc28gY29weSBpdC4KCQkJJG1ldGFfaW5mb3JtYXRpb25bJ3NpemVzJ11bJF9pdGhlbWVzX3RlbXBfZG93bnNpemVfc2l6ZV0gPSAkdGVtcF9tZXRhX2luZm9ybWF0aW9uWydzaXplcyddWyRfaXRoZW1lc190ZW1wX2Rvd25zaXplX3NpemVdOyAvLyBNZXJnZSBvbGQgbWV0YSBiYWNrIGluLgoJCQl3cF91cGRhdGVfYXR0YWNobWVudF9tZXRhZGF0YSggJGlkLCAkbWV0YV9pbmZvcm1hdGlvbiApOyAvLyBVcGRhdGUgaW1hZ2UgbWV0YSBkYXRhLgoJCX0KCQkKCQl1bnNldCggJF9pdGhlbWVzX3RlbXBfZG93bnNpemVfc2l6ZSApOyAvLyBDbGVhbnVwLgoJCXVuc2V0KCAkX2l0aGVtZXNfdGVtcF9kb3duc2l6ZV9tZXRhICk7CgkJCgkJcmV0dXJuICRyZXN1bHQ7Cgl9CgkvKiBQcmV2ZW50cyBpbWFnZSByZXNpemVyIGZyb20gcmVzaXppbmcgQUxMIGltYWdlczsganVzdCB0aGUgY3VycmVudGx5IHJlcXVlc3RlZCBzaXplLiAqLwoJZnVuY3Rpb24gaXRoZW1lc19maWx0ZXJfaW1hZ2VfZG93bnNpemVfYmxvY2tleHRyYSggJHNpemVzICkgewoJCS8vcmV0dXJuICRzaXplczsKCQlnbG9iYWwgJF9pdGhlbWVzX3RlbXBfZG93bnNpemVfc2l6ZTsKCQlpZiAoIGVtcHR5KCAkX2l0aGVtZXNfdGVtcF9kb3duc2l6ZV9zaXplICkgfHwgKCAkX2l0aGVtZXNfdGVtcF9kb3duc2l6ZV9zaXplID09ICdhcnJheV9zaXplJyApICkgeyAvLyBEb250IGJvdGhlciB3aXRoIG5vbi1uYW1lZCBzaXplcy4gTGV0IHRoZW0gcHJvY2VlZCBub3JtYWxseS4KCQkJcmV0dXJuICRzaXplczsKCQl9CgkJaWYgKCAhZW1wdHkoICRzaXplc1skX2l0aGVtZXNfdGVtcF9kb3duc2l6ZV9zaXplXSApICkgeyAvLyB1bmF2YWlsYWJsZSBzaXplIHNvIGRvbid0IHNldC4KCQkJJHNpemVzID0gYXJyYXkoICRfaXRoZW1lc190ZW1wX2Rvd25zaXplX3NpemUgPT4gJHNpemVzWyRfaXRoZW1lc190ZW1wX2Rvd25zaXplX3NpemVdICk7IC8vIFN0cmlwIG91dCBhbGwgZXh0cmEgbWV0YSBkYXRhIHNvIG9ubHkgdGhlIHJlcXVlc3RlZCBzaXplIHdpbGwgYmUgZ2VuZXJhdGVkLgoJCX0KCQlyZXR1cm4gJHNpemVzOwoJfQp9Cj8+
###PACKDATA,FILE_END,/pluginbuddy/_image_downsize.php,importbuddy/pluginbuddy/_image_downsize.php
###PACKDATA,FILE_START,/pluginbuddy/_pluginbuddy.php,importbuddy/pluginbuddy/_pluginbuddy.php

###PACKDATA,FILE_END,/pluginbuddy/_pluginbuddy.php,importbuddy/pluginbuddy/_pluginbuddy.php
###PACKDATA,FILE_START,/pluginbuddy/history.txt,importbuddy/pluginbuddy/history.txt
MS4wLjAgLSAyMDExLTEyLTEzIC0gRHVzdGluIEJvbHRvbgoJSW5pdGlhbCBwdXNoLgoxLjAuMSAtIDIwMTEtMTItMTMgLSBEdXN0aW4gQm9sdG9uCglGaXhlZCBVSSB0aXRsZSgpIG5vdCBzaG93aW5nIGltYWdlLgoJRml4ZWQgbm9uLXNlcmllcyBHZXR0aW5nIFN0YXJ0ZWQgcGFnZSB1bmRlZmluZWQgaW5kZXguCglwYl9iYWNrdXBidWRkeTo6c2V0dGluZ3MoKSByZXR1cm5zIGJsYW5rIGZvciBzZXJpZXMgdGFnIGlmIG5vdCBmb3VuZC4KMS4wLjIgLSAyMDExLTAyLTEyIC0gRHVzdGluIEJvbHRvbgoJQWRkZWQgdXBkYXRlci4KMS4wLjMgLSAyMDEyLTAxLTA0IC0gRHVzdGluIEJvbHRvbgoJRml4ZWQgdmFyaW91cyB3aWRnZXQgdGhpbmdzLgoJVXNpbmcgVUkgZWxlbWVudHMgb24gcGFnZXMgdGhhdCBhcmVuJ3Qgb3VyIG93bi4KMS4wLjQgLSAyMDEyLTAxLTA1IC0gRHVzdGluIEJvbHRvbgoJQWRkZWQgb3B0aW9uYWwgYWJpbGl0eSB0byBzcGVjaWZpYyB0aGUgZmlyc3QgcGFyYW1ldGVyICgkdGFnKSBmb3IgYWRkX3Nob3J0Y3V0LCBhZGRfZmlsdGVyLCBhZGRfYWN0aW9uLCBldGMgdGhhdCBhbGxvd3MgcGFzc2luZyBhIGN1c3RvbSBtZXRob2QgY2FsbGJhY2sgbmFtZSB0aGF0IGRpZmZlcnMgZnJvbSB0aGUgdGFnLiBTb21lIGFjdGlvbnMgaGF2ZSBjaGFyYWN0ZXJzIGRpc2FsbG93ZWQgaW4gUEhQIG1ldGhvZCBuYW1lcyBzbyB0aGV5IG5lZWQgdG8gZGlmZmVyLgoxLjAuNSAtIDIwMTItMDEtMDUgLSBEdXN0aW4gQm9sdG9uCglGaXhlZCBmb3JtIHZhbGlkYXRpb24gZm9yIGVtcHR5IGZvcm0gZWxlbWVudHMuCglGaXhlZCBtaXNzaW5nIHRvb2x0aXBzIGluIHNldHRpbmdzIGZvcm1zLgoxLjAuNiAtIDIwMTItMDEtMDUgLSBEdXN0aW4gQm9sdG9uCglBZGRlZCBiZXR0ZXIgZXJyb3IgcmVwb3J0aW5nIG9uIGZvcm0gdmFsaWRhdGlvbiBmYWlsdXJlLgoJTm93IGFsbG93aW5nIHBhcnRpYWwgZm9ybSBzYXZpbmcgb24gdmFsaWR0aW9uIGZhaWx1cmUuCglBZGRlZCByZWQgYm9yZGVyIGFyb3VuZCBmb3JtIGl0ZW1zIHRoYXQgZmFpbCB2YWxpZGF0aW9uIGZvciBlYXNpZXIgcmVjb2duaXRpb24uCjEuMC43IC0gMjAxMi0wMS0wNiAtIER1c3RpbiBCb2x0b24KCUZvcm0gdmFsaWRhdGlvbiBmdW5jdGlvbiBudW1iZXIgcnVsZSB3YXMgaW5wcm9wZXJseSBuYW1lZCBudW0uCjEuMC44IC0gMjAxMi0wMS0xMyAtIER1c3RpbiBCb2x0b24KCUFkZGVkIGVycm9yIG1lc3NhZ2UgaWYgdXBkYXRlciBzZXR0aW5ncyBwYXJhbWV0ZXIgbWlzc2luZy4KCUZpeGVkIHZlcnNpb24gbnVtYmVyLgoxLjAuOSAtIDIwMTItMDEtMTMgLSBEdXN0aW4gQm9sdG9uCglGaXhlZCBwbHVnaW5idWRkeV9zZXR0aW5ncyBmb3JtIHNldHRpbmcgZm9ybSBuYW1lIHN0YXRpY2FsbHkuCglDdXN0b20gcHJvY2Vzc2luZyBhZGRlZCBpbnRvIHBsdWdpbmJ1ZGR5X3NldHRpbmdzIGNsYXNzIHZpYSBwcm9jZXNzKCk7IGp1c3Qgc2V0IHNhdmVwb2ludCBpbiBjb25zdHJ1Y3RvciB0byBmYWxzZSB0byBhY3RpdmF0ZSB0aGlzIG1vZGUuCjEuMC4xMSAtIDIwMTItMDEtMTggLSBEdXN0aW4gQm9sdG9uCglBZGRlZCBpbml0aWFsIHN0YXJ0aW5ncyBmb3IgbmV3IG1lZGlhIGxpYnJhcnkgc3lzdGVtLgoJVHdlYWtlZCBkb3duc2l6ZXIgbG9hZGVyIHN5c3RlbS4KCVJlbmFtZWQgcGx1Z2luYnVkZHkgY2xhc3MgdG8gcGIgY2xhc3MuIEFsbCByZWZlcmVuY2VzIHRvIHBiX2JhY2t1cGJ1ZGR5Ojogc2hvdWxkIGNoYW5nZSB0byBwYl9iYWNrdXBidWRkeTo6CjEuMC4xMiAtIDIwMTItMDEtMTggLSBEdXN0aW4gQm9sdG9uCQoJX2luaXRfY29yZV9jb250cm9sbGVyKCkgY2xlYW51cC4KMS4wLjEzIC0gMjAxMi0wMS0xOSAtIER1c3RpbiBCb2x0b24JCglGaXhlZCBsYWNrIG9mIHJldHVybiBpbiBwYl9iYWNrdXBidWRkeTo6dGlwKCkgYW5kIHBiX2JhY2t1cGJ1ZGR5Ojp2aWRlbygpLgoxLjAuMTQgLSAyMDEyLTAxLTE5IC0gRHVzdGluIEJvbHRvbgoJTW92ZWQgYWxsIGZyYW1ld29yay1yZXF1aXJlZCBKUyBhbmQgQ1NTIGludG8gcGx1Z2luYnVkZHkgZGlyZWN0b3J5LgoxLjAuMTUgLSAyMDEyLTAxLTI1IC0gRHVzdGluIEJvbHRvbgoJRml4ZWQgY29yZSBjb250cm9sbGVyIGZvciBkYXNoYm9hcmQgd2lkZ2V0IGJlaW5nIGFibGUgdG8gYWNjZXNzIHByaXZhdGUgc3RhdGljIHZhci4KCUFkZGVkIHBiX2JhY2t1cGJ1ZGR5OjphbnRpX2RpcmVjdG9yeV9icm93c2luZygpLgoJQWRkZWQgcGJfYmFja3VwYnVkZHk6Om1rZGlyKCkuCglBZGRlZCBwYl9iYWNrdXBidWRkeTo6c3RhdHVzKCkuCglBZGRlZCBwYl9iYWNrdXBidWRkeTo6Z2V0X3N0YXR1cygpLgoJQWRkZWQgcGJfYmFja3VwYnVkZHk6OmRlYnVnKCkuCjEuMC4xNiAtIDIwMTItMDEtMjYgLSBEdXN0aW4gQm9sdG9uCglBZGRlZCBwYl9iYWNrdXBidWRkeTo6JGZpbGVzeXN0ZW0gY2xhc3MgY29udHJvbGxlciBmb3IgaW50ZXJmYWNpbmcgd2l0aCBmaWxlIHN5c3RlbS4KCUFkZGVkIHBiX2JhY2t1cGJ1ZGR5OjokZm9ybWF0IGNsYXNzIGNvbnRyb2xsZXIgZm9yIGZvcm1hdHRpbmcgZGF0YSAvIHRleHQgaW4gaHVtYW4gcmVhZGFibGUgZm9ybWF0cy4KCWRvd25zaXplciwgdXBkYXRlciwgZmlsZXN5c3RlbSwgYW5kIGZvcm1hdCAnbW9kdWxlcycgbm93IGNvbnRyb2xsZWQgdmlhIG1vZHVsZXMga2V5IGluIHRoZSAkc2V0dGluZ3MgYXJyYXkuICBTZWUgbmV3IGluaXQucGhwLgoxLjAuMTkgLSAyMDEyLTAxLTMxIC0gRHVzdGluIEJvbHRvbgoJRm9ybSBmaXguCglTZXR0aW5ncyBmaXguCglBZGRlZCBDU1Mgb3B0aW9ucyBmb3IgZ3JvdXAgbGlzdCBpbiBVSSBjbGFzcy4KCUFkZGVkIHRpdGxlIHR5cGUgZm9yIGZvcm0vc2V0dGluZ3MgY2xhc3Nlcy4KCVVwZGF0ZWQgYWRtaW4uY3NzIGZvciB0aXRsZSBzZXR0aW5ncyBmb3JtIHR5cGUuCjEuMC4yMCAtIDIwMTItMDEtMDEgLSBEdXN0aW4gQm9sdG9uCglBZGRlZCBlcnJvciBjb2RlIGxvb2t1cCBmdW5jdGlvbiB0byBmaWxlc3lzdGVtIGNsYXNzLiBGb3IgZXhpdCBjb2RlcyBmcm9tIGV4ZWMoKSBhbmQgc3VjaC4KCUZpeGVkIHN0YXR1cygpIGJ1Z3Mgd2l0aCBuZXdsaW5lcywgYXJyYXlzIChjaGFuZ2VkIGRlbGltaXRlcikuCjEuMC4yMSAtIDIwMTItMDEtMDEgLSBEdXN0aW4gQm9sdG9uCglBZGRlZCB3eXNpd3lnIG9iamVjdCB5b3UgZm9ybSAmIHNldHRpbmdzIHN5c3RlbS4KCVRvdWNodXAgdG8gZmlsZXN5c3RlbSBjbGFzcy4KCUFkZGVkIGhpZGRlbiBmb3JtIG9iamVjdC4KCVNldHRpbmcgdGhlIHRpdGxlIG9mIGFueSBmb3JtL3NldHRpbmdzIG9iamVjdCB0byAnJyB3aWxsIGhpZGUgaXRzIGxlZnQgY29sdW1uIChjb2xsYXBzZXMgbGVmdCkuCglBZGRlZCB0aXRsZSBmb3JtIG9iamVjdCB0eXBlIGZvciBmb3JtYXR0aW5nLgoxLjAuMjIgLSAyMDEyLTAxLTAzIC0gRHVzdGluIEJvbHRvbgoJQWRkZWQgcGI6OiRzdGFydF90aW1lIHRvIHVzZSB0byBjb21wYXJlIHBhc3NhZ2Ugb2YgdGltZS4KMS4wLjIzIC0gMjAxMi0wMi0wOCAtIER1c3RpbiBCb2x0b24KCVVwZGF0ZWQgdXBkYXRlci4KMS4wLjI0IC0gMjAxMi0wMi0wOCAtIER1c3RpbiBCb2x0b24KCUZpeGVkIGNoZWNrYm94ICJZRVMhIiBkZWJ1ZyBvdXRwdXQuCglGaXhlZCByYWRpbyBpbnB1dCBkZWZhdWx0IGNoZWNrZWQgc2VsZWN0aW9uIG5vdCBiZWluZyBhcHBsaWVkLgoxLjAuMjUgLSAyMDEyLTAyLTA5IC0gRHVzdGluIEJvbHRvbgoJQWRkZWQgb3JpZW50YXRpb24gb3B0aW9uIHRvIHJhZGlvIGJ1dHRvbnMuICBQb3NzaWJsZSB2YWxzOiBob3Jpem9udGFsLCB2ZXJ0aWNhbAoxLjAuMjYgLSAyMDEyLTAyLTA5IC0gRHVzdGluIEJvbHRvbgoJQWRkZWQgdGFiYmVkIGludGVyZmFjZXMgaW50byAkdWkgY2xhc3MuCjEuMC4yNyAtIDIwMTItMDItMTAgLSBEdXN0aW4gQm9sdG9uCglGaXhlZCBHZXR0aW5nIFN0YXJ0ZWQgcGFnZSB3aXRoIG9sZGVyIHNlcmllcyBjb25mbGljdGluZy4KMS4wLjI4IC0gMjAxMi0wMi0xNyAtIER1c3RpbiBCb2x0b24KCXN0cnN0cigpIHVzZWQgM3JkIHBhcmFtIHdoaWNoIHJlcXVpcmVkIFBIUCA+PSA1LjMgaW4gZm9ybTo6dGVzdF9ydWxlKCkuCglDbGVhbmVkIHVwIGluaXQucGhwIGEgYml0LgoJQ29sb3IgcGlja2VyOiBBZGRlZCBjb2xvciB0eXBlIHRvIGZvcm0vc2V0dGluZ3MuCgkKCUFkZGVkIHNldHRpbmdzIGNsYXNzIG1ldGhvZDogc2V0X3ZhbHVlKCkgdG8gb3ZlcndyaXRlIHZhbHVlcy4=
###PACKDATA,FILE_END,/pluginbuddy/history.txt,importbuddy/pluginbuddy/history.txt
###PACKDATA,FILE_START,/pluginbuddy/index.php,importbuddy/pluginbuddy/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/pluginbuddy/index.php,importbuddy/pluginbuddy/index.php
###PACKDATA,FILE_START,/pluginbuddy/standalone_preloader.php,importbuddy/pluginbuddy/standalone_preloader.php

###PACKDATA,FILE_END,/pluginbuddy/standalone_preloader.php,importbuddy/pluginbuddy/standalone_preloader.php
###PACKDATA,FILE_START,/pluginbuddy/classes/core_controllers.php,importbuddy/pluginbuddy/classes/core_controllers.php

###PACKDATA,FILE_END,/pluginbuddy/classes/core_controllers.php,importbuddy/pluginbuddy/classes/core_controllers.php
###PACKDATA,FILE_START,/pluginbuddy/classes/filesystem.php,importbuddy/pluginbuddy/classes/filesystem.php

###PACKDATA,FILE_END,/pluginbuddy/classes/filesystem.php,importbuddy/pluginbuddy/classes/filesystem.php
###PACKDATA,FILE_START,/pluginbuddy/classes/form.php,importbuddy/pluginbuddy/classes/form.php

###PACKDATA,FILE_END,/pluginbuddy/classes/form.php,importbuddy/pluginbuddy/classes/form.php
###PACKDATA,FILE_START,/pluginbuddy/classes/format.php,importbuddy/pluginbuddy/classes/format.php
PD9waHAKCgoKLyoJY2xhc3MgcGx1Z2luYnVkZHlfZm9ybWF0CiAqCUBhdXRob3IgRHVzdGluIEJvbHRvbgogKgkKICoJSGVscHMgZm9ybWF0IGNvbnRlbnQgb3IgZGF0YSBzdWNoIGFzIHRpbWUsIGRhdGUsIGZpbGUgc2l6ZSwgZXRjLgogKi8KY2xhc3MgcGJfYmFja3VwYnVkZHlfZm9ybWF0IHsKCQoJCgkKCS8vICoqKioqKioqKiogUFVCTElDIFBST1BFUlRJRVMgKioqKioqKioqKgoJCgkKCQoJLy8gKioqKioqKioqKiBQUklWQVRFIFBST1BFUlRJRVMgKioqKioqKioqKgoJcHJpdmF0ZSAkX3RpbWVzdGFtcCA9ICdNIGosIFkgZzppOnMgYSc7CgkKCQoJLy8gKioqKioqKioqKiBGVU5DVElPTlMgKioqKioqKioqKgoJCgkKCQoJLyoJcGx1Z2luYnVkZHlfZm9ybWF0LT5fX2NvbnN0cnVjdCgpCgkgKgkKCSAqCURlZmF1bHQgY29uc3RydWN0b3IuCgkgKgkKCSAqCUByZXR1cm4JCW51bGwKCSAqLwoJZnVuY3Rpb24gX19jb25zdHJ1Y3QoKSB7Cgl9IC8vIEVuZCBfX2NvbnN0cnVjdCgpLgoJCgkKCQoJLyoJcGx1Z2luYnVkZHlfZm9ybWF0LT5maWxlX3NpemUoKQoJICoJCgkgKglUYWtlcyBhIGZpbGUgc2l6ZSBpbiBieXRlcyBhbmQgdHJhbnNmb3JtcyBpdCBpbnRvIGEgaHVtYW4gcmVhZGFibGUgZm9ybWF0IHdpdGggbW9yZSBmcmllbmRseSB1bml0cy4gRGVjaWRlcyBvbiB1bml0IGJhc2VkIG9uIHRoZSBzaXplLgoJICoJCgkgKglAcGFyYW0JCWludAkJJHNpemUJRmlsZSBzaXplLgoJICoJQHJldHVybgkJc3RyaW5nCQkJSHVtYW4gZm9ybWF0dGVkIGZyaWVuZGx5IHJlYWRhYmxlIGZvcm1hdC4KCSAqLwoJZnVuY3Rpb24gZmlsZV9zaXplKCAkc2l6ZSApIHsKCQkkc2l6ZXMgPSBhcnJheSggJyBCeXRlcycsICcgS0InLCAnIE1CJywgJyBHQicsICcgVEInLCAnIFBCJywgJyBFQicsICcgWkInLCAnIFlCJyk7CgkJaWYgKCAkc2l6ZSA9PSAwICkgewoJCQlyZXR1cm4oICcwIE1CJyApOwoJCX0gZWxzZSB7CgkJCXJldHVybiAoIHJvdW5kKCAkc2l6ZSAvIHBvdyggMTAyNCwgKCAkaSA9IGZsb29yKCBsb2coICRzaXplLCAxMDI0ICkgKSApICksICRpID4gMSA/IDIgOiAwKSAuICRzaXplc1skaV0gKTsKCQl9Cgl9IC8vIEVuZCBmaWxlX3NpemUoKS4KCQoJCgkKCS8qCXBsdWdpbmJ1ZGR5X2Zvcm1hdC0+ZGF0ZSgpCgkgKgkKCSAqCUZvcm1hdHMgYSB0aW1lc3RhbXAgaW50byBhIG5pY2UgaHVtYW4gZGF0ZSBmb3JtYXQuCgkgKgkKCSAqCUBwYXJhbQkJaW50CQkkdGltZXN0YW1wCQlUaW1lc3RhbXAgdG8gbWFrZSBwcmV0dHkuCgkgKglAcmV0dXJuCQlzdHJpbmcJCQkJCVByZXR0eSBodW1hbiB0aW1lc3RhbXAuCgkgKi8KCWZ1bmN0aW9uIGRhdGUoICR0aW1lc3RhbXAgKSB7CgkJcmV0dXJuIGRhdGUoICR0aGlzLT5fdGltZXN0YW1wLCAkdGltZXN0YW1wICk7Cgl9IC8vIEVuZCBkYXRlKCkuCgkKCQoJCgkvKglwbHVnaW5idWRkeV9mb3JtYXQtPnVubG9jYWxpemVfdGltZSgpCgkgKgkKCSAqCVJlbW92ZXMgdGhlIHRpbWV6b25lIG9mZnNldCBvZiBhIGxvY2FsaXplZCB0aW1lIGRpc3BsYXkgZm9yIGEgdXNlci4KCSAqCQoJICoJQHBhcmFtCQlpbnQJCSR0aW1lc3RhbXAJCVRpbWVzdGFtcCB0byByZW1vdmUgdGltZSBvZmZzZXQgZm9yLgoJICoJQHJldHVybgkJaW50CQkJCQkJQ29ycmVjdGVkIHRpbWVzdGFtcC4KCSAqLwoJZnVuY3Rpb24gbG9jYWxpemVfdGltZSggJHRpbWVzdGFtcCApIHsKCQlpZiAoIGZ1bmN0aW9uX2V4aXN0cyggJ2dldF9vcHRpb24nICkgKSB7CgkJCSRnbXRfb2Zmc2V0ID0gZ2V0X29wdGlvbiggJ2dtdF9vZmZzZXQnICk7CgkJfSBlbHNlIHsKCQkJJGdtdF9vZmZzZXQgPSAwOwoJCX0KCQlyZXR1cm4gJHRpbWVzdGFtcCArICggJGdtdF9vZmZzZXQgKiAzNjAwICk7Cgl9IC8vIEVuZCBsb2NhbGl6ZV90aW1lKCkuCgkKCQoJCgkvKglwbHVnaW5idWRkeV9mb3JtYXQtPnVubG9jYWxpemVfdGltZSgpCgkgKgkKCSAqCVJlbW92ZXMgdGhlIHRpbWV6b25lIG9mZnNldCBvZiBhIGxvY2FsaXplZCB0aW1lIGRpc3BsYXkgZm9yIGEgdXNlci4KCSAqCQoJICoJQHBhcmFtCQlpbnQJCSR0aW1lc3RhbXAJCVRpbWVzdGFtcCB0byByZW1vdmUgdGltZSBvZmZzZXQgZm9yLgoJICoJQHJldHVybgkJaW50CQkJCQkJQ29ycmVjdGVkIHRpbWVzdGFtcC4KCSAqLwoJZnVuY3Rpb24gdW5sb2NhbGl6ZV90aW1lKCAkdGltZXN0YW1wICkgewoJCXJldHVybiAkdGltZXN0YW1wIC0gKCBnZXRfb3B0aW9uKCAnZ210X29mZnNldCcgKSAqIDM2MDAgKTsKCX0gLy8gRW5kIHVubG9jYWxpemVfdGltZSgpLgoJCgkKCQoJLyoJcGx1Z2luYnVkZHlfZm9ybWF0LT50aW1lX2FnbygpCgkgKgkKCSAqCUFjY2VwdHMgTk9OLWxvY2FsaXplZCB0aW1lc3RhbXBzLgoJICoJQHNlZSB0aW1lX2R1cmF0aW9uCgkgKgkKCSAqCUBwYXJhbQkJCgkgKglAcmV0dXJuCQkKCSAqLwoJIC8vIFRPRE86IGRlcHJlY2F0ZWQ/CglmdW5jdGlvbiB0aW1lX2FnbyggJHRpbWVzdGFtcCApIHsKCQlyZXR1cm4gaHVtYW5fdGltZV9kaWZmKCAkdGltZXN0YW1wLCB0aW1lKCkgKTsKCX0gLy8gRW5kIHRpbWVfYWdvKCkuCgkKCQoJCgkvKglwbHVnaW5idWRkeV9mb3JtYXQtPmR1cmF0aW9uKCkKCSAqCQoJICoJUmV0dXJucyBhIGh1bWFuIHJlYWRhYmxlIGR1cmF0aW9uLiBVc2VmdWwgZm9yIHRpbWUgYWdvIG9yIGNvdW50ZG93bnMuCgkgKglFeDogNSBob3VycywgNCBtaW51dGVzLCA0MyBzZWNvbmRzLgoJICoJCgkgKglAcGFyYW0JCWludAkJJHNlY29uZHMJCU51bWJlciBvZiBzZWNvbmRzIHRvIHR1cm4gaW50byBhIGh1bWFuIGZyaWVuZGx5IHJlYWRhYmxlIGZvcm1hdC4KCSAqCUByZXR1cm4JCQkJc3RyaW5nCQkJSHVtYW4gcmVhZGFibGUgc3RyaW5nIGR1cmF0aW9uLgoJICovCglmdW5jdGlvbiB0aW1lX2R1cmF0aW9uKCAkc2Vjb25kcyApIHsKCQkkdGltZSA9IHRpbWUoKSAtICRzZWNvbmRzOwoJCQoJCSRwZXJpb2RzID0gYXJyYXkoX18oJ3NlY29uZCcsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLAoJCQkJCQkgX18oJ21pbnV0ZScsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLAoJCQkJCQkgX18oJ2hvdXInLCAgICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLAoJCQkJCQkgX18oJ2RheScsIAkgICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLAoJCQkJCQkgX18oJ3dlZWsnLCAgICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLAoJCQkJCQkgX18oJ21vbnRoJywgICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLAoJCQkJCQkgX18oJ3llYXInLCAgICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLAoJCQkJCQkgX18oJ2RlY2FkZScuICdMSU9OJyApCgkJCQkJCSApOwoJCSRsZW5ndGhzID0gYXJyYXkoJzYwJywnNjAnLCcyNCcsJzcnLCc0LjM1JywnMTInLCcxMCcpOwoJCQoJCSRub3cgPSB0aW1lKCk7CgkJCgkJJGRpZmZlcmVuY2UgPSAkbm93IC0gJHRpbWU7CgkJJHRlbnNlID0gX18oJ2FnbycsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApOwoJCQoJCQoJCWZvcigkaiA9IDA7ICRkaWZmZXJlbmNlID49ICRsZW5ndGhzWyRqXSAmJiAkaiA8IGNvdW50KCRsZW5ndGhzKS0xOyAkaisrKSB7CgkJCSRkaWZmZXJlbmNlIC89ICRsZW5ndGhzWyRqXTsKCQl9CgkJCgkJJGRpZmZlcmVuY2UgPSByb3VuZCgkZGlmZmVyZW5jZSk7CgkJCgkJaWYoJGRpZmZlcmVuY2UgIT0gMSkgewoJCQkkcGVyaW9kc1skal0uPSAicyI7CgkJfQoJCQoJCXJldHVybiAiJGRpZmZlcmVuY2UgJHBlcmlvZHNbJGpdIjsKCX0gLy8gRW5kIGR1cmF0aW9uKCkuCgkKCQoJCgkvKglwcmV0dGlmeSgpCgkgKgkKCSAqCVRha2VzIGEgc3RyaW5nIGFuZCByZXR1cm5zIGEgbW9yZSBwcmV0dHkgdmVyc2lvbi4gTG9va3MgaW4gYW4gYXJyYXkgZm9yIGEga2V5IG1hdGNoaW5nIHRoZSBzdHJpbmcuCgkgKglSZXR1cm5zIHRoZSBhc3NvY2lhdGVkIHZhbHVlLiBSZXR1cm5zIG9yaWdpbmFsIHZhbHVlIGlmIG5vIHByZXR0eSByZXBsYWNlciBpcyBmb3VuZC4KCSAqCUV4OgoJICoJCXByZXR0aWZ5KCAnZG9nJywgYXJyYXkoICdjYXRzJyA9PiAnQ2F0cycsICdkb2cnID0+ICdEb2cnICkgKTsKCSAqCQlSZXR1cm5zOiBEb2cKCSAqCQoJICoJQHBhcmFtCQlzdHJpbmcJCSR2YWx1ZQkJCVZhbHVlIHRvIGJlIHJlcGxhY2VkIHdpdGggYSBwcmV0dHkgdmVyc2lvbi4KCSAqCUBwYXJhbQkJYXJyYXkJCSRyZXBsYWNlbWVudHMJQXJyYXkgb2Y6IHZhbHVlIHRvIGxvb2sgZm9yID0+IHZhbHVlIHRvIHJlcGxhY2Ugd2l0aC4KCSAqCUByZXR1cm4JCXN0cmluZwkJCQkJCVByZXR0eSB2ZXJzaW9uIHRoYXQgcmVwbGFjZWQgJHZhbHVlLiBSZXR1cm5zIG9yaWdpbmFsICR2YWx1ZSBpZiBub3QgZm91bmQgaW4gJHJlcGxhY2VtZW50cyBrZXlzLgoJICovCglwdWJsaWMgZnVuY3Rpb24gcHJldHRpZnkoICR2YWx1ZSwgJHJlcGxhY2VtZW50cyApIHsKCQkKCQlpZiAoIGlzc2V0KCAkcmVwbGFjZW1lbnRzWyR2YWx1ZV0gKSApIHsgLy8gRm91bmQgcmVwbGFjZW1lbnQuCgkJCXJldHVybiAkcmVwbGFjZW1lbnRzWyR2YWx1ZV07CgkJfSBlbHNlIHsgLy8gTm8gcmVwbGFjZW1lbnQ7IHJldHVybiBvcmlnaW5hbCB2YWx1ZS4KCQkJcmV0dXJuICR2YWx1ZTsKCQl9CgkJCgl9IC8vIEVuZCBwcmV0dGlmeSgpOwoJCgkKCQp9IC8vIEVuZCBjbGFzcyBwbHVnaW5idWRkeV9zZXR0aW5ncy4KCgoKPz4=
###PACKDATA,FILE_END,/pluginbuddy/classes/format.php,importbuddy/pluginbuddy/classes/format.php
###PACKDATA,FILE_START,/pluginbuddy/classes/index.php,importbuddy/pluginbuddy/classes/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/pluginbuddy/classes/index.php,importbuddy/pluginbuddy/classes/index.php
###PACKDATA,FILE_START,/pluginbuddy/classes/settings.php,importbuddy/pluginbuddy/classes/settings.php

###PACKDATA,FILE_END,/pluginbuddy/classes/settings.php,importbuddy/pluginbuddy/classes/settings.php
###PACKDATA,FILE_START,/pluginbuddy/classes/ui.php,importbuddy/pluginbuddy/classes/ui.php

###PACKDATA,FILE_END,/pluginbuddy/classes/ui.php,importbuddy/pluginbuddy/classes/ui.php
###PACKDATA,FILE_START,/pluginbuddy/css/admin.css,importbuddy/pluginbuddy/css/admin.css
I3Rvb2x0aXAgewoJcG9zaXRpb246IGFic29sdXRlOwoJei1pbmRleDogMzAwMDsKCWJvcmRlcjogMnB4IHNvbGlkICNERkRGREY7CglwYWRkaW5nOiAxMnB4OwoJbWF4LXdpZHRoOiAzMDBweDsKCQoJYm9yZGVyLXJhZGl1czogOHB4OwoJLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA4cHg7CgktbW96LWJvcmRlci1yYWRpdXM6IDhweDsKCQoJLXdlYmtpdC1ib3gtc2hhZG93OiA2cHggNnB4IDI1cHggMTVweCByZ2JhKDAsIDAsIDAsIC4wOCk7CgktbW96LWJveC1zaGFkb3c6IDZweCA2cHggMjVweCAxNXB4IHJnYmEoMCwgMCwgMCwgLjA4KTsKCWJveC1zaGFkb3c6IDZweCA2cHggMjVweCAxNXB4IHJnYmEoMCwgMCwgMCwgLjA4KTsgCgkKCWJhY2tncm91bmQ6ICNlZGVkZWQ7CgliYWNrZ3JvdW5kOiAtbW96LWxpbmVhci1ncmFkaWVudCh0b3AsICNlZGVkZWQgMCUsICNmZmZmZmYgMTAwJSk7CgliYWNrZ3JvdW5kOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBjb2xvci1zdG9wKDAlLCNlZGVkZWQpLCBjb2xvci1zdG9wKDEwMCUsI2ZmZmZmZikpOwoJYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCAjZWRlZGVkIDAlLCNmZmZmZmYgMTAwJSk7CgliYWNrZ3JvdW5kOiAtby1saW5lYXItZ3JhZGllbnQodG9wLCAjZWRlZGVkIDAlLCNmZmZmZmYgMTAwJSk7CgliYWNrZ3JvdW5kOiAtbXMtbGluZWFyLWdyYWRpZW50KHRvcCwgI2VkZWRlZCAwJSwjZmZmZmZmIDEwMCUpOwoJYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvcCwgI2VkZWRlZCAwJSwjZmZmZmZmIDEwMCUpOwoJZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoIHN0YXJ0Q29sb3JzdHI9JyNlZGVkZWQnLCBlbmRDb2xvcnN0cj0nI2ZmZmZmZicsR3JhZGllbnRUeXBlPTAgKTsKfQojdG9vbHRpcCBoMywgI3Rvb2x0aXAgZGl2IHsgbWFyZ2luOiAwOyB9Ci5wbHVnaW5idWRkeS1ub2RlY29yIGEgewoJdGV4dC1kZWNvcmF0aW9uOiBub25lOwp9Ci5wbHVnaW5idWRkeV90aXAgaW1nIHsKCXZlcnRpY2FsLWFsaWduOiAtMnB4Owp9Cgp0ZC5wYl9kcmFnaGFuZGxlIHsKCWN1cnNvcjogbW92ZTsKCXRleHQtYWxpZ246IGNlbnRlcjsKCXZlcnRpY2FsLWFsaWduOiBtaWRkbGU7Cn0KCnRyLnREbkRfd2hpbGVEcmFnIHRkLHRyLnREbkRfd2hpbGVEcmFnIHRoewoJYmFja2dyb3VuZDogI0VFRUVFRTsKCWJvcmRlci10b3A6IDFweCBzb2xpZCAjQkJCQkJCICFpbXBvcnRhbnQ7Cglib3JkZXItYm90dG9tOiAxcHggc29saWQgI0JCQkJCQiAhaW1wb3J0YW50OwoJcGFkZGluZy10b3A6IDJweDsKfQoucGJfZGVidWcgewoJZmxvYXQ6IHJpZ2h0OwoJYmFja2dyb3VuZDogI0ZGODk4OTsKCWJvcmRlcjogMnB4IHNvbGlkIHJlZDsKCXBhZGRpbmc6IDhweDsKCXdpZHRoOiA0MHB4OwoJcG9zaXRpb246IGFic29sdXRlOwoJcmlnaHQ6IDA7Cgl6LWluZGV4OiA5MDAwOwp9Ci5wYl9kZWJ1Z19zaG93IHsKCWN1cnNvcjogcG9pbnRlcjsKCWZsb2F0OiByaWdodDsKfQoucGJfZGVidWdfaGlkZSB7CgljdXJzb3I6IHBvaW50ZXI7CglkaXNwbGF5OiBub25lOwoJZmxvYXQ6IHJpZ2h0Owp9Ci5wYl9kZWJ1Z19jb250ZW50IHsKCWRpc3BsYXk6IG5vbmU7Cn0KLnBiX2RlYnVnIHRleHRhcmVhIHsKCXdpZHRoOiAxMDAlOwoJaGVpZ2h0OiAxMDBweDsKfQoKLnBiX2h0aXRsZSB7Cglmb250LXNpemU6IDE4cHg7Cglib3JkZXItYm90dG9tOiAxcHggc29saWQgI0RGREZERjsKCW1hcmdpbi10b3A6IDIwcHg7CglwYWRkaW5nLWJvdHRvbTogNHB4Owp9CgoucGJfdG9nZ2xlIHsKCWN1cnNvcjogcG9pbnRlcjsKfQoucGJfdG9nZ2xlZCB7CglkaXNwbGF5OiBub25lOwoJYm9yZGVyOiAxcHggc29saWQgI0NDQ0NDQzsKCW1hcmdpbjogNHB4OwoJcGFkZGluZzogOHB4OwoJLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA0cHg7CgktbW96LWJvcmRlci1yYWRpdXM6IDRweDsKCWJvcmRlci1yYWRpdXM6IDRweDsKfQoKI3BiX2JhY2t1cGJ1ZGR5X3N0YXR1cyB7Cgl3aWR0aDogMTAwJTsKCWhlaWdodDogMjAwcHg7Cn0KCi8qIFRhYnMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovCi51aS10YWJzIHsKCWJvcmRlci10b3A6IDFweCBzb2xpZCAjREZERkRGOyBtYXJnaW4tdG9wOiAyMHB4OyB9IC8qIHBhZGRpbmc6IC4yZW07IHpvb206IDE7ICovCi51aS10YWJzIC51aS10YWJzLW5hdiB7IHotaW5kZXg6IDE1OyBsaXN0LXN0eWxlOiBub25lOyBwb3NpdGlvbjogcmVsYXRpdmU7IHBhZGRpbmc6IDBweCAwcHggMHB4OyBtYXJnaW4tdG9wOiAtMjhweDsgbWFyZ2luLWxlZnQ6IDEwcHg7IH0KLnVpLXRhYnMgLnVpLXRhYnMtbmF2IGxpIHsgbWFyZ2luOiAtMTJweCA3cHggLTFweCAwcHg7IHBvc2l0aW9uOiByZWxhdGl2ZTsgZmxvYXQ6IGxlZnQ7IHBhZGRpbmc6IDA7IHRleHQtYWxpZ246IGNlbnRlcjsgfQoudWktdGFicyAudWktdGFicy1uYXYgbGkgYSB7CgliYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOyAvKiAjRURFREVEIEluYWN0aXZlIGJnLiAqLwoJaGVpZ2h0OiAyN3B4OwoJZmxvYXQ6IGxlZnQ7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgcGFkZGluZy1sZWZ0OiAxNXB4OyBwYWRkaW5nLXJpZ2h0OiAxNXB4OwoJLW1vei1ib3JkZXItcmFkaXVzOiAzcHggM3B4IDBweCAwcHg7Cgktd2Via2l0LWJvcmRlci1yYWRpdXM6IDNweCAzcHggMHB4IDBweDsKCWJvcmRlci1yYWRpdXM6IDNweCAzcHggMHB4IDBweDsKCWJvcmRlcjogMXB4IHNvbGlkICNkZmRmZGY7IG91dGxpbmU6IG5vbmU7IHBhZGRpbmctdG9wOiA1cHg7Cglib3JkZXItYm90dG9tOiAwcHg7CglkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CglwYWRkaW5nLXRvcDogMTBweDsKCWZvbnQtd2VpZ2h0OiAyMDA7Cglmb250LXNpemU6IDIwcHg7Cglmb250LWZhbWlseTogIkhlbHZldGljYU5ldWUtTGlnaHQiLCJIZWx2ZXRpY2EgTmV1ZSBMaWdodCIsIkhlbHZldGljYSBOZXVlIixzYW5zLXNlcmlmOwoJLy9jb2xvcjogIzQ2NDY0NiAhaW1wb3J0YW50OwoJY29sb3I6ICNhYWE7CgkKfQoudWktdGFicyAudWktdGFicy1uYXYgLnVpLXRhYnMtYWN0aXZlIHsKCW1hcmdpbi10b3A6IC0xMnB4Owp9Ci51aS10YWJzIC51aS10YWJzLW5hdiAudWktdGFicy1hY3RpdmUgYSB7CgliYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwoJaGVpZ2h0OiAyOHB4OwoJYm9yZGVyLWNvbG9yOiAjQ0NDOwoJY29sb3I6ICM0NjQ2NDY7Cn0KLnVpLXRhYnMgLnVpLXRhYnMtbmF2IC51aS10YWJzLWFjdGl2ZSBhOmhvdmVyIHsKCWJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7CgkvL2N1cnNvcjogZGVmYXVsdDsKCS8vYm9yZGVyLWNvbG9yOiAjQ0NDOwp9CgoudWktdGFicyAudWktdGFicy1uYXYgbGkgYTpob3ZlciB7CgkvL2JhY2tncm91bmQtY29sb3I6ICNERkRGREY7Cglib3JkZXItY29sb3I6ICNDQ0M7Cgljb2xvcjogI2Q1NGUyMTsKfQoudWktdGFicyAudWktdGFicy1uYXYgbGkudWktdGFicy1zZWxlY3RlZCB7ICB9IC8qIHBhZGRpbmctYm90dG9tOiAwcHg7ICovCi51aS10YWJzIC51aS10YWJzLW5hdiBsaS51aS10YWJzLXNlbGVjdGVkIGEsIC51aS10YWJzIC51aS10YWJzLW5hdiBsaS51aS1zdGF0ZS1kaXNhYmxlZCBhLCAudWktdGFicyAudWktdGFicy1uYXYgbGkudWktc3RhdGUtcHJvY2Vzc2luZyBhIHsKCWhlaWdodDogMjhweDsgY3Vyc29yOiB0ZXh0OwoJYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgLy8gRjlGOUY5Cglib3JkZXItYm90dG9tOiAxcHggc29saWQgI0ZGRkZGRjsKfQoKLnVpLXRhYnMgLnVpLXRhYnMtbmF2IGxpIGEsIC51aS10YWJzLnVpLXRhYnMtY29sbGFwc2libGUgLnVpLXRhYnMtbmF2IGxpLnVpLXRhYnMtc2VsZWN0ZWQgYSB7IGN1cnNvcjogcG9pbnRlcjsgfSAvKiBmaXJzdCBzZWxlY3RvciBpbiBncm91cCBzZWVtcyBvYnNvbGV0ZSwgYnV0IHJlcXVpcmVkIHRvIG92ZXJjb21lIGJ1ZyBpbiBPcGVyYSBhcHBseWluZyBjdXJzb3I6IHRleHQgb3ZlcmFsbCBpZiBkZWZpbmVkIGVsc2V3aGVyZS4uLiAqLwoudWktdGFicyAudWktdGFicy1wYW5lbCB7IHBhZGRpbmc6IDA7IHBhZGRpbmctdG9wOiAxMHB4OyBkaXNwbGF5OiBibG9jazsgYm9yZGVyLXdpZHRoOiAwOyBiYWNrZ3JvdW5kOiBub25lOyB9Ci51aS10YWJzIC51aS10YWJzLWhpZGUgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0KCgoKLyoKLnVpLXRhYnMtbmF2IGxpIGEgc3BhbiAucGJfYmFja3VwYnVkZHlfZmFuY3l0YWIgewoJCn0KKi8KCgoKLnBiX2xhYmVsIHsKCS13ZWJraXQtYm9yZGVyLXJhZGl1czogM3B4OwoJLW1vei1ib3JkZXItcmFkaXVzOiAzcHg7Cglib3JkZXItcmFkaXVzOiAzcHg7Cn0KLnBiX2xhYmVsIHsKCWRpc3BsYXk6IGlubGluZS1ibG9jazsKCXBhZGRpbmc6IDJweCA0cHg7Cglmb250LXNpemU6IDExLjg0NHB4OwoJZm9udC13ZWlnaHQ6IGJvbGQ7CglsaW5lLWhlaWdodDogMTRweDsKCWNvbG9yOiB3aGl0ZTsKCXRleHQtc2hhZG93OiAwIC0xcHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpOwoJd2hpdGUtc3BhY2U6IG5vd3JhcDsKCXZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsKCWJhY2tncm91bmQtY29sb3I6ICM5OTk7Cn0KLnBiX2xhYmVsLXN1Y2Nlc3MgewoJYmFja2dyb3VuZC1jb2xvcjogIzQ2ODg0NzsKfQoucGJfbGFiZWwtd2FybmluZyB7CgliYWNrZ3JvdW5kLWNvbG9yOiAjRjg5NDA2Owp9Ci5wYl9sYWJlbC1pbXBvcnRhbnQgewoJYmFja2dyb3VuZC1jb2xvcjogI2RkNDU0MjsgLy8jQjk0QTQ4Owp9Ci5wYl9sYWJlbC1pbmZvIHsKCWJhY2tncm91bmQtY29sb3I6ICMzQTg3QUQ7Cn0KLnBiX2xhYmVsLWludmVyc2UgewoJYmFja2dyb3VuZC1jb2xvcjogIzMzMzsKfQ==
###PACKDATA,FILE_END,/pluginbuddy/css/admin.css,importbuddy/pluginbuddy/css/admin.css
###PACKDATA,FILE_START,/pluginbuddy/css/index.php,importbuddy/pluginbuddy/css/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/pluginbuddy/css/index.php,importbuddy/pluginbuddy/css/index.php
###PACKDATA,FILE_START,/pluginbuddy/css/jquery.miniColors.css,importbuddy/pluginbuddy/css/jquery.miniColors.css
Lm1pbmlDb2xvcnMtdHJpZ2dlciB7CgloZWlnaHQ6IDIycHg7Cgl3aWR0aDogMjJweDsKCXZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CgltYXJnaW46IDAgLjI1ZW07CglkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CglvdXRsaW5lOiBub25lOwp9CgoubWluaUNvbG9ycy1zZWxlY3RvciB7Cglwb3NpdGlvbjogYWJzb2x1dGU7Cgl3aWR0aDogMTc1cHg7CgloZWlnaHQ6IDE1MHB4OwoJYmFja2dyb3VuZDogI0ZGRjsKCWJvcmRlcjogc29saWQgMXB4ICNCQkI7CgktbW96LWJveC1zaGFkb3c6IDAgMCA2cHggcmdiYSgwLCAwLCAwLCAuMjUpOwoJLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgNnB4IHJnYmEoMCwgMCwgMCwgLjI1KTsKCWJveC1zaGFkb3c6IDAgMCA2cHggcmdiYSgwLCAwLCAwLCAuMjUpOwoJLW1vei1ib3JkZXItcmFkaXVzOiA1cHg7Cgktd2Via2l0LWJvcmRlci1yYWRpdXM6IDVweDsKCWJvcmRlci1yYWRpdXM6IDVweDsKCXBhZGRpbmc6IDVweDsKCXotaW5kZXg6IDk5OTk5OTsKfQoKLm1pbmlDb2xvcnMtc2VsZWN0b3IuYmxhY2sgewoJYmFja2dyb3VuZDogIzAwMDsKCWJvcmRlci1jb2xvcjogIzAwMDsKfQoKLm1pbmlDb2xvcnMtY29sb3JzIHsKCXBvc2l0aW9uOiBhYnNvbHV0ZTsKCXRvcDogNXB4OwoJbGVmdDogNXB4OwoJd2lkdGg6IDE1MHB4OwoJaGVpZ2h0OiAxNTBweDsKCWN1cnNvcjogY3Jvc3NoYWlyOwp9CgoubWluaUNvbG9ycy1odWVzIHsKCXBvc2l0aW9uOiBhYnNvbHV0ZTsKCXRvcDogNXB4OwoJbGVmdDogMTYwcHg7Cgl3aWR0aDogMjBweDsKCWhlaWdodDogMTUwcHg7CgljdXJzb3I6IGNyb3NzaGFpcjsKfQoKLm1pbmlDb2xvcnMtY29sb3JQaWNrZXIgewoJcG9zaXRpb246IGFic29sdXRlOwoJd2lkdGg6IDExcHg7CgloZWlnaHQ6IDExcHg7Cn0KCi5taW5pQ29sb3JzLWh1ZVBpY2tlciB7Cglwb3NpdGlvbjogYWJzb2x1dGU7CglsZWZ0OiAtM3B4OwoJd2lkdGg6IDI2cHg7CgloZWlnaHQ6IDNweDsKfQ==
###PACKDATA,FILE_END,/pluginbuddy/css/jquery.miniColors.css,importbuddy/pluginbuddy/css/jquery.miniColors.css
###PACKDATA,FILE_START,/pluginbuddy/images/draghandle.png,importbuddy/pluginbuddy/images/draghandle.png
iVBORw0KGgoAAAANSUhEUgAAABAAAAAYCAYAAADzoH0MAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEgAACxIB0t1+/AAAAAd0SU1FB9oHHRIvI8D7+LoAAALwSURBVDjLrZTNa11FGMZ/78ycnPvVNG3QlqTxkiuYxaUFQVMoLqqCilD6H0gFF4W4EbdduHDbnbisIIiCtOBKs9GNVKziouoiFmOTtOKtJNE093tmXhdzqpeeuNJZznmf33mfmXceUVUmlgEqwHGgBZwo9u8A68BvwACIDwRuQixADhwDTgLL71/ffArglTOPfQvUAZ2AKID76t3XFARjLa46TX12num5JdbvZ3xysw5Ay996oXVozN6va3S37+L7e8QQAMUpwpln22ArkB+F2gK7oymufOfxhb0rtxpcfskxd+Iw9LZguANhwPUvfsTFKCCGzz/9gaMLS9SPVXlnbYbtXva3t+2e8tZqj9eX/qDb6bCztcZzLz5BjIIJGECwLqN9foXVYZvb3YyH1+1uxuqwTfv8CtZlgBAwmKAGUNSPALh4dpGrK6dLgKsrp7l4dhGgqFWCGpxXAxrxox4+KlZApKRHVVGFoIof9ZJGDc5JBDG4qRrOCHKQGhARREAU3FQtaST+Dx1EbHEGY3xQMGBMmRAVYlR8TLWgRCzOR5tm2GgCAO6ADqImsQ+KManOR4vrDCsAVOs5Wzt9arnlUMWVAHt9z/2BpzcMVOs5AJ1h5cEcgLGOUYioKj7EEsAX30YhYmz6QcBgxlEAwU1VCitC0LKFoP+cTaoVxlFwXtMoZ9U6QdKT/LcOBDACtloHMXgVjBMFjYz7XaKmN+qsKQGcNWhxG+N+FzTiRP97BwmAYLOcKMKHX9/hxi+7JcAbH33P8uIRXj51HJvlgCQLCaBoDMysX+PCwiat6VACtKYDFxY2mVm/hsYUJl4FFxTQyMkn5yFvQK3BpdmMNz/z7PaT+EgVLj2fM5sbmGnA3DyEAUHBRRXe/vhPrN2n0RjwyKNjms0m55qGD9bStZ1rKj9tDtnY2OD3e/fY398nhAAIMpHKMpHIp4Dl977ceBrg1Wea3wA3gJsPh6ocEOvVIpkfB+aL/bvAz0AH6E/G+l/J23lk4gYAJAAAAABJRU5ErkJggg==
###PACKDATA,FILE_END,/pluginbuddy/images/draghandle.png,importbuddy/pluginbuddy/images/draghandle.png
###PACKDATA,FILE_START,/pluginbuddy/images/email.png,importbuddy/pluginbuddy/images/email.png
iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAITSURBVBgZpcHLThNhGIDh9/vn7/RApwc5VCmFWBPi1mvwAlx7BW69Afeu3bozcSE7E02ILjCRhRrds8AEbKVS2gIdSjvTmf+TYqLu+zyiqszDMCf75PnnnVwhuNcLpwsXk8Q4BYeSOsWpkqrinJI6JXVK6lSRdDq9PO+19vb37XK13Hj0YLMUTVVyWY//Cf8IVwQEGEeJN47S1YdPo4npDpNmnDh5udOh1YsZRcph39EaONpnjs65oxsqvZEyTaHdj3n2psPpKDLBcuOOGUWpZDOG+q0S7751ObuYUisJGQ98T/Ct4Fuo5IX+MGZr95jKjRKLlSxXxFxOEmaaN4us1Upsf+1yGk5ZKhp8C74H5ZwwCGO2drssLZZo1ouIcs2MJikz1oPmapHlaoFXH1oMwphyTghyQj+MefG+RblcoLlaJG/5y4zGCTMikEwTctaxXq/w9kuXdm9Cuzfh9acujXqFwE8xmuBb/hCwl1GKAnGccDwIadQCfD9DZ5Dj494QA2w2qtQW84wmMZ1eyFI1QBVQwV5GiaZOpdsPaSwH5HMZULi9UmB9pYAAouBQbMHHrgQcnQwZV/KgTu1o8PMgipONu2t5KeaNiEkxgAiICDMCCFeEK5aNauAOfoXx8KR9ZOOLk8P7j7er2WBhwWY9sdbDeIJnwBjBWBBAhGsCmiZxPD4/7Z98b/0QVWUehjkZ5vQb/Un5e/DIsVsAAAAASUVORK5CYII=
###PACKDATA,FILE_END,/pluginbuddy/images/email.png,importbuddy/pluginbuddy/images/email.png
###PACKDATA,FILE_START,/pluginbuddy/images/feed.png,importbuddy/pluginbuddy/images/feed.png
iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAJFSURBVBgZBcHda5V1AADg5/d733Oc7tjOaNs5GC6KdrEwmpPRxG7spoKghOim7oK8y0MIEQRL+geGEIQ3UXQvSJ8IafZxUbjQhRDZoU60iYsSc9t5v87b84TsVe3mrBWpHoCICIAIACixYTUfOJM2Z62YO97TOULSIKaEQAyESAzEgISAgLpi48de87MLUqmezhGyhO4SCW7f4O81YiSJiCQIkbqmNcXMIjMXeilIGsQxDp8AnKDY5teL3PyU6h4CdY3Av7cYu58R0QghZWeT9fP0v2V7i8Y4j77As2c5sAwIFAXDgjInJxURAzub/PwxMZBGphZYeIWJWZ44xdo5bl4kK8kzioohUUREd4kXP+Kpd3nkee72+epNBleAxdfoLJBlDEuKkpxoBAkBjXGm53n8ZZ45S/shrr7P75eBo6eo9zAsKCqGRBEB/1zj89e5eo7tLRr7ePJtWg9wZZV7t2i2OPQcw5JiRE4UESN1ZPc2g0tceos/LtPYx9HTaPDNe8Dhl9gtyStyUiMIJDXLp2m0GHzN2gdMzdPq0F3k+pcc/4+x/UwepKzIiSDWTB/iwBLT8xw8xt07rJ8HHj7GbkX/B+DBxyhrciIQ2N2i2AG2fiPL+OsXoNVlWPDnDaC5l6qiJJWjLlHxxRs0JhhcIyvp/8SHJylKdiu++4Tr31NW7B8nkrwzp627d9nkHM0Wsea+GSY6tDvESEyY6TIxyZ4GSUp/nTubqyF7WrvZtaKrZ4QSQ+TIMUSJHCVypGhaHW448z+h1tLAgvKk7gAAAABJRU5ErkJggg==
###PACKDATA,FILE_END,/pluginbuddy/images/feed.png,importbuddy/pluginbuddy/images/feed.png
###PACKDATA,FILE_START,/pluginbuddy/images/index.php,importbuddy/pluginbuddy/images/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/pluginbuddy/images/index.php,importbuddy/pluginbuddy/images/index.php
###PACKDATA,FILE_START,/pluginbuddy/images/pluginbuddy.png,importbuddy/pluginbuddy/images/pluginbuddy.png
iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAACXBIWXMAAAsTAAALEwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj333vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEsDIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIeEeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAnf+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJV2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHgg/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/AV/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQWHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAARKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGyUT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPEbDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhMWE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPENyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2htlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHKCpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2epO6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIpG6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3nU9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYPjGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLnm+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cRp7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0HDYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dnF2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofcn8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJgUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5pDoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85ry1KNSo+qi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/RNtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQrAVZLQq2QqboVFoo1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9rGo5sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWFfevc1+1dT1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTPZtJm6ebeLZ5bDpaql+aXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJzs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3SPVRSj9Yr60cOxx++/p3vdy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtbYlu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ752PO32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7nLuarrlca7nuer21e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9DBY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i/suuFxYvfvjV69fO0ZjRoZfyl5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8IH8o/2j5sfVT0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADqYAAAOpgAABdvkl/FRgAAAktJREFUeNp0k01IVFEUx3/3vfvmzTjKmKNp2ARiioG4C8IWJURE5EYXgxu3UotqVcvAtlG0cVGk0FLBoE3QStpUCy2SCgwiUJNxPswZdb7ee6fFvBmdyf5w4Z57Pvif/7lHxeNxG2gFwoDBIYR6qCN3DzgAdjQQmbn7aikcLA0oKyYgCIJtK0Q1AQoleYpFF4UCFFJeV4WS3ph6PH5eA6GAdrvNjjuY7bcUCEoJu04nq5s/EYRzXTHa7Z1Ksijc9HOC249OA03ap61E97jK7jerHGeXU8wuRxGBsUGP6ZGBWh9i9bqACRi62q9Isa7hJx9/s57LA5BaCXD/YhfhgC+DV6jF1UTTZr1ikdDh3bYgZB1qaB6JNRo1/vWnjACzo71MDEa50dfK/HgfSlV8jfPQDaPi5ustVjNphmPN9LdVaDxb2WZs4QdDbVHeTJ6pi9eNZEZ6DN5tlln4toOhMr5AirBV8VUejLosAXDLWRMnyb3hIHPXbZq1hSfgCQSNADNXQ9wbDoGTxHOy1QqigVKhpLetxMOWYmYOiwLXYovO2VZXf06GAaG7ZZ8L7XnXW7tilr0AlDdUvmglgIIGcpupyNypaHZCJG0pxH3/YWp+L/fgNvSeAIUqbOx8fTv9NDKQjQvKVCpY3kq3LAJ7Kh6Pm0CTvwsm4AAdS0OTSwmnIwrQqZPpy19eXgJSvm4usA8cVI2cf2qjT5Y6bUyn8pFKJwPAHpBonJrB8TgIeplPVSMgu9/97fsH+j8FsqNrL8aBZt/eB3aPC/w7AI6b1V5KLAy/AAAAAElFTkSuQmCC
###PACKDATA,FILE_END,/pluginbuddy/images/pluginbuddy.png,importbuddy/pluginbuddy/images/pluginbuddy.png
###PACKDATA,FILE_START,/pluginbuddy/images/pluginbuddy_play.png,importbuddy/pluginbuddy/images/pluginbuddy_play.png
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAB7klEQVR42oWRT4gSURzHZ9u9tKmHos4WBB0VscPSEuEloot2yEsHIRE8hEIHQbBUEFSQQVBQ0EMHRRAvoh78OySMBMqSYKh7URDZg6mYLrK6r28DbjPTxn7gc3nz+7z3Zoa6jmq1+gi+hK/hE3iLuolisfgC0t9At9v90e/3u01QKpVqhULhzX/DXC5nZBiGnc1mUyJitVr9ajQazXQ6/RGjwltkMpnn5XK5sdlsLnbBdrslfC4BNjiJRCLvkexfxYlEIjCZTH7yh7PZLFksFuIbnKdSKUYul9/nwlgs9gDXYYmIaDRK4vE4GY/HgvVarfbdaDS+RXpAhUKh40ql0hbHwWCQ+P1+EggESLv993Gr1To1mUyfEEspDBzl8/l/Yq/XS1wuFyc2v1pnWfZUr9d7EN+j3G63FLvXLwE/djqdxOFwcKfySSaTLbVa/YGL/2Cz2T73er0z/pDP5yODwUAQjkajqcFgyCHRwDtcbLFYFDipPp/Pz3eDy+VSEK7X6wu8CotT/UgeC34XvuA7u91e73Q6Z0TEcDicejyehkaj+YLRZ1ACBezpdLojfAzabDYzNE03w+HwidVq/arVarMKhcKHmWN4F+5BMdzioUQikatUKp1SqTTIZLJXWHsKH0LpLryJfXgbHsKD66Lfk7TS2QhfFGsAAAAASUVORK5CYII=
###PACKDATA,FILE_END,/pluginbuddy/images/pluginbuddy_play.png,importbuddy/pluginbuddy/images/pluginbuddy_play.png
###PACKDATA,FILE_START,/pluginbuddy/images/pluginbuddy_tip.png,importbuddy/pluginbuddy/images/pluginbuddy_tip.png
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAB/ElEQVR42n2RPYgaQRiG585rclGLhKQ2gYOUipjiyBGCTQhpNEVsrhAigsWhkEKwSEQQjCBroSBiYQpFEBv/Cn+XCLsElOMCBvUaFYWARoXgKSc3eVlQ9jY/LzwwzHzPzDczJJPJCOTzeVIqlQRqtdpj8BK8Bk/AfrFYJOl0mogjlV8A5ivS6XS+93q9ThMpl8t1yG/+J1tYluXm8/mMSrJcLn/xPN+E/B7KvlR+XqlU+M1mc03/kRsEG5xHIpF30GSCHIvFSCKRCEyn05/bwsFgQLPZLI3H4xQ3EHdwlUqlWJVK9WArP0Q7HBUll8sJTCYTGo1G6Xg83q3V6/ULi8XyFuoBCYVCJ9Vq9ZtYXq1WdDgcChsEg0G6WCx2a61W69JqtX6ArCB+v/+4UChAvhWhXWxM+/0+FYfjuEuTyeSFfJ94PB5FIBBo3CCiGqFVdESlSSaTLZ1Od7aVidPp/Njtdn+Ii/Bt1OVy3RJHo9HMbDbnIerBXWK32wlQu93uBu52JS7GD+zG6/X62ufzcTjVD/EIyLYywQue4qRGu93edSD6upnX6+X1ev1nSM+AnEiyZzQaj/EYjM1mYxmGaYbD4XOHw/HFYDBk1Wr1J9ScgHtgD0gjTB7K5XKVVqs1ajQas1KpfIW5p+ARUEjEPwOZIDJwBxyCg79JvwFn8/sITKnYXQAAAABJRU5ErkJggg==
###PACKDATA,FILE_END,/pluginbuddy/images/pluginbuddy_tip.png,importbuddy/pluginbuddy/images/pluginbuddy_tip.png
###PACKDATA,FILE_START,/pluginbuddy/images/rawr.gif,importbuddy/pluginbuddy/images/rawr.gif
R0lGODlhLwA9ALMAAP//////AMbGxgDXAP8AAABLAL0AAFkAAAAAAP///wAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEAAAAh+QQJBQAJACwKAA4AHAAqAAAEzTAlNKm8OGtJ7f5fN2FIWYKZ2JVC25rhZVqmC6e0TApsH+c7l+3HSbUIAiRPoyoGhUvcaZQKIKxYT0onnU2ZTqlhfNuGL4UrYmxQb7TfwqDAy0ZJb4R8joDqZ2cZe3w2cgUyWhqDcwWNe4coaAOTlJWUkJGLlpWYKJqbk50gn6CiH6SbphuolqqKoKmRkrChsrO0rqu0tbYSrLkhpGm9OpqHibIWjo1cvch4xM/NydS20tDVkdfYKNscXyFlYCJEVGbkb0XPOddA6d7cFxEAIfkECRQACQAsCAAJABwAKgAABM0wJTSpvDhrSe3+XzdhSFmCmdiVQtua4WVapguntEwKbB/nO5ftx0m1CAIkT6MqBoVL3GmUCiCsWE9KJ51NmU6pYXzbhi+HK2JsUG+03wPhwMtGSW+EfI6A6mdnGXt8NnIHMloag3MHjXuHKGgEk5SVlJCRi5aVmCiam5OdIJ+goh+km6YbqJaqiqCpkZKwobKztK6rtLW2Eqy5IaRpvTqah4myFo6NXL3IeMTPzcnUttLQ1ZHX2CjbHF8hZWAiRFRm5G9FzznXQOne3BcRACH5BAkFAAkALAkADAAcACoAAATNMCU0qbw4a0nt/l83YUhZgpnYlULbmuFlWqYLp7RMCmwf5zuX7cdJtQgCJE+jKgaFS9xplAogrFhPSiedTZlOqWF824YvhStibFBvtN/CoMDLRklvhHyOgOpnZxl7fDZyBTJaGoNzBY17hyhoA5OUlZSQkYuWlZgompuTnSCfoKIfpJumG6iWqoqgqZGSsKGys7Suq7S1thKsuSGkab06moeJshaOjVy9yHjEz83J1LbS0NWR19go2xxfIWVgIkRUZuRvRc8510Dp3twXEQAh+QQJFAAJACwIABIAIAAoAAAExBClJKe9OGtZUdUg6I1hGXoZN3Lm9bmIIMuoqb7TOJNibuEUgUcYA/4oGFxstisBlTKCQCoUrV5YZjP5MXavvNwz9QsgzOiO8SQ+u1FrZ+JQXBFboAPhoKXhNXp7dDsHdH8YgQSChYEHhxeJipKSjo9zk5iTlYeRmZSWnZ57oKKYm3+hnqd4qZmrLa2mlpelo7Oxiq+stba3pbp/CKmGsz6dlXE2E4yFLrPJPpbQSNIt02TKj2EbK3gka3DRJyzWweJyJREAOw==
###PACKDATA,FILE_END,/pluginbuddy/images/rawr.gif,importbuddy/pluginbuddy/images/rawr.gif
###PACKDATA,FILE_START,/pluginbuddy/images/twitter.png,importbuddy/pluginbuddy/images/twitter.png
iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACiUlEQVR42pWTTWgTQRTH/7MfadLUmoZqjURoq1i0gaBBKSKoCKKipadevHnwoBcvgiC6Sw8KWmitoFDRg3joQYKIYKUqKghFLW0pQVraWEpCWVOTpjabj83uOjNpQipV8M/s7syb937z5s0sOfpiNrjdLT9fyBSbBUJAG0TQh3VKjdrYe712uMR5LVvsIofCM8p4MqeaNiALBKIg0C8g8UBAoGMCuwSsUo1I0OyWVNL6NKJEV/IqC5T0HHbOx6m7jR9tLZDcDhBmp2MeXgVhC9bLgkp8jyeVxdW8SkQRAZeNqyEPd+gdSyNOQ1kMy4ZlUq20YaHBQQFNg2OKlimooIDOls24tn8rd7j1Nor3s6lKTZjEehdkbx3NB1jUi9jmFFXivf9FSeoMIKC7bQv6jzRz58noTyRS2XWrzmsrGIxnkHTI0IsWGmsowHNvVFnOUgChgL1NGDjWin/p4ps5hKNJ3vewGtT1fVJW84bKDN3tPgwc3/XX4KWsgbPhCL6nc3xcxwCuOx+VXBkQ8OHuiTY+eWVkBh9iaZRrt1owkcqbMC27AnQxgOPmO8XIFzmga08THnQG+GTPy294MrcEg5asYFobZuSQKEDqGVFMw+QA3yYnvl46DHYjl2m66rMIprVM1RYKiEkmPdPSfRAZQLg+rNiWpZadek+349w+/4YrGjSTU49GEUn84mMiUoD7xislu7YFJqckYKAriDO0oBvp/NAYhqc13pdleozB2yN9U1rm8p+OIX8DOlq8FChWbPFlHUMTMWCtjrsbXf1kdCZmn3z4GSsFG/+jepng9YWDIFpiKTU+MemZml2AruucLgjst15/923bgsWOkNavtrYW7a1+dBwI4TeMlfCatrT3RgAAAABJRU5ErkJggg==
###PACKDATA,FILE_END,/pluginbuddy/images/twitter.png,importbuddy/pluginbuddy/images/twitter.png
###PACKDATA,FILE_START,/pluginbuddy/js/admin.js,importbuddy/pluginbuddy/js/admin.js
alF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHsKCQoJalF1ZXJ5KCcucGJfZGVidWdfc2hvdycpLmNsaWNrKGZ1bmN0aW9uKGUpIHsKCQlqUXVlcnkodGhpcykuaGlkZSgpOwoJCWpRdWVyeSh0aGlzKS5wYXJlbnQoKS5jaGlsZHJlbiggJy5wYl9kZWJ1Z19oaWRlJykuc2hvdygpOwoJCWpRdWVyeSh0aGlzKS5wYXJlbnQoKS5jc3MoICdmbG9hdCcsICdsZWZ0JyApOwoJCWpRdWVyeSh0aGlzKS5wYXJlbnQoKS5jc3MoICd3aWR0aCcsICc4MCUnICk7CgkJalF1ZXJ5KHRoaXMpLnBhcmVudCgpLmNoaWxkcmVuKCAnZGl2Jykuc2hvdygpOwoJfSk7CglqUXVlcnkoJy5wYl9kZWJ1Z19oaWRlJykuY2xpY2soZnVuY3Rpb24oZSkgewoJCWpRdWVyeSh0aGlzKS5oaWRlKCk7CgkJalF1ZXJ5KHRoaXMpLnBhcmVudCgpLmNoaWxkcmVuKCAnLnBiX2RlYnVnX3Nob3cnKS5zaG93KCk7CgkJalF1ZXJ5KHRoaXMpLnBhcmVudCgpLmNzcyggJ2Zsb2F0JywgJ3JpZ2h0JyApOwoJCWpRdWVyeSh0aGlzKS5wYXJlbnQoKS5jc3MoICd3aWR0aCcsICc0MHB4JyApOwoJCWpRdWVyeSh0aGlzKS5wYXJlbnQoKS5jaGlsZHJlbiggJ2RpdicpLmhpZGUoKTsKCX0pOwoKCQoJalF1ZXJ5KCcucGx1Z2luYnVkZHlfdGlwJykudG9vbHRpcCh7IAoJCXRyYWNrOiB0cnVlLCAKCQlkZWxheTogMCwgCgkJc2hvd1VSTDogZmFsc2UsIAoJCXNob3dCb2R5OiAiIC0gIiwgCgkJZmFkZTogMjUwIAoJfSk7CgkKCWlmICh0eXBlb2YgalF1ZXJ5LnRhYmxlRG5EICE9PSAndW5kZWZpbmVkJykgeyAvLyBJZiB0YWJsZURuRCBmdW5jdGlvbiBsb2FkZWQuCgkJalF1ZXJ5KCcucGJfcmVvcmRlcicpLnRhYmxlRG5EKHsKCQkJb25Ecm9wOiBmdW5jdGlvbih0Ym9keSwgcm93KSB7CgkJCQl2YXIgbmV3X29yZGVyID0gbmV3IEFycmF5KCk7CgkJCQl2YXIgcm93cyA9IHRib2R5LnJvd3M7CgkJCQlmb3IgKHZhciBpPTA7IGk8cm93cy5sZW5ndGg7IGkrKykgewoJCQkJCW5ld19vcmRlci5wdXNoKCByb3dzW2ldLmlkLnN1YnN0cmluZygxMSkgKTsKCQkJCX0KCQkJCW5ld19vcmRlciA9IG5ld19vcmRlci5qb2luKCAnLCcgKTsKCQkJCWpRdWVyeSggJyNwYl9vcmRlcicgKS52YWwoIG5ld19vcmRlciApCgkJCX0sCgkJCWRyYWdIYW5kbGU6ICJwYl9kcmFnaGFuZGxlIgoJCX0pOwoJfQoJCglqUXVlcnkoJy5wYl90b2dnbGUnKS5jbGljayhmdW5jdGlvbihlKSB7CgkJalF1ZXJ5KCAnI3BiX3RvZ2dsZS0nICsgalF1ZXJ5KHRoaXMpLmF0dHIoJ2lkJykgKS5zbGlkZVRvZ2dsZSgpOwoJfSk7CgkKCQoJCgkvLyBIaWRlIGEgZGlzbWlzc2FibGUgYWxlcnQgYW5kIHNlbmQgQUpBWCBjYWxsIHNvIGl0IHdvbid0IGJlIHNob3duIGluIHRoZSBmdXR1cmUuCglqUXVlcnkoICcucGJfYmFja3VwYnVkZHlfZGlzYWxlcnQnICkuY2xpY2soIGZ1bmN0aW9uKGUpIHsKCQkKCQl2YXIgdGhpc191bmlxdWVfaWQgPSBqUXVlcnkodGhpcykucGFyZW50cygnLnBiX2JhY2t1cGJ1ZGR5X2FsZXJ0JykuYXR0cigncmVsJyk7CgkJdmFyIHRoaXNfZGlzYWxlcnRfdXJsID0galF1ZXJ5KHRoaXMpLmF0dHIoJ2FsdCcpOwoJCS8vYWxlcnQoIHVuaXF1ZV9pZCApOwoJCQoJCWpRdWVyeS5wb3N0KCB0aGlzX2Rpc2FsZXJ0X3VybCwKCQkJeyB1bmlxdWVfaWQ6IHRoaXNfdW5pcXVlX2lkIH0sIAoJCQlmdW5jdGlvbihkYXRhKSB7CgkJCQlkYXRhID0galF1ZXJ5LnRyaW0oIGRhdGEgKTsKCQkJCWlmICggZGF0YSAhPSAnMScgKSB7CgkJCQkJYWxlcnQoICdFcnJvciBzYXZpbmcgZGlzbWlzc2FsLiBUaGUgYWxlcnQgbWF5IHJldHVybi4gRXJyb3I6ICcgKyBkYXRhICk7CgkJCQl9CgkJCX0KCQkpOwoJCQoJCWpRdWVyeSh0aGlzKS5wYXJlbnRzKCcucGJfYmFja3VwYnVkZHlfYWxlcnQnKS5zbGlkZVVwKCk7CgkJCgl9KTsKCQoJCgkKfSk7
###PACKDATA,FILE_END,/pluginbuddy/js/admin.js,importbuddy/pluginbuddy/js/admin.js
###PACKDATA,FILE_START,/pluginbuddy/js/index.php,importbuddy/pluginbuddy/js/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/pluginbuddy/js/index.php,importbuddy/pluginbuddy/js/index.php
###PACKDATA,FILE_START,/pluginbuddy/js/jquery.miniColors.min.js,importbuddy/pluginbuddy/js/jquery.miniColors.min.js

###PACKDATA,FILE_END,/pluginbuddy/js/jquery.miniColors.min.js,importbuddy/pluginbuddy/js/jquery.miniColors.min.js
###PACKDATA,FILE_START,/pluginbuddy/js/tablednd.js,importbuddy/pluginbuddy/js/tablednd.js

###PACKDATA,FILE_END,/pluginbuddy/js/tablednd.js,importbuddy/pluginbuddy/js/tablednd.js
###PACKDATA,FILE_START,/pluginbuddy/js/tooltip.js,importbuddy/pluginbuddy/js/tooltip.js
LyoKICogalF1ZXJ5IFRvb2x0aXAgcGx1Z2luIDEuMwogKgogKiBodHRwOi8vYmFzc2lzdGFuY2UuZGUvanF1ZXJ5LXBsdWdpbnMvanF1ZXJ5LXBsdWdpbi10b29sdGlwLwogKiBodHRwOi8vZG9jcy5qcXVlcnkuY29tL1BsdWdpbnMvVG9vbHRpcAogKgogKiBDb3B5cmlnaHQgKGMpIDIwMDYgLSAyMDA4IErDtnJuIFphZWZmZXJlcgogKgogKiAkSWQ6IGpxdWVyeS50b29sdGlwLmpzIDU3NDEgMjAwOC0wNi0yMSAxNToyMjoxNlogam9lcm4uemFlZmZlcmVyICQKICogCiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBhbmQgR1BMIGxpY2Vuc2VzOgogKiAgIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwCiAqICAgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2dwbC5odG1sCiAqLzsoZnVuY3Rpb24oJCl7dmFyIGhlbHBlcj17fSxjdXJyZW50LHRpdGxlLHRJRCxJRT0kLmJyb3dzZXIubXNpZSYmL01TSUVccyg1XC41fDZcLikvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksdHJhY2s9ZmFsc2U7JC50b29sdGlwPXtibG9ja2VkOmZhbHNlLGRlZmF1bHRzOntkZWxheToyMDAsZmFkZTpmYWxzZSxzaG93VVJMOnRydWUsZXh0cmFDbGFzczoiIix0b3A6MTUsbGVmdDoxNSxpZDoidG9vbHRpcCJ9LGJsb2NrOmZ1bmN0aW9uKCl7JC50b29sdGlwLmJsb2NrZWQ9ISQudG9vbHRpcC5ibG9ja2VkO319OyQuZm4uZXh0ZW5kKHt0b29sdGlwOmZ1bmN0aW9uKHNldHRpbmdzKXtzZXR0aW5ncz0kLmV4dGVuZCh7fSwkLnRvb2x0aXAuZGVmYXVsdHMsc2V0dGluZ3MpO2NyZWF0ZUhlbHBlcihzZXR0aW5ncyk7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpeyQuZGF0YSh0aGlzLCJ0b29sdGlwIixzZXR0aW5ncyk7dGhpcy50T3BhY2l0eT1oZWxwZXIucGFyZW50LmNzcygib3BhY2l0eSIpO3RoaXMudG9vbHRpcFRleHQ9dGhpcy50aXRsZTskKHRoaXMpLnJlbW92ZUF0dHIoInRpdGxlIik7dGhpcy5hbHQ9IiI7fSkubW91c2VvdmVyKHNhdmUpLm1vdXNlb3V0KGhpZGUpLmNsaWNrKGhpZGUpO30sZml4UE5HOklFP2Z1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBpbWFnZT0kKHRoaXMpLmNzcygnYmFja2dyb3VuZEltYWdlJyk7aWYoaW1hZ2UubWF0Y2goL151cmxcKFsiJ10/KC4qXC5wbmcpWyInXT9cKSQvaSkpe2ltYWdlPVJlZ0V4cC4kMTskKHRoaXMpLmNzcyh7J2JhY2tncm91bmRJbWFnZSc6J25vbmUnLCdmaWx0ZXInOiJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGFJbWFnZUxvYWRlcihlbmFibGVkPXRydWUsIHNpemluZ01ldGhvZD1jcm9wLCBzcmM9JyIraW1hZ2UrIicpIn0pLmVhY2goZnVuY3Rpb24oKXt2YXIgcG9zaXRpb249JCh0aGlzKS5jc3MoJ3Bvc2l0aW9uJyk7aWYocG9zaXRpb24hPSdhYnNvbHV0ZScmJnBvc2l0aW9uIT0ncmVsYXRpdmUnKSQodGhpcykuY3NzKCdwb3NpdGlvbicsJ3JlbGF0aXZlJyk7fSk7fX0pO306ZnVuY3Rpb24oKXtyZXR1cm4gdGhpczt9LHVuZml4UE5HOklFP2Z1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpeyQodGhpcykuY3NzKHsnZmlsdGVyJzonJyxiYWNrZ3JvdW5kSW1hZ2U6Jyd9KTt9KTt9OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXM7fSxoaWRlV2hlbkVtcHR5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpeyQodGhpcylbJCh0aGlzKS5odG1sKCk/InNob3ciOiJoaWRlIl0oKTt9KTt9LHVybDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmF0dHIoJ2hyZWYnKXx8dGhpcy5hdHRyKCdzcmMnKTt9fSk7ZnVuY3Rpb24gY3JlYXRlSGVscGVyKHNldHRpbmdzKXtpZihoZWxwZXIucGFyZW50KXJldHVybjtoZWxwZXIucGFyZW50PSQoJzxkaXYgaWQ9Iicrc2V0dGluZ3MuaWQrJyI+PGgzPjwvaDM+PGRpdiBjbGFzcz0iYm9keSI+PC9kaXY+PGRpdiBjbGFzcz0idXJsIj48L2Rpdj48L2Rpdj4nKS5hcHBlbmRUbyhkb2N1bWVudC5ib2R5KS5oaWRlKCk7aWYoJC5mbi5iZ2lmcmFtZSloZWxwZXIucGFyZW50LmJnaWZyYW1lKCk7aGVscGVyLnRpdGxlPSQoJ2gzJyxoZWxwZXIucGFyZW50KTtoZWxwZXIuYm9keT0kKCdkaXYuYm9keScsaGVscGVyLnBhcmVudCk7aGVscGVyLnVybD0kKCdkaXYudXJsJyxoZWxwZXIucGFyZW50KTt9ZnVuY3Rpb24gc2V0dGluZ3MoZWxlbWVudCl7cmV0dXJuICQuZGF0YShlbGVtZW50LCJ0b29sdGlwIik7fWZ1bmN0aW9uIGhhbmRsZShldmVudCl7aWYoc2V0dGluZ3ModGhpcykuZGVsYXkpdElEPXNldFRpbWVvdXQoc2hvdyxzZXR0aW5ncyh0aGlzKS5kZWxheSk7ZWxzZQpzaG93KCk7dHJhY2s9ISFzZXR0aW5ncyh0aGlzKS50cmFjazskKGRvY3VtZW50LmJvZHkpLmJpbmQoJ21vdXNlbW92ZScsdXBkYXRlKTt1cGRhdGUoZXZlbnQpO31mdW5jdGlvbiBzYXZlKCl7aWYoJC50b29sdGlwLmJsb2NrZWR8fHRoaXM9PWN1cnJlbnR8fCghdGhpcy50b29sdGlwVGV4dCYmIXNldHRpbmdzKHRoaXMpLmJvZHlIYW5kbGVyKSlyZXR1cm47Y3VycmVudD10aGlzO3RpdGxlPXRoaXMudG9vbHRpcFRleHQ7aWYoc2V0dGluZ3ModGhpcykuYm9keUhhbmRsZXIpe2hlbHBlci50aXRsZS5oaWRlKCk7dmFyIGJvZHlDb250ZW50PXNldHRpbmdzKHRoaXMpLmJvZHlIYW5kbGVyLmNhbGwodGhpcyk7aWYoYm9keUNvbnRlbnQubm9kZVR5cGV8fGJvZHlDb250ZW50LmpxdWVyeSl7aGVscGVyLmJvZHkuZW1wdHkoKS5hcHBlbmQoYm9keUNvbnRlbnQpfWVsc2V7aGVscGVyLmJvZHkuaHRtbChib2R5Q29udGVudCk7fWhlbHBlci5ib2R5LnNob3coKTt9ZWxzZSBpZihzZXR0aW5ncyh0aGlzKS5zaG93Qm9keSl7dmFyIHBhcnRzPXRpdGxlLnNwbGl0KHNldHRpbmdzKHRoaXMpLnNob3dCb2R5KTtoZWxwZXIudGl0bGUuaHRtbChwYXJ0cy5zaGlmdCgpKS5zaG93KCk7aGVscGVyLmJvZHkuZW1wdHkoKTtmb3IodmFyIGk9MCxwYXJ0OyhwYXJ0PXBhcnRzW2ldKTtpKyspe2lmKGk+MCloZWxwZXIuYm9keS5hcHBlbmQoIjxici8+Iik7aGVscGVyLmJvZHkuYXBwZW5kKHBhcnQpO31oZWxwZXIuYm9keS5oaWRlV2hlbkVtcHR5KCk7fWVsc2V7aGVscGVyLnRpdGxlLmh0bWwodGl0bGUpLnNob3coKTtoZWxwZXIuYm9keS5oaWRlKCk7fWlmKHNldHRpbmdzKHRoaXMpLnNob3dVUkwmJiQodGhpcykudXJsKCkpaGVscGVyLnVybC5odG1sKCQodGhpcykudXJsKCkucmVwbGFjZSgnaHR0cDovLycsJycpKS5zaG93KCk7ZWxzZQpoZWxwZXIudXJsLmhpZGUoKTtoZWxwZXIucGFyZW50LmFkZENsYXNzKHNldHRpbmdzKHRoaXMpLmV4dHJhQ2xhc3MpO2lmKHNldHRpbmdzKHRoaXMpLmZpeFBORyloZWxwZXIucGFyZW50LmZpeFBORygpO2hhbmRsZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fWZ1bmN0aW9uIHNob3coKXt0SUQ9bnVsbDtpZigoIUlFfHwhJC5mbi5iZ2lmcmFtZSkmJnNldHRpbmdzKGN1cnJlbnQpLmZhZGUpe2lmKGhlbHBlci5wYXJlbnQuaXMoIjphbmltYXRlZCIpKWhlbHBlci5wYXJlbnQuc3RvcCgpLnNob3coKS5mYWRlVG8oc2V0dGluZ3MoY3VycmVudCkuZmFkZSxjdXJyZW50LnRPcGFjaXR5KTtlbHNlCmhlbHBlci5wYXJlbnQuaXMoJzp2aXNpYmxlJyk/aGVscGVyLnBhcmVudC5mYWRlVG8oc2V0dGluZ3MoY3VycmVudCkuZmFkZSxjdXJyZW50LnRPcGFjaXR5KTpoZWxwZXIucGFyZW50LmZhZGVJbihzZXR0aW5ncyhjdXJyZW50KS5mYWRlKTt9ZWxzZXtoZWxwZXIucGFyZW50LnNob3coKTt9dXBkYXRlKCk7fWZ1bmN0aW9uIHVwZGF0ZShldmVudCl7aWYoJC50b29sdGlwLmJsb2NrZWQpcmV0dXJuO2lmKGV2ZW50JiZldmVudC50YXJnZXQudGFnTmFtZT09Ik9QVElPTiIpe3JldHVybjt9aWYoIXRyYWNrJiZoZWxwZXIucGFyZW50LmlzKCI6dmlzaWJsZSIpKXskKGRvY3VtZW50LmJvZHkpLnVuYmluZCgnbW91c2Vtb3ZlJyx1cGRhdGUpfWlmKGN1cnJlbnQ9PW51bGwpeyQoZG9jdW1lbnQuYm9keSkudW5iaW5kKCdtb3VzZW1vdmUnLHVwZGF0ZSk7cmV0dXJuO31oZWxwZXIucGFyZW50LnJlbW92ZUNsYXNzKCJ2aWV3cG9ydC1yaWdodCIpLnJlbW92ZUNsYXNzKCJ2aWV3cG9ydC1ib3R0b20iKTt2YXIgbGVmdD1oZWxwZXIucGFyZW50WzBdLm9mZnNldExlZnQ7dmFyIHRvcD1oZWxwZXIucGFyZW50WzBdLm9mZnNldFRvcDtpZihldmVudCl7bGVmdD1ldmVudC5wYWdlWCtzZXR0aW5ncyhjdXJyZW50KS5sZWZ0O3RvcD1ldmVudC5wYWdlWStzZXR0aW5ncyhjdXJyZW50KS50b3A7dmFyIHJpZ2h0PSdhdXRvJztpZihzZXR0aW5ncyhjdXJyZW50KS5wb3NpdGlvbkxlZnQpe3JpZ2h0PSQod2luZG93KS53aWR0aCgpLWxlZnQ7bGVmdD0nYXV0byc7fWhlbHBlci5wYXJlbnQuY3NzKHtsZWZ0OmxlZnQscmlnaHQ6cmlnaHQsdG9wOnRvcH0pO312YXIgdj12aWV3cG9ydCgpLGg9aGVscGVyLnBhcmVudFswXTtpZih2Lngrdi5jeDxoLm9mZnNldExlZnQraC5vZmZzZXRXaWR0aCl7bGVmdC09aC5vZmZzZXRXaWR0aCsyMCtzZXR0aW5ncyhjdXJyZW50KS5sZWZ0O2hlbHBlci5wYXJlbnQuY3NzKHtsZWZ0OmxlZnQrJ3B4J30pLmFkZENsYXNzKCJ2aWV3cG9ydC1yaWdodCIpO31pZih2Lnkrdi5jeTxoLm9mZnNldFRvcCtoLm9mZnNldEhlaWdodCl7dG9wLT1oLm9mZnNldEhlaWdodCsyMCtzZXR0aW5ncyhjdXJyZW50KS50b3A7aGVscGVyLnBhcmVudC5jc3Moe3RvcDp0b3ArJ3B4J30pLmFkZENsYXNzKCJ2aWV3cG9ydC1ib3R0b20iKTt9fWZ1bmN0aW9uIHZpZXdwb3J0KCl7cmV0dXJue3g6JCh3aW5kb3cpLnNjcm9sbExlZnQoKSx5OiQod2luZG93KS5zY3JvbGxUb3AoKSxjeDokKHdpbmRvdykud2lkdGgoKSxjeTokKHdpbmRvdykuaGVpZ2h0KCl9O31mdW5jdGlvbiBoaWRlKGV2ZW50KXtpZigkLnRvb2x0aXAuYmxvY2tlZClyZXR1cm47aWYodElEKWNsZWFyVGltZW91dCh0SUQpO2N1cnJlbnQ9bnVsbDt2YXIgdHNldHRpbmdzPXNldHRpbmdzKHRoaXMpO2Z1bmN0aW9uIGNvbXBsZXRlKCl7aGVscGVyLnBhcmVudC5yZW1vdmVDbGFzcyh0c2V0dGluZ3MuZXh0cmFDbGFzcykuaGlkZSgpLmNzcygib3BhY2l0eSIsIiIpO31pZigoIUlFfHwhJC5mbi5iZ2lmcmFtZSkmJnRzZXR0aW5ncy5mYWRlKXtpZihoZWxwZXIucGFyZW50LmlzKCc6YW5pbWF0ZWQnKSloZWxwZXIucGFyZW50LnN0b3AoKS5mYWRlVG8odHNldHRpbmdzLmZhZGUsMCxjb21wbGV0ZSk7ZWxzZQpoZWxwZXIucGFyZW50LnN0b3AoKS5mYWRlT3V0KHRzZXR0aW5ncy5mYWRlLGNvbXBsZXRlKTt9ZWxzZQpjb21wbGV0ZSgpO2lmKHNldHRpbmdzKHRoaXMpLmZpeFBORyloZWxwZXIucGFyZW50LnVuZml4UE5HKCk7fX0pKGpRdWVyeSk7
###PACKDATA,FILE_END,/pluginbuddy/js/tooltip.js,importbuddy/pluginbuddy/js/tooltip.js
###PACKDATA,FILE_START,/pluginbuddy/lib/index.php,importbuddy/pluginbuddy/lib/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/pluginbuddy/lib/index.php,importbuddy/pluginbuddy/lib/index.php
###PACKDATA,FILE_START,/pluginbuddy/images/minicolors/circle.gif,importbuddy/pluginbuddy/images/minicolors/circle.gif
R0lGODlhCwALAJECAAAAAP///////wAAACH5BAEAAAIALAAAAAALAAsAAAIflINoG+AeGFgGxEaXxVns2X2dh4CZJXBadDxQlihGAQA7
###PACKDATA,FILE_END,/pluginbuddy/images/minicolors/circle.gif,importbuddy/pluginbuddy/images/minicolors/circle.gif
###PACKDATA,FILE_START,/pluginbuddy/images/minicolors/gradient.png,importbuddy/pluginbuddy/images/minicolors/gradient.png

###PACKDATA,FILE_END,/pluginbuddy/images/minicolors/gradient.png,importbuddy/pluginbuddy/images/minicolors/gradient.png
###PACKDATA,FILE_START,/pluginbuddy/images/minicolors/line.gif,importbuddy/pluginbuddy/images/minicolors/line.gif
R0lGODlhGgADAIAAAP///wAAACH/C1hNUCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IE1hY2ludG9zaCIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo3QUM5NzJGODM0QUUxMUUwODU0Q0ZERTExMDkyNDkzRCIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDo3QUM5NzJGOTM0QUUxMUUwODU0Q0ZERTExMDkyNDkzRCI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjdBQzk3MkY2MzRBRTExRTA4NTRDRkRFMTEwOTI0OTNEIiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjdBQzk3MkY3MzRBRTExRTA4NTRDRkRFMTEwOTI0OTNEIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+Af/+/fz7+vn49/b19PPy8fDv7u3s6+rp6Ofm5eTj4uHg397d3Nva2djX1tXU09LR0M/OzczLysnIx8bFxMPCwcC/vr28u7q5uLe2tbSzsrGwr66trKuqqainpqWko6KhoJ+enZybmpmYl5aVlJOSkZCPjo2Mi4qJiIeGhYSDgoGAf359fHt6eXh3dnV0c3JxcG9ubWxramloZ2ZlZGNiYWBfXl1cW1pZWFdWVVRTUlFQT05NTEtKSUhHRkVEQ0JBQD8+PTw7Ojk4NzY1NDMyMTAvLi0sKyopKCcmJSQjIiEgHx4dHBsaGRgXFhUUExIREA8ODQwLCgkIBwYFBAMCAQAAIfkEAAAAAAAsAAAAABoAAwAAAguEj6ka7Q+jW7SeAgA7
###PACKDATA,FILE_END,/pluginbuddy/images/minicolors/line.gif,importbuddy/pluginbuddy/images/minicolors/line.gif
###PACKDATA,FILE_START,/pluginbuddy/images/minicolors/rainbow.png,importbuddy/pluginbuddy/images/minicolors/rainbow.png
iVBORw0KGgoAAAANSUhEUgAAABQAAACWCAIAAABRkz+JAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBNYWNpbnRvc2giIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6N0FDOTcyRjQzNEFFMTFFMDg1NENGREUxMTA5MjQ5M0QiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6N0FDOTcyRjUzNEFFMTFFMDg1NENGREUxMTA5MjQ5M0QiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo3QUM5NzJGMjM0QUUxMUUwODU0Q0ZERTExMDkyNDkzRCIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo3QUM5NzJGMzM0QUUxMUUwODU0Q0ZERTExMDkyNDkzRCIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PnzKFbcAAAcCSURBVHjanFnbcttG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
###PACKDATA,FILE_END,/pluginbuddy/images/minicolors/rainbow.png,importbuddy/pluginbuddy/images/minicolors/rainbow.png
###PACKDATA,FILE_START,/pluginbuddy/images/minicolors/trigger.png,importbuddy/pluginbuddy/images/minicolors/trigger.png
iVBORw0KGgoAAAANSUhEUgAAABYAAAAWCAYAAADEtGw7AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBNYWNpbnRvc2giIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6RjU3RTU1MzIzNERFMTFFMDg1NENGREUxMTA5MjQ5M0QiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6RjU3RTU1MzMzNERFMTFFMDg1NENGREUxMTA5MjQ5M0QiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo4OEQxNkIyMTM0REUxMUUwODU0Q0ZERTExMDkyNDkzRCIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo4OEQxNkIyMjM0REUxMUUwODU0Q0ZERTExMDkyNDkzRCIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PiDK9P0AAAHySURBVHjarJVBasJAFIYnyVgXtrorusgdXOrWZaHgFbooegv1EoI7j+AtXLsXFFy0FFRs0LYxmXT+YV6YxIgpzcDzJcN73/z5M06s4XD4zBhrsGLHGxdCNEaj0aRI6mAw6AFs4SaKokKglmUxMHkYhgqKaDabvf9AF4vFBBwwAbbkCgpcqVTYfD7/kjWnjD6BB9MZEeocyLhrt9suOBhgJhRXq1WmodsrMBNo5gfZ65KdpFhBsVqtVmO6MLwBEkYdwkZvAhwEgUXgUqmEeV/Gzw1Q+l71EhhMpRhQBOcc8986TAgWg/dHfU3zaiPIuEev4XFSsQYfNSTUC3xq38WVzQCZPnoTivGTUnzScE9nkWOnCVMxgdNWAPiht1HekQZnWrHNAeXaArIiurDifD7Hih3HYTmgzng8floul/XEpOwlxWAmFGtwwlN5+qkwX9ZqtarLg2aCt28OWADGtZcnTGhGVn4C4vt+5iEUW0GKbduOwSmVMRj1qKOe2WzGNpsNc12XdbtdNa9q0las12uRBaWBfxjqqEeeiGy326lMh5lS7HmeTYcQlEyn09dbe4sUI6C01WqpTHNg8v1+b5PH/X4/95cE/tIu6HQ68TUymPxwODh4tHK5/KevCHr0LrqYB9OSwBf5aI9FfvOk6vdfAQYA4jTPF9eEdoEAAAAASUVORK5CYII=
###PACKDATA,FILE_END,/pluginbuddy/images/minicolors/trigger.png,importbuddy/pluginbuddy/images/minicolors/trigger.png
###PACKDATA,FILE_START,/pluginbuddy/lib/media_library/index.php,importbuddy/pluginbuddy/lib/media_library/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/pluginbuddy/lib/media_library/index.php,importbuddy/pluginbuddy/lib/media_library/index.php
###PACKDATA,FILE_START,/pluginbuddy/lib/media_library/media_library.php,importbuddy/pluginbuddy/lib/media_library/media_library.php
PD9waHAKY2xhc3MgcGJfYmFja3VwYnVkZHlfbWVkaWFsaWJyYXJ5IHsKCXByaXZhdGUgJF9zYXZlX3BvaW50ID0gJyc7Cglwcml2YXRlICRfZGVmYXVsdF9vcHRpb25zX3BvaW50ID0gJyc7Cglwcml2YXRlICRfaW5zdGFuY2UgPSAwOwoJCglmdW5jdGlvbiBfX2NvbnN0cnVjdCggJHNhdmVfcG9pbnQsICRkZWZhdWx0X29wdGlvbnNfcG9pbnQgKSB7CgkJJHRoaXMtPl9zYXZlX3BvaW50ID0gJHNhdmVfcG9pbnQ7CgkJJHRoaXMtPl9kZWZhdWx0X29wdGlvbnNfcG9pbnQgPSAkZGVmYXVsdF9vcHRpb25zX3BvaW50OwoJCSR0aGlzLT5faW5zdGFuY2UgPSBwYl9iYWNrdXBidWRkeTo6cmFuZG9tX3N0cmluZygpOwoJfQoJCglmdW5jdGlvbiBkaXNwbGF5KCkgewoJCXBiX2JhY2t1cGJ1ZGR5Ojpsb2FkX3NjcmlwdCggJ2pxdWVyeS11aS1kcmFnZ2FibGUnICk7CgkJcGJfYmFja3VwYnVkZHk6OmxvYWRfc2NyaXB0KCAnanF1ZXJ5LXVpLXNvcnRhYmxlJyApOwoJCT8+CgkJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgoJCQlqUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkgewoJCQkJCgkJCQkKCQkJCWpRdWVyeSggJy5wYl9tZWRpYWxpYnJhcnlfc2xvdF88P3BocCBlY2hvICR0aGlzLT5faW5zdGFuY2U7ID8+JyApLnNvcnRhYmxlKHsKCQkJCQlvcGFjaXR5OiAwLjYsCgkJCQkJY3Vyc29yOiAibW92ZSIsCgkJCQkJcmV2ZXJ0OiB0cnVlLAoJCQkJCXVwZGF0ZTogZnVuY3Rpb24oZSx1aSkgewoJCQkJCQkvLyBPbmx5IHNhdmUgY2hhbmdlcyBvbiBkcm9wIElOLCBub3QgcHVsbCBvdXQgcGhhc2Ugb2YgdGhlIHVwZGF0ZS4gIFByZXZlbnRzIGRvdWJsZSBmaXJpbmcgYW5kIHB1bGxpbmcgb3V0IG9mIHRoaW5ncyB0b28gZWFybHkuCgkJCQkJCWlmICh0aGlzID09PSB1aS5pdGVtLnBhcmVudCgpWzBdKSB7CgkJCQkJCQl2YXIgdGhpc19wbGFjZWRfaXRlbSA9IGpRdWVyeSh1aS5pdGVtKTsKCQkJCQkJCWpRdWVyeSh1aS5pdGVtKS5yZW1vdmVDbGFzcygncGJfbWVkaWFsaWJyYXJ5X2RyYWdnYWJsZScpOwoJCQkJCQkJalF1ZXJ5KHVpLml0ZW0pLmFkZENsYXNzKCdwYl9tZWRpYWxpYnJhcnlfc2xvdGl0ZW0nKTsKCQkJCQkJCXNsb3RfaXRlbXMgPSBuZXcgQXJyYXkoKTsKCQkJCQkJCWpRdWVyeSh0aGlzKS5jaGlsZHJlbignLnBiX21lZGlhbGlicmFyeV9zbG90aXRlbScpLmVhY2goZnVuY3Rpb24oaikgewoJCQkJCQkJCXNsb3RfaXRlbXMucHVzaCggalF1ZXJ5KHRoaXMpLmF0dHIoJ3JlbCcpICk7CgkJCQkJCQl9KTsKCQkJCQkJCQoJCQkJCQkJalF1ZXJ5KCcjcGJfbWVkaWFsaWJyYXJ5X3NhdmluZycpLnNob3coKTsKCQkJCQkJCQoJCQkJCQkJLy9hbGVydCggc2xvdF9pdGVtcyApOwoJCQkJCQkJCgkJCQkJCQlqUXVlcnkuYWpheCh7CgkJCQkJCQkJdHlwZTogJ1BPU1QnLAoJCQkJCQkJCXVybDogJzw/cGhwIGVjaG8gcGJfYmFja3VwYnVkZHk6OmFqYXhfdXJsKCAnbWVkaWFfbGlicmFyeScgKTsgPz4mYWN0aW9uYj1zYXZlX2ltYWdlc19saXN0JywKCQkJCQkJCQlkYXRhOiAnaXRlbXM9JyArIHNsb3RfaXRlbXMgKyAnJnNhdmVfcG9pbnQ9PD9waHAgZWNobyBzdHJfcmVwbGFjZSggJ1wnJywgJ1xcXCcnLCAkdGhpcy0+X3NhdmVfcG9pbnQgKTsgPz4mZGVmYXVsdF9vcHRpb25zX3BvaW50PTw/cGhwIGVjaG8gc3RyX3JlcGxhY2UoICdcJycsICdcXFwnJywgJHRoaXMtPl9kZWZhdWx0X29wdGlvbnNfcG9pbnQgKTsgPz4nLAoJCQkJCQkJCXN1Y2Nlc3M6IGZ1bmN0aW9uKG1zZyl7CgkJCQkJCQkJCWpRdWVyeSgnI3BiX3NhdmluZycpLmhpZGUoKTsKCQkJCQkJCQkJLy9hbGVydCggbXNnICk7CgkJCQkJCQkJCS8vdGhpc19wbGFjZWRfaXRlbS5jaGlsZHJlbignLmxvb3BfaXRlbV9idXR0b25zJykuY3NzKHsnZGlzcGxheSc6J2Jsb2NrJ30pOyAvLyBTaG93IHNldHRpbmdzIGljb24gb24gbmV3bHkgcGxhY2VkIHNsb3QgaXRlbS4KCQkJCQkJCQkJLyoKCQkJCQkJCQkJaWYgKCBtc2cudW5pcXVlX2lkICE9IDAgKSB7CgkJCQkJCQkJCQl0aGlzX3BsYWNlZF9pdGVtLmF0dHIoJ2lkJywgJ3BibG9vcC0nICsgbXNnLnVuaXF1ZV9pZCk7CgkJCQkJCQkJCX0KCQkJCQkJCQkJKi8KCQkJCQkJCQkJCgkJCQkJCQkJfQoJCQkJCQkJCS8vICwgJ2RhdGFUeXBlJzogJ2pzb24nCgkJCQkJCQl9KTsKCQkJCQkJCQoJCQkJCQl9CgkJCQkJfSwKCQkJCQlzdGFydDogZnVuY3Rpb24oZSx1aSkgewoJCQkJCQkvKiBOZXcgalF1ZXJ5IGZpeCAobmV3IHNsb3QgaXRlbXMgZG8gbm90IGNhdXNlIG92ZXIgbWV0aG9kIHRvIHRyaWdnZXIuICovCgkJCQkJCS8valF1ZXJ5KCcubG9vcF9zbG90JykuY3NzKHsnYmFja2dyb3VuZCc6J3RyYW5zcGFyZW50J30pOyAvKiBOZXcgalF1ZXJ5IGZpeC4gQ2hhbmdpbmcgZXhpc3Rpbmcgc2xvdCBpdGVtIGtlZXBzIGl0cyBzbG90IGJnIGNvbG9yZWQuICovCgkJCQkJCS8valF1ZXJ5KHRoaXMpLmNzcyh7J2JhY2tncm91bmQnOicjRUFGMkZBJ30pOwoJCQkJCQlqUXVlcnkoICcucGJfbWVkaWFsaWJyYXJ5X2l0ZW0nICkuZHJhZ2dhYmxlKCAnb3B0aW9uJywgJ3JldmVydCcsIGZhbHNlICk7CgkJCQkJfSwKCQkJCQlzdG9wOiBmdW5jdGlvbihlLHVpKSB7CgkJCQkJCWpRdWVyeSh0aGlzKS5jc3MoeydiYWNrZ3JvdW5kJzondHJhbnNwYXJlbnQnfSk7CgkJCQkJCWpRdWVyeSggJy5wYl9tZWRpYWxpYnJhcnlfaXRlbScgKS5kcmFnZ2FibGUoICdvcHRpb24nLCAncmV2ZXJ0JywgdHJ1ZSApOwoJCQkJCX0sCgkJCQkJCgkJCQkJb3ZlcjogZnVuY3Rpb24oZSx1aSkgewoJCQkJCQlqUXVlcnkoJy5wYl9tZWRpYWxpYnJhcnlfaXRlbScpLmNzcyh7J2JhY2tncm91bmQnOid0cmFuc3BhcmVudCd9KTsgLyogTmV3IGpRdWVyeSBmaXguIENoYW5naW5nIGV4aXN0aW5nIHNsb3QgaXRlbSBrZWVwcyBpdHMgc2xvdCBiZyBjb2xvcmVkLiAqLwoJCQkJCQkKCQkJCQkJalF1ZXJ5KHRoaXMpLmNzcyh7J2JhY2tncm91bmQnOicjRUFGMkZBJ30pOwoJCQkJCQlqUXVlcnkoICcucGJfbWVkaWFsaWJyYXJ5X2l0ZW0nICkuZHJhZ2dhYmxlKCAnb3B0aW9uJywgJ3JldmVydCcsIGZhbHNlICk7CgkJCQkJfSwKCQkJCQlvdXQ6IGZ1bmN0aW9uKGUsdWkpIHsKCQkJCQkJalF1ZXJ5KHRoaXMpLmNzcyh7J2JhY2tncm91bmQnOid0cmFuc3BhcmVudCd9KTsKCQkJCQkJLyogalF1ZXJ5KCAnLmxvb3BfaXRlbScgKS5kcmFnZ2FibGUoICdvcHRpb24nLCAncmV2ZXJ0JywgdHJ1ZSApOyBOZXcgalF1ZXJ5IGZpeC4gUHJldmVudHMgcmV2ZXJ0IGZyb20gZG91YmxlIGZseWluZy4gKi8KCQkJCQl9CgkJCQl9KTsKCQkJCS8valF1ZXJ5KCAnLnBiX21lZGlhbGliXzEnICkuZGlzYWJsZVNlbGVjdGlvbigpOwoJCQkJCgkJCQkKCQkJCQoJCQkJalF1ZXJ5KCcucGJfbWVkaWFsaWJyYXJ5X2RyYWdnYWJsZScpLmRyYWdnYWJsZSh7CgkJCQkJcmV2ZXJ0OiB0cnVlLAoJCQkJCW9wYWNpdHk6ICcuOScsCgkJCQkJekluZGV4OiAxNSwKCQkJCQloZWxwZXI6ICdjbG9uZScsCgkJCQkJYXBwZW5kVG86ICdib2R5JywKCQkJCQljb25uZWN0VG9Tb3J0YWJsZTogJy5wYl9tZWRpYWxpYnJhcnlfc2xvdF88P3BocCBlY2hvICR0aGlzLT5faW5zdGFuY2U7ID8+JwoJCQkJfSk7CgkJCQkKCQkJCQoJCQkJCgkJCX0pOwoJCTwvc2NyaXB0PgoJCTxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CgkJCS5wYl9tZWRpYWxpYnJhcnkgZGl2IHsKCQkJCWRpc3BsYXk6IGlubGluZS1ibG9jazsKCQkJCWhlaWdodDogMTUwcHg7CgkJCQlwb3NpdGlvbjogcmVsYXRpdmU7CgkJCQljdXJzb3I6IG1vdmU7CgkJCX0KCQkJLnBiX21lZGlhbGlicmFyeSBkaXYgaW1nIHsKCQkJCS8vbWFyZ2luOiAzcHg7CgkJCX0KCQkJLnBiX21lZGlhbGlicmFyeSB7CgkJCQltYXgtaGVpZ2h0OiA0ODBweDsKCQkJCW92ZXJmbG93OiBzY3JvbGw7CgkJCX0KCQkJCgkJCQoJCQkucGJfbWVkaWFsaWJyYXJ5X2l0ZW0gewoJCQkJbWFyZ2luOiA1cHg7CgkJCQl0ZXh0LWFsaWduOiBjZW50ZXI7CgkJCQlsaW5lLWhlaWdodDogMS4xZW07CgkJCX0KCQkJCgkJCS5wYl9tZWRpYWxpYnJhcnlfaW1nYm94IHsKCQkJCWRpc3BsYXk6IGlubGluZS1ibG9jazsKCQkJCXBvc2l0aW9uOiByZWxhdGl2ZTsKCQkJCS8vbWFyZ2luOiAzcHg7CgkJCQljdXJzb3I6IG1vdmU7CgkJCX0KCQkJLnBiX21lZGlhbGlicmFyeV9zZXR0aW5nc2JveCB7CgkJCQlwb3NpdGlvbjogYWJzb2x1dGU7CgkJCQlyaWdodDogMDsKCQkJCXotaW5kZXg6IDMwOwoJCQkJZGlzcGxheTogbm9uZTsKCQkJCWN1cnNvcjogcG9pbnRlcjsKCQkJCWJhY2tncm91bmQ6IHdoaXRlOwoJCQl9CgkJCS5wYl9tZWRpYWxpYnJhcnlfc2V0dGluZ3Nib3hfaG90IHsKCQkJCWNvbG9yOiByZWQ7CgkJCX0KCQk8L3N0eWxlPgoJCQoJCQoJCQoJCQoJCTw/cGhwCgkJcGJfYmFja3VwYnVkZHk6OiR1aS0+c3RhcnRfbWV0YWJveCggJ0ltYWdlcyBpbiBHcm91cCA8c3BhbiBpZD0icGJfbWVkaWFsaWJyYXJ5X3NhdmluZyIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij5TYXZpbmc8L3NwYW4+JywgdHJ1ZSwgJ3dpZHRoOiA0OCU7IG1pbi13aWR0aDogNDAwcHg7IGZsb2F0OiBsZWZ0OycgKTsKCQkKCQllY2hvICc8ZGl2IGNsYXNzPSJwYl9tZWRpYWxpYnJhcnlfc2xvdF8nIC4gJHRoaXMtPl9pbnN0YW5jZSAuICcgcGJfbWVkaWFsaWJyYXJ5Ij4nOwoJCQoJCSRncm91cF9pbWFnZXMgPSAmcGJfYmFja3VwYnVkZHk6OmdldF9ncm91cCggJHRoaXMtPl9zYXZlX3BvaW50ICk7CgkJZm9yZWFjaCggJGdyb3VwX2ltYWdlcyBhcyAkaW1hZ2VfaW5kZXggPT4gJGltYWdlICkgewoJCQkkaW1hZ2VfZGF0ID0gd3BfZ2V0X2F0dGFjaG1lbnRfaW1hZ2Vfc3JjKCAkaW1hZ2VbJ2lkJ10sICd0aHVtYm5haWwnICk7CgkJCWVjaG8gJzxkaXYgY2xhc3M9InBiX21lZGlhbGlicmFyeV9pdGVtIHBiX21lZGlhbGlicmFyeV9zbG90aXRlbSIgcmVsPSInIC4gJGltYWdlWydpZCddIC4gJyI+PGltZyBzcmM9IicgLiAkaW1hZ2VfZGF0WzBdIC4gJyI+PC9kaXY+JzsKCQl9CgkJCgkJZWNobyAnPC9kaXY+JzsKCQkKCQlwYl9iYWNrdXBidWRkeTo6JHVpLT5lbmRfbWV0YWJveCgpOwoJCQoJCQoJCQoJCQoJCXBiX2JhY2t1cGJ1ZGR5OjokdWktPnN0YXJ0X21ldGFib3goICdXb3JkUHJlc3MgTWVkaWEgTGlicmFyeScsIHRydWUsICd3aWR0aDogNDglOyBtaW4td2lkdGg6IDQwMHB4OyBmbG9hdDogcmlnaHQ7JyApOwoJCT8+CgkJPGRpdiBjbGFzcz0icGJfbWVkaWFsaWJyYXJ5Ij4KCQk8P3BocAoJCWdsb2JhbCAkd3BkYjsKCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoICJTRUxFQ1QgSUQscG9zdF90aXRsZSBGUk9NIHskd3BkYi0+cHJlZml4fXBvc3RzIFdIRVJFIHBvc3RfdHlwZT0nYXR0YWNobWVudCciICk7CgkJd2hpbGUgKCAkcnMgPSBteXNxbF9mZXRjaF9hc3NvYyggJHJlc3VsdCApICkgewoJCQkvL2VjaG8gJzxwcmU+JyAuIHByaW50X3IoICRycywgdHJ1ZSApIC4gJzwvcHJlPic7CgkJCSRpbWFnZV9kYXQgPSB3cF9nZXRfYXR0YWNobWVudF9pbWFnZV9zcmMoICRyc1snSUQnXSwgJ3RodW1ibmFpbCcgKTsKCQkJLy9lY2hvICc8cHJlPicgLiBwcmludF9yKCBcd3BfZ2V0X2F0dGFjaG1lbnRfbWV0YWRhdGEoICRyc1snSUQnXSApICwgdHJ1ZSApIC4gJzwvcHJlPic7CgkJCS8vZWNobyAnPHByZT4nIC4gcHJpbnRfciggJGltYWdlX2RhdCwgdHJ1ZSApIC4gJzwvcHJlPic7CgkJCWVjaG8gJzxkaXYgY2xhc3M9InBiX21lZGlhbGlicmFyeV9pdGVtIHBiX21lZGlhbGlicmFyeV9kcmFnZ2FibGUiIHJlbD0iJyAuICRyc1snSUQnXSAuICciPjxzcGFuIGNsYXNzPSJwYl9tZWRpYWxpYnJhcnlfc2V0dGluZ3Nib3giPlNldHRpbmdzPC9zcGFuPjxpbWcgY2xhc3M9InBiX21lZGlhbGlicmFyeV9sYXp5IiBkYXRhLW9yaWdpbmFsPSInIC4gJGltYWdlX2RhdFswXSAuICciIHNyYz0iIiB0aXRsZT0iJyAuICRyc1sncG9zdF90aXRsZSddIC4gJyI+PC9kaXY+JzsKCQl9CgkJdW5zZXQoICRyZXN1bHQgKTsKCQk/PgoJCTwvZGl2PgoJCTw/cGhwCgkJcGJfYmFja3VwYnVkZHk6OiR1aS0+ZW5kX21ldGFib3goKTsKCX0KCQoJcHVibGljIGZ1bmN0aW9uIGFqYXgoICRhY3Rpb25iICkgewoJCWlmICggJGFjdGlvbmIgPT0gJ3NhdmVfaW1hZ2VzX2xpc3QnICkgeyAvLyBVc2VyIG1vZGlmaWVkIHRoZSBsaXN0IG9mIGltYWdlcyBpbiBhIGdyb3VwLgoJCQkvL2VjaG8gJzxwcmU+JyAuIHByaW50X3IoIHBiX2JhY2t1cGJ1ZGR5OjpfUE9TVCgpLCB0cnVlICkgLiAnPC9wcmU+JzsKCQkJJGltYWdlcyA9IGV4cGxvZGUoICcsJywgcGJfYmFja3VwYnVkZHk6Ol9QT1NUKCAnaXRlbXMnICkgKTsKCQkJZWNobyAnPHByZT4nIC4gcHJpbnRfciggJGltYWdlcywgdHJ1ZSApIC4gJzwvcHJlPic7CgkJCQoJCQkKCQkJLy8gUHJlcGFyZSBzYXZlcG9pbnQuCgkJCWlmICggJHRoaXMtPl9zYXZlX3BvaW50ICE9ICcnICkgewoJCQkJJHNhdmVwb2ludF9yb290ID0gJHRoaXMtPl9zYXZlX3BvaW50OyAvLyAuICcjJzsKCQkJfSBlbHNlIHsKCQkJCSRzYXZlcG9pbnRfcm9vdCA9ICcnOwoJCQl9CgkJCQoJCQkkaW1hZ2Vfcm9vdCA9ICZwYl9iYWNrdXBidWRkeTo6Z2V0X2dyb3VwKCAkc2F2ZXBvaW50X3Jvb3QgKTsKCQkJJGltYWdlX3Jvb3QgPSBhcnJheSgpOwoJCQkKCQkJCgkJCWZvcmVhY2ggKCAkaW1hZ2VzIGFzICRpbWFnZV9pZCApIHsgLy8gTG9vcCB0aHJvdWdoIGVhY2ggaXRlbSBpbiBsaXN0LgoJCQkJLy9lY2hvICdpZDogJyAuICRpbWFnZV9pZCAuICc8YnI+JzsKCQkJCSRpbWFnZV9kZWZhdWx0cyA9IHBiX2JhY2t1cGJ1ZGR5OjpzZXR0aW5ncyggcGJfYmFja3VwYnVkZHk6Ol9QT1NUKCAnZGVmYXVsdF9vcHRpb25zX3BvaW50JyApICk7CgkJCQkkaW1hZ2VfZGVmYXVsdHNbJ2lkJ10gPSAkaW1hZ2VfaWQ7CgkJCQkkaW1hZ2Vfcm9vdFtdID0gJGltYWdlX2RlZmF1bHRzOwoJCQkJLyoKCQkJCS8vZWNobyAnPHByZT4nIC4gcHJpbnRfciggJGltYWdlX2RlZmF1bHRzLCB0cnVlICkgLiAnPC9wcmU+JzsKCQkJCQoJCQkJLy8gRnJvbSBvbGQgc2F2ZV9zZXR0aW5ncygpOgoJCQkJJHNhdmVwb2ludF9zdWJzZWN0aW9uID0gJnBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uczsKCQkJCSRzYXZlcG9pbnRfbGV2ZWxzID0gZXhwbG9kZSggJyMnLCAkc2F2ZXBvaW50X3Jvb3QgKTsKCQkJCWZvcmVhY2ggKCAkc2F2ZXBvaW50X2xldmVscyBhcyAkc2F2ZXBvaW50X2xldmVsICkgewoJCQkJCSRzYXZlcG9pbnRfc3Vic2VjdGlvbiA9ICYkc2F2ZXBvaW50X3N1YnNlY3Rpb257JHNhdmVwb2ludF9sZXZlbH07CgkJCQl9CgkJCQkvLyBBcHBseSBzZXR0aW5ncy4KCQkJCSRzYXZlcG9pbnRfc3Vic2VjdGlvbltdID0gJGltYWdlX2RlZmF1bHRzOwoJCQkJKi8KCQkJfQoJCQkvL2VjaG8gJzxwcmU+JyAuIHByaW50X3IoICRpbWFnZV9yb290LCB0cnVlICkgLiAnPC9wcmU+JzsKCQkJcGJfYmFja3VwYnVkZHk6OnNhdmUoKTsKCQl9CgkJZGllKCk7Cgl9Cn0=
###PACKDATA,FILE_END,/pluginbuddy/lib/media_library/media_library.php,importbuddy/pluginbuddy/lib/media_library/media_library.php
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/Thumbs.db,importbuddy/pluginbuddy/lib/updater/Thumbs.db
0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgv////7///8EAAAA/v///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////1IAbwBvAHQAIABFAG4AdAByAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDpk8SndMwBAwAAAAADAAAAAAAAMgA1ADYAXwA4AGQANwBhADAAZgA0ADUANAAwADkANwAxADgANwBiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACoAAgH///////////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAADAAAABAAAAAUAAAAGAAAABwAAAAgAAAAJAAAACgAAAAswAAALQCAAAAAAAA101wQceCKzqJUE5HDQoaCgAAAA1JSERSAAAAEAAAABAIBgAAAB/z/2EAAAABc1JHQgCuzhzpAAAABGdBTUEAALGPC/xhBQAAAl5JREFUOE+Nk11IU2EYx//nbOtsOwpmYylFWIEYRlBkhpS0mmCBVHTRRQTdRLm7IrDwrm40iSLCQCwqQ1pJWbdWeiGzNIzMmNGHlotyui8393HOuz29Z7ZR1GYvPIfD+zz/3/s+H69ARMi3PI/r2rm/8VfM9dX7+xx/xGuAXDbda2/nRiz+OW3av7b3e/zS4oVRSszeJHX+Odel0pDJB7s7MxDhXylkrl1adxFsvh+CwQLvYFf65jwFTN2pwUwEA9UOly0XgErrO8ACj0DJEAdYubQCs0MtAEth1YEeTHbaMZuUBsRcBSRlKi3WFjEf/06gxHYWRZv2IvblCMqOXUaxGtuVEyAYVkLQyYt8SoJUL1jExWFPoYYCfMsHNpfAXynw/DXoNclS2Vi4djmUuWfQm8sg6AuQjH8Hi3pQsO4gPly5C48kv88Csv0WBUgrNqNowzbEf1yCjhdQNJVA9bqRVKMoKD+Ej1e7udj8zt40vDHbRq09KRYiNdRHUU8zBccqaGG8mqJTF2jaWUssfIvYgpPc5yupv63qdbaN2mBkJs1acwKKvwss9An6wmLo5Qa8dd4L+BOCf40SXS8adZgxmV/VnnpZlS3+4slBUvy9FJnYQ/4XFRRx2yj2tZVG2rb4nrRs78o3rVrBwiw8gth0KxTfNxgt5dDJdn6yM+CF9LChaehovreiAQoFA2+XwQzJWgYybMWb7p6QT5Tu7zvjOp73pXGnmGKpURZLwSDvgCgfxrizNzhvNN2uP+06uZRY8wvDN2qbpUTcoSrJZaSSGDObOnY6Bs/9j1iL+Ql3H4m3RGjw4QAAAABJRU5ErkJgggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
###PACKDATA,FILE_END,/pluginbuddy/lib/updater/Thumbs.db,importbuddy/pluginbuddy/lib/updater/Thumbs.db
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/get.php,importbuddy/pluginbuddy/lib/updater/get.php
PD9waHAKLyoKICoJUGx1Z2luQnVkZHkuY29tICYgaVRoZW1lcy5jb20KICoJQXV0aG9yOiBEdXN0aW4gQm9sdG9uIDwgaHR0cDovL2R1c3RpbmJvbHRvbi5jb20gPgogKgogKglDcmVhdGVkOglGZWJydWFyeSAyNCwgMjAxMAogKglVcGRhdGVkOglTZXB0ZW1iZXIgMzAsIDIwMTAKICoKICoJVmVyc2lvbjoJMS4wLjEKICogCiAqCUdldHMgdXBkYXRlciB3ZWJwYWdlIGFuZCByZXR1cm5zIGl0IHRvIHVzZXIuCiAqCVRoaXMgaXMgdXNlZCBzbyB0aGF0IGRhdGEgbWF5IGJlIHBhc3NlZCBiYWNrIHRvIHRoZSBjYWxsaW5nIHNlcnZlciBkaXJlY3RseS4KICoKICovCgphdXRoX3JlZGlyZWN0KCk7IC8vIEhhbmRsZXMgbG9naW4gY2hlY2sgYW5kIHJlZGlyZWN0cyB0byBXUCBMb2dpbiBpZiBuZWVkZWQuCmlmICggIWN1cnJlbnRfdXNlcl9jYW4oICdpbnN0YWxsX3RoZW1lcycgKSApIHsKCWRpZSggX18oICdBQ0NFU1MgREVOSUVEISBZb3UgbmVlZCBoaWdoZXIgYWNjZXNzIHRvIGRvIHRoaXMuIEVycm9yICM1MzQzNDQgUGx1Z2luQnVkZHkuY29tLicsJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKTsKfQoKJHVybCA9ICRfR0VUWyd1cmwnXTsKCmlmICggaXNzZXQoJF9QT1NUKSApIHsKCSRwb3N0dmFycyA9ICcnOwoJd2hpbGUgKCRlbGVtZW50ID0gY3VycmVudCgkX1BPU1QpKSB7CgkJJHBvc3R2YXJzIC49IGtleSgkX1BPU1QpLic9Jy4kZWxlbWVudC4nJic7CgkJbmV4dCgkX1BPU1QpOwoJfQoJCgkkcmVzcG9uc2UgPSB3cF9yZW1vdGVfcG9zdCggJHVybCwgYXJyYXkoCgkJCSdtZXRob2QnID0+ICdQT1NUJywKCQkJJ3RpbWVvdXQnID0+IDIwLAoJCQkncmVkaXJlY3Rpb24nID0+IDUsCgkJCSdodHRwdmVyc2lvbicgPT4gJzEuMCcsCgkJCSdibG9ja2luZycgPT4gdHJ1ZSwKCQkJJ2hlYWRlcnMnID0+IGFycmF5KCksCgkJCSdib2R5JyA9PiAkcG9zdHZhcnMsCgkJCSdjb29raWVzJyA9PiBhcnJheSgpCgkJKQoJKTsKfSBlbHNlIHsKCSRyZXNwb25zZSA9IHdwX3JlbW90ZV9nZXQoICR1cmwsIGFycmF5KAoJCQknbWV0aG9kJyA9PiAnR0VUJywKCQkJJ3RpbWVvdXQnID0+IDIwLAoJCQkncmVkaXJlY3Rpb24nID0+IDUsCgkJCSdodHRwdmVyc2lvbicgPT4gJzEuMCcsCgkJCSdibG9ja2luZycgPT4gdHJ1ZSwKCQkJJ2hlYWRlcnMnID0+IGFycmF5KCksCgkJCSdib2R5JyA9PiBudWxsLAoJCQknY29va2llcycgPT4gYXJyYXkoKQoJCSkKCSk7Cn0KCmlmKCBpc193cF9lcnJvciggJHJlc3BvbnNlICkgKSB7CglkaWUoIHNwcmludGYoIF9fKCAnRVJST1IgIzU0NTUuIFVuYWJsZSB0byBhY2Nlc3MgUGx1Z2luQnVkZHkgLyBpVGhlbWVzIHVwZGF0ZXIgJiBsaWNlbnNpbmcgc3lzdGVtLiBEZXRhaWxzOiAlcycsJ2l0LWwxMG4tYmFja3VwYnVkZHknICksICRyZXNwb25zZS0+Z2V0X2Vycm9yX21lc3NhZ2UoKSApICk7Cn0gZWxzZSB7CgkkcmVzcG9uc2UgPSAkcmVzcG9uc2VbJ2JvZHknXTsKfQoKJG5ld2xpbmVfcG9zID0gc3RycG9zKCRyZXNwb25zZSwiXG4iKTsKCi8vIFRha2UgZmlyc3QgbGluZSBhbmQgdW5zZXJpYWxpemUgaXQuICBJZiBpdHMgYW4gYXJyYXkgdGhlbiBlbnRlciB0aGUgZGF0YS4KJHJlc3BvbnNlX2FycmF5ID0gdW5zZXJpYWxpemUoIHN1YnN0cigkcmVzcG9uc2UsIDAsICRuZXdsaW5lX3BvcykgKTsgLy8gVHVybiBmaXJzdCBsaW5lIGludG8gYXJyYXkuCmlmICggaXNfYXJyYXkoICRyZXNwb25zZV9hcnJheSApICkgeyAvLyBGaXJzdCBsaW5lIGlzIGFycmF5IGRhdGEgdG8gc2VydmVyLgoJJG9wdGlvbnMgPSBnZXRfb3B0aW9uKCAkX0dFVFsndmFyJ10gKTsKCQoJaWYgKCBpc3NldCggJHJlc3BvbnNlX2FycmF5WydzZXRfa2V5J10gKSApIHsKCQkkb3B0aW9uc1sndXBkYXRlciddWydrZXknXSA9ICRyZXNwb25zZV9hcnJheVsnc2V0X2tleSddOyAvLyBDaGFuZ2Uga2V5IHZhbHVlLgoJfSBlbHNlaWYgKCBpc3NldCggJHJlc3BvbnNlX2FycmF5Wyd1bnNldF9rZXknXSApICkgewoJCSRvcHRpb25zWyd1cGRhdGVyJ11bJ2tleSddID0gJyc7Cgl9IGVsc2UgewoJCWVjaG8gX18oICdFUlJPUjogVU5LTk9XTiBDQUxMQkFDSyBDT01NQU5EISBFUlJPUiAjODU0MzMyNTYuJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKTsKCX0KCQoJJG9wdGlvbnNbJ3VwZGF0ZXInXVsnbGFzdF9jaGVjayddID0gMDsgLy8gRm9yY2UgdXBkYXRlIG9uIG5leHQgcmVmcmVzaC4KCXVwZGF0ZV9vcHRpb24oICRfR0VUWyd2YXInXSwgJG9wdGlvbnMgKTsKCQoJZWNobyBzdWJzdHIoICRyZXNwb25zZSwgJG5ld2xpbmVfcG9zKzEgKTsKfSBlbHNlIHsKCWVjaG8gJHJlc3BvbnNlOwp9Cj8+
###PACKDATA,FILE_END,/pluginbuddy/lib/updater/get.php,importbuddy/pluginbuddy/lib/updater/get.php
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/history.txt,importbuddy/pluginbuddy/lib/updater/history.txt
MS4wLjAgLSAyMDEwLTA5LTMwIC0gRHVzdGluIEJvbHRvbgoJR2F2ZSBvZmZpY2lhbCB2ZXJzaW9uIG51bWJlci4KCVVzaW5nIHdwX3JlbW90ZV9nZXQgaW5zdGVhZCBvZiBjdXJsIGluIGJvdGggdXBkYXRlci5waHAgJiBnZXQucGhwLgoJTGltaXRlZCBjaGVja2luZyB0byBvbmNlIHBlciAxMCBtaW51dGVzIHVubGVzcyBjaGVjayBub3cgbGluayBpcyBjbGlja2VkLgoJSG92ZXIgJ0NoZWNrIGZvciBVcGRhdGVzIE5vdycgbGluayBmb3IgdXBkYXRlciB2ZXJzaW9uIG51bWJlciBhbmQgcGx1Z2luIGl0IGlzIGJlaW5nIGxvYWRlZCBmcm9tLgoxLjAuMSAtIDIwMTAtMTAtMTIgLSBEdXN0aW4gQm9sdG9uCglGaXhlZCBsaWNlbnNlIGNvbmZpcm1hdGlvbiBzY3JlZW4gbm90IHNob3dpbmcgd2hlbiBnZW5lcmF0aW5nIGEgbmV3IGtleS4KMS4wLjIgLSAyMDEwLTEwLTE4IC0gRHVzdGluIEJvbHRvbgoJQWRkZWQgc3VwcG9ydCBmb3IgbmV3IHBsdWdpbiBjbGFzcyBuYW1lcy4KMS4wLjMgLSAyMDEwLTA2LTAzIC0gRHVzdGluIEJvbHRvbgoJRml4ZWQgY2hhbmdlbG9nIHZpZXdpbmcgbm90IHdvcmtpbmcuCjEuMC4xOCAtIDIwMTItMDEtMTIgLSBEdXN0aW4gQm9sdG9uCglNb2RpZmllZCBmb3IgbmV3IFBsdWdpbkJ1ZGR5IGZyYW1ld29yay4KMS4wLjE5IC0gMjAxMi0wMi0wOCAtIER1c3RpbiBCb2x0b24KCVJlbW92ZWQgdW5uZWNjZXNzYXJ5IG91dHB1dCBidWZmZXJpbmcgYWRkZWQgYnkgUk0uCjEuMC4yMCAtIDIwMTItMDUtMTAgLSBEdXN0aW4gQm9sdG9uCglUd2Vha2VkIENTUyBzdHlsaW5nIGZvciB0YWJzIHRvIHJlbW92ZSB1bm5lZWRlZCBzdHlsZXMgYW5kIElELg==
###PACKDATA,FILE_END,/pluginbuddy/lib/updater/history.txt,importbuddy/pluginbuddy/lib/updater/history.txt
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/index.php,importbuddy/pluginbuddy/lib/updater/index.php

###PACKDATA,FILE_END,/pluginbuddy/lib/updater/index.php,importbuddy/pluginbuddy/lib/updater/index.php
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/key.png,importbuddy/pluginbuddy/lib/updater/key.png
iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAH2SURBVDjLjZNLTxNRGIaJv6ZNWeBwkZFLQtGAC4l/wKULV+7YILeSYukEUhJoSASVuCI0hpAYDSUQCJBSoAaC0wbBUi4aWphpO52Zlpa+nnOqCAptJ3k3M3me73LOlAAoyZfDqQdOEvyO89/vRcGZ5HeWmySFYdWHVOQN0vE58jrLJMFJ82hewVU4+bMfqdPxP9VBn+A4D88wP59PwFqmsH7UgeTJEMlsTuIyI5uRsDfCMcmtAtoyhVmOu5kkHZuFsiNA3XuEi+QCdhxluL0D/SvpoO+vhIksiItNiPqqyXgfIL403gjfoTsIL70gQBdim3VQvz2FFnwOxf8E8kYF0rIVYqcRM70Vgf/Pe/ohwsutOJdcpBpP4Mek+jPEfbWQVzkG+7tNcNsqt68tkcLZTIzM6YZ21IbolgHq9j1o+z04nKhHRnlH2p6A32LCvFD55fIYr960VHgSSqCFVDJBEeugh+zw2jnpc0/5rthuRMBaioWBqrVrFylXOUpankIi0AjJY0DC3wD9oA9rAnc2bat+n++2UkH8XHaTZfGQlg3QdlsIbIVX4KSPAv+60L+SO/PECmJiI1lYM9SQBR7b3einfn6kEMwEIZd5Q48sQQt1Qv/xFqt2Tp5x3B8sBmYC71h926az6njdUR6hMy8O17wqFqb5Bd2o/0SFzIZrAAAAAElFTkSuQmCC
###PACKDATA,FILE_END,/pluginbuddy/lib/updater/key.png,importbuddy/pluginbuddy/lib/updater/key.png
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/licenses.php,importbuddy/pluginbuddy/lib/updater/licenses.php
PD9waHAKZnVuY3Rpb24gcGJfdXBkYXRlcl9hdHRhY2hfa2V5X2h0bWwoICRzZWxmX3VybCA9ICcnICkgewoJPz4KCTwhLS1NYW51YWxseSBLZXkgRW50cnkgZm9ybSAtLT4KCTxoMz5NYW51YWxseSBFbnRlciBhIExpY2Vuc2UgS2V5PC9oMz4KCTxkaXYgc3R5bGU9Im1hcmdpbi1yaWdodDogNTBweDsiPgoJCTxwPkFscmVhZHkgZ2VuZXJhdGVkIGEga2V5PyBZb3UgbWF5IGVudGVyIGl0IGJlbG93Ljxicj4KCQlJZiB5b3UgZG9uJ3QgaGF2ZSBhIGtleSB5ZXQsIGxvZyBpbnRvIHRoZSBmb3JtIGFib3ZlLjwvcD4KCQk8Zm9ybSBtZXRob2Q9InBvc3QiIGFjdGlvbj0iPD9waHAgZWNobyBlc2NfdXJsKCAkc2VsZl91cmwgKTsgPz4iPgoJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImFjdGlvbmIiIHZhbHVlPSJsaWNlbnNlX3NpdGVfbWFudWFsbHkiIC8+CgkJPGlucHV0IHR5cGU9InRleHQiIG5hbWU9InRyeV9rZXkiIHNpemU9IjM1IiBtYXhsZW5ndGg9IjI1IiAvPgoJCSZuYnNwOzxpbnB1dCBjbGFzcz0iYnV0dG9uLXNlY29uZGFyeSIgdHlwZT0ic3VibWl0IiBuYW1lPSJzdWJtaXQiIHZhbHVlPSJBcHBseSB0byBTaXRlIiAvPgoJCTwvZm9ybT4KCTwvZGl2PgoJPD9waHAKfSAvL2VuZCBwYl91cGRhdGVyX2F0dGFjaF9rZXlfaHRtbApnbG9iYWwgJGN1cnJlbnRfdXNlcjsKJGN1cnJlbnRfcGx1Z2luID0gJHRoaXMtPnBsdWdpbnNbICR0aGlzLT5wbHVnaW5fc2x1ZyBdOwovL1BlcmZvcm0gYWN0aW9ucwppZiAoIGlzc2V0KCAkX1BPU1RbICdhY3Rpb25iJyBdICkgKSB7CgkkY3VycmVudF9wbHVnaW4gPSAkdGhpcy0+cGx1Z2luc1sgJHRoaXMtPnBsdWdpbl9zbHVnIF07CgkkYm9keSA9IGFycmF5KAoJCSdhY3Rpb24nID0+ICdsaWNlbnNlcycsCgkJJ2FjdGlvbmInID0+ICRfUE9TVFsgJ2FjdGlvbmInIF0sCgkJJ2hhc2gnID0+ICR0aGlzLT5wbHVnaW5zWyAndXNlcmhhc2gnIF0sCgkJJ3dwdXNlcicgPT4gJGN1cnJlbnRfdXNlci0+dXNlcl9sb2dpbiwKCQkndXNlcm5hbWUnID0+IGlzc2V0KCAkX1BPU1RbICd1c2VybmFtZScgXSApID8gJF9QT1NUWyAndXNlcm5hbWUnIF0gOiAkdGhpcy0+cGx1Z2luc1sgJ3VzZXJuYW1lJyBdLAoJCSdwYXNzd29yZCcgPT4gaXNzZXQoICRfUE9TVFsgJ3Bhc3N3b3JkJyBdICkgPyAkX1BPU1RbICdwYXNzd29yZCcgXSA6ICcnLAoJCSd0cnlfa2V5JyA9PiBpc3NldCggJF9QT1NUWyAndHJ5X2tleScgXSApID8gJF9QT1NUWyAndHJ5X2tleScgXSA6IGZhbHNlLAoJKTsKCWlmICggJF9QT1NUWyAnYWN0aW9uYicgXSA9PSAnbG9nb3V0JyApIHsKCQkkdGhpcy0+cGx1Z2luc1sgJHRoaXMtPnBsdWdpbl9zbHVnIF0gPSAkY3VycmVudF9wbHVnaW47CgkJJHRoaXMtPnNhdmVfcGx1Z2luX29wdGlvbnMoIHRydWUgKTsKCQk/PgoJCTxkaXYgY2xhc3M9J3VwZGF0ZWQnPjxwPjxzdHJvbmc+WW91IGhhdmUgYmVlbiBsb2dnZWQgb3V0Ljwvc3Ryb25nPjwvcD48L2Rpdj4KCQk8P3BocAoJfSBlbHNlIHsKCQkkcmVzcG9uc2UgPSAkdGhpcy0+cGVyZm9ybV9yZW1vdGVfcmVxdWVzdCggYXJyYXkoICdib2R5JyA9PiAkYm9keSApICk7Cgl9CgkKCQoJc3dpdGNoKCAkX1BPU1RbICdhY3Rpb25iJyBdICkgewoJCWNhc2UgJ2xpY2Vuc2Vfc2l0ZV9tYW51YWxseSc6CgkJY2FzZSAnbGljZW5zZV9zaXRlX2V4aXN0aW5nJzoKCQljYXNlICdsaWNlbnNlX3NpdGVfbmV3JzoKCQkJLy9BZGQgdGhlIGtleSB0byB0aGUgY3VycmVudCBzaXRlCgkJCWlmICggJHJlc3BvbnNlLT5rZXlfc3RhdHVzID09ICdvaycgKSB7CgkJCQkkY3VycmVudF9wbHVnaW4tPmtleV9zdGF0dXMgPSAnb2snOwoJCQkJJGN1cnJlbnRfcGx1Z2luLT5rZXkgPSAkcmVzcG9uc2UtPmtleTsKCQkJCSR0aGlzLT5wbHVnaW5zWyAkdGhpcy0+cGx1Z2luX3NsdWcgXSA9ICRjdXJyZW50X3BsdWdpbjsKCQkJCSR0aGlzLT5zYXZlX3BsdWdpbl9vcHRpb25zKCk7CgkJCX0KCQkJYnJlYWs7CgkJY2FzZSAndW5saWNlbnNlX3NpdGUnOgoJCWNhc2UgJ3VubGljZW5zZV9zaXRlX2V4aXN0aW5nJzoKCQkJLy9GaW5kIG91dCBpZiB0aGUgcmVtb3ZlZCBrZXkgbWF0Y2hlcyB0aGUgY3VycmVudCBzaXRlIGFuZCByZW1vdmUgaXQKCQkJaWYgKCAkcmVzcG9uc2UtPnVuc2V0X2tleSApIHsKCQkJCWlmICggJF9QT1NUWyAndHJ5X2tleScgXSA9PSAkY3VycmVudF9wbHVnaW4tPmtleSApIHsKCQkJCQkkY3VycmVudF9wbHVnaW4tPmtleV9zdGF0dXMgPSAnaW52YWxpZCc7CgkJCQkJJGN1cnJlbnRfcGx1Z2luLT5rZXkgPSAnJzsKCQkJCQkkdGhpcy0+cGx1Z2luc1sgJHRoaXMtPnBsdWdpbl9zbHVnIF0gPSAkY3VycmVudF9wbHVnaW47CQkJCQoJCQkJCSR0aGlzLT5zYXZlX3BsdWdpbl9vcHRpb25zKCk7CgkJCQl9CgkJCX0KCQkJYnJlYWs7CgkJZGVmYXVsdDoKCQkJYnJlYWs7Cgl9IC8vZW5kIHN3aXRjaAoJCgkvL091dHB1dCBlcnJvcnMgb3IgbWVzc2FnZXMKCWlmICggaXNzZXQoICRyZXNwb25zZS0+ZXJyb3JzICkgJiYgaXNzZXQoICRyZXNwb25zZS0+bWVzc2FnZSApICYmICRyZXNwb25zZS0+ZXJyb3JzICkgewoJCT8+CgkJPGRpdiBjbGFzcz0nZXJyb3InPjxwPjxzdHJvbmc+PD9waHAgZWNobyBlc2NfaHRtbCggJHJlc3BvbnNlLT5tZXNzYWdlICk7ID8+PC9zdHJvbmc+PC9wPjwvZGl2PgoJCTw/cGhwCgl9IGVsc2VpZiAoIGlzc2V0KCAkcmVzcG9uc2UtPm1lc3NhZ2UgKSApIHsKCQk/PgoJCTxkaXYgY2xhc3M9J3VwZGF0ZWQnPjxwPjxzdHJvbmc+PD9waHAgZWNobyBlc2NfaHRtbCggJHJlc3BvbnNlLT5tZXNzYWdlICk7ID8+PC9zdHJvbmc+PC9wPjwvZGl2PgoJCTw/cGhwCgkKCX0KCQoJLyokcmVzcG9uc2UgPSAkdGhpcy0+cGVyZm9ybV9yZW1vdGVfcmVxdWVzdCgKCQlhcnJheSgKCQkJJ2JvZHknID0+IGFycmF5KAoJCQkJJ2FjdGlvbicgPT4gJ2xpY2Vuc2VzJywKCQkJCSdhY3Rpb25iJyA9PiAkX1BPU1RbICdhY3Rpb25iJyBdLAoJCQkJJ2hhc2gnID0+ICRjdXJyZW50X3BsdWdpbi0+aGFzaCwKCQkJCSd3cHVzZXInID0+ICRjdXJyZW50X3VzZXItPnVzZXJfbG9naW4sCgkJCQkndXNlcm5hbWUnID0+IGlzc2V0KCAkX1BPU1RbICd1c2VybmFtZScgXSApID8gJF9QT1NUWyAndXNlcm5hbWUnIF0gOiAkY3VycmVudF9wbHVnaW4tPnVzZXJuYW1lLAoJCQkJJ3Bhc3N3b3JkJyA9PiBpc3NldCggJF9QT1NUWyAncGFzc3dvcmQnIF0gKSA/ICRfUE9TVFsgJ3Bhc3N3b3JkJyBdIDogJycsCgkJCQkndHJ5a2V5JyA9PiBpc3NldCggJF9QT1NUWyAndHJ5a2V5JyBdICkgPyAkX1BPU1RbICd0cnlrZXknIF0gPyBmYWxzZSwKCQkJCSdrZXknID0+ICRjdXJyZW50X3BsdWdpbi0+a2V5CgkJCSkKCQkpCgkpOwoJZGllKCBwcmludF9yKCAkcmVzcG9uc2UsIHRydWUgKSApOyovCn0KCj8+CjwhRE9DVFlQRSBodG1sIFBVQkxJQyAiLS8vVzNDLy9EVEQgWEhUTUwgMS4wIFN0cmljdC8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9UUi94aHRtbDEvRFREL3hodG1sMS1zdHJpY3QuZHRkIj4KPGh0bWw+Cgk8aGVhZD4KCQk8dGl0bGU+PD9waHAgZXNjX2h0bWxfZSggJ1BsdWdpbkJ1ZGR5IExpY2Vuc2VzJywgJ2l0LWwxMG4tY2Fyb3VzZWwnICk7ID8+PC90aXRsZT4KCQk8P3BocAoJCQl3cF9lbnF1ZXVlX3NjcmlwdCggJ2pxdWVyeS11aS10YWJzJyApOwoJCQl3cF9lbnF1ZXVlX3N0eWxlKCAnanF1ZXJ5LXRvb2xzJywgcGx1Z2luc191cmwoICcvY3NzL3RhYnMuY3NzJywgX19GSUxFX18gKSApOwoJCQl3cF9hZG1pbl9jc3MoICdnbG9iYWwnICk7CgkJCXdwX2FkbWluX2NzcyggJ2FkbWluJyApOwoJCQl3cF9hZG1pbl9jc3MoKTsKCQkJd3BfYWRtaW5fY3NzKCAnY29sb3JzJyApOwoJCQlkb19hY3Rpb24oJ2FkbWluX3ByaW50X3N0eWxlcycpOwoJCQlkb19hY3Rpb24oJ2FkbWluX3ByaW50X3NjcmlwdHMnKTsKCQkJZG9fYWN0aW9uKCdhZG1pbl9oZWFkJyk7CgkJCT8+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz4KCWpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oICQgKSB7CgkvLyBzZXR1cCB1bC50YWJzIHRvIHdvcmsgYXMgdGFicyBmb3IgZWFjaCBkaXYgZGlyZWN0bHkgdW5kZXIgZGl2LnBhbmVzCgkJalF1ZXJ5KCcjcGx1Z2luYnVkZHktdGFicycpLnRhYnMoKTsKfSk7Cgk8L3NjcmlwdD4KCTwvaGVhZD4KPD9waHAKZ2xvYmFsICRjdXJyZW50X3VzZXI7CiRzZWxmX3VybCA9IGFkZF9xdWVyeV9hcmcoIGFycmF5KCAnc2x1ZycgPT4gJHRoaXMtPnBsdWdpbl9zbHVnLCAnYWN0aW9uJyA9PiAkdGhpcy0+cGx1Z2luX3NsdWcgLiAnbGljZW5zZXMnLCAnX2FqYXhfbm9uY2UnID0+IHdwX2NyZWF0ZV9ub25jZSggJHRoaXMtPnBsdWdpbl9zbHVnIC4gJ2xpY2Vuc2VzJyApICksIGFkbWluX3VybCggJ2FkbWluLWFqYXgucGhwJyApICk7CiRsaWNlbnNlcyA9IGFycmF5KCk7CgovL0dldCBsaWNlbnNpbmcgaW5mbyBmcm9tIHRoZSB1c2VyCiRoYXNoID0gaXNzZXQoICR0aGlzLT5wbHVnaW5zWyAndXNlcmhhc2gnIF0gKSA/ICR0aGlzLT5wbHVnaW5zWyAndXNlcmhhc2gnIF0gOiAnJzsKJHVzZXJuYW1lID0gaXNzZXQoICR0aGlzLT5wbHVnaW5zWyAndXNlcm5hbWUnIF0gKSA/ICR0aGlzLT5wbHVnaW5zWyAndXNlcm5hbWUnIF0gOiAnJzsKaWYgKCBlbXB0eSggJGhhc2ggKSAmJiBpc3NldCggJF9QT1NUWyAncGFzc3dvcmQnIF0gKSApIHsKCSRoYXNoID0gJGN1cnJlbnRfdXNlci0+dXNlcl9sb2dpbjsKCSRoYXNoIC49ICRfUE9TVFsgJ3Bhc3N3b3JkJyBdOwoJJGhhc2ggLj0gc3RyX3JlcGxhY2UoICdodHRwczovLycsICdodHRwOi8vJywgc2l0ZV91cmwoKSApOwoJJGhhc2ggPSBtZDUoICRoYXNoICk7Cn0KCiRyZXNwb25zZSA9ICR0aGlzLT5wZXJmb3JtX3JlbW90ZV9yZXF1ZXN0KAoJYXJyYXkoCgkJJ2JvZHknID0+IGFycmF5KAoJCQknYWN0aW9uJyA9PiAnbGljZW5zZXMnLAoJCQknYWN0aW9uYicgPT4gJ2xvZ2luJywKCQkJJ2hhc2gnID0+ICRoYXNoLAoJCQknd3B1c2VyJyA9PiAkY3VycmVudF91c2VyLT51c2VyX2xvZ2luLAoJCQkndXNlcm5hbWUnID0+IGlzc2V0KCAkX1BPU1RbICd1c2VybmFtZScgXSApID8gJF9QT1NUWyAndXNlcm5hbWUnIF0gOiAkdXNlcm5hbWUsCgkJCSdwYXNzd29yZCcgPT4gaXNzZXQoICRfUE9TVFsgJ3Bhc3N3b3JkJyBdICkgPyAkX1BPU1RbICdwYXNzd29yZCcgXSA6ICcnCgkJKQoJKQopOwokbGljZW5zZXMgPSBpc19hcnJheSggJHJlc3BvbnNlLT5saWNlbnNlcyApID8gJHJlc3BvbnNlLT5saWNlbnNlcyA6IGFycmF5KCk7CmlmICggJHJlc3BvbnNlLT5hdXRoZW50aWNhdGVkICkgewoJJHRoaXMtPnBsdWdpbnNbICd1c2VyaGFzaCcgXSA9ICRyZXNwb25zZS0+aGFzaDsKCSR0aGlzLT5wbHVnaW5zWyAndXNlcm5hbWUnIF0gPSAkcmVzcG9uc2UtPnVzZXJuYW1lOwoJJHRoaXMtPnBsdWdpbnNbICR0aGlzLT5wbHVnaW5fc2x1ZyBdID0gJGN1cnJlbnRfcGx1Z2luOwoJJHRoaXMtPnNhdmVfcGx1Z2luX29wdGlvbnMoKTsKCSR0aGlzLT5hdXRoZW50aWNhdGVkID0gdHJ1ZTsKfSBlbHNlaWYgKCBpc3NldCggJF9QT1NUWyAncGFzc3dvcmQnIF0gKSAmJiAhJHJlc3BvbnNlLT5hdXRoZW50aWNhdGVkICkgewoJPz4KCTxkaXYgY2xhc3M9J2Vycm9yJz48cD48c3Ryb25nPlVzZXJuYW1lIGFuZC9vciBwYXNzd29yZCBpcyBpbnZhbGlkLiAgQXJlIHlvdSB1c2luZyB5b3VyIGlUaGVtZXMgcGFzc3dvcmQ/PC9zdHJvbmc+PC9wPjwvZGl2PgoJPD9waHAKfSAgCQo/PgoJPGJvZHk+Cgk8ZGl2IGlkPSdwYmxvZ28nPgoJCTxpbWcgc3JjPSI8P3BocCBlY2hvIGVzY191cmwoIHBsdWdpbnNfdXJsKCAnL2ltYWdlcy9wbHVnaW5idWRkeS5wbmcnLCBfX0ZJTEVfXyApICk7ID8+IiBzdHlsZT0ibWFyZ2luLXJpZ2h0OiA1MHB4OyIgLz4KCTwvZGl2PgoJPGRpdiBjbGFzcz0nd3JhcCcgc3R5bGU9IndpZHRoOiA5NyUiPgoJPCEtLVVzZXIgTG9naW4gRm9ybS0tPgoJPD9waHAgaWYgKCAhJHRoaXMtPmF1dGhlbnRpY2F0ZWQgKSA6ID8+Cgk8ZGl2IGNsYXNzPSJyb3VuZGVkIj4KCQlMb2cgaW4gd2l0aCB5b3VyIFBsdWdpbkJ1ZGR5IC8gaVRoZW1lcyBNZW1iZXIgYWNjb3VudCB0byBnZW5lcmF0ZSBsaWNlbnNlIGtleXMgJiBtYW5hZ2luZyBleGlzdGluZyBsaWNlbnNlcy48YnIgLz48YnIgLz4KCQk8Zm9ybSBtZXRob2Q9InBvc3QiIGFjdGlvbj0iPD9waHAgZWNobyBlc2NfdXJsKCAkc2VsZl91cmwgKTsgPz4iPgoJCTx0YWJsZT4KCQkJPHRyPgoJCQkJPHRkPjxsYWJlbCBmb3I9J3VzZXJuYW1lJz5Vc2VybmFtZTwvbGFiZWw+PC90ZD4KCQkJCTx0ZD4mbmJzcDsmbmJzcDs8L3RkPgoJCQkJPHRkPjxsYWJlbCBmb3I9J3Bhc3N3b3JkJz5QYXNzd29yZDwvbGFiZWw+PC90ZD4KCQkJPC90cj4KCQkJPHRyPgoJCQkJPHRkPjxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ndXNlcm5hbWUnIG5hbWU9InVzZXJuYW1lIiBzaXplPSIxNSIgdmFsdWU9IiIgLz48L3RkPgoJCQkJPHRkPiZuYnNwOyZuYnNwOzwvdGQ+CgkJCQk8dGQ+PGlucHV0IHR5cGU9InBhc3N3b3JkIiBpZD0ncGFzc3dvcmQnIG5hbWU9InBhc3N3b3JkIiBzaXplPSIxNSIgLz48L3RkPgoJCQk8L3RyPgoJCQk8dHI+PHRkIGNvbHNwYW49JzMnPjxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidXR0b24tc2Vjb25kYXJ5IiBuYW1lPSJsb2dpbiIgdmFsdWU9IkxvZyBJbiIgY2xhc3M9ImxhYmVsIiAvPjwvdGQ+PC90cj4KCQk8L3RhYmxlPgoJCTwvZm9ybT4KCQk8L2Rpdj4KCQk8P3BocCBwYl91cGRhdGVyX2F0dGFjaF9rZXlfaHRtbCggJHNlbGZfdXJsICk7ID8+CgkJPD9waHAgZWxzZTogPz4KCQkKPGRpdiBpZD0icGx1Z2luYnVkZHktdGFicyI+CgkJCTx1bD4KCQkJCTxsaT48YSBocmVmPSIjcGx1Z2luYnVkZHktdGFicy0xIj48c3Bhbj5TaXRlIExpY2Vuc2U8L3NwYW4+PC9hPjwvbGk+CgkJCQk8bGk+PGEgaHJlZj0iI3BsdWdpbmJ1ZGR5LXRhYnMtMiI+PHNwYW4+TWFuYWdlIExpY2Vuc2VzPC9zcGFuPjwvYT48L2xpPgkJCQoJCQk8L3VsPgoJCQk8ZGl2IGNsYXNzPSJ0YWJzLWJvcmRlcndyYXAiPgoJCQkJPGRpdiBpZD0icGx1Z2luYnVkZHktdGFicy0xIj4KCQkJCQk8aDM+RXhpc3RpbmcgU2l0ZSBMaWNlbnNlPC9oMz4KCQkJCQk8P3BocCBpZiAoICRjdXJyZW50X3BsdWdpbi0+a2V5X3N0YXR1cyA9PSAnb2snICkgOiAvKiBBY3RpdmUgbGljZW5zZSBmb3IgdGhlIHNpdGUgKi8gPz4KCQkJCQk8cD48bGFiZWw+U3RhdHVzOiA8L2xhYmVsPjxzdHJvbmc+QWN0aXZlIExpY2Vuc2U8L3N0cm9uZz4gKCA8P3BocCBlY2hvIGVzY19hdHRyKCAkY3VycmVudF9wbHVnaW4tPmtleSApOyA/PiApPC9wPjxiciAvPgoJCQkJCVRoaXMgc2l0ZSBpcyBjdXJyZW50bHkgbGljZW5zZWQgc28gaXQgcXVhbGlmaWVzIGZvciBhdXRvbWF0aWMgdXBncmFkZXMgJiBzdXBwb3J0IGZvciB0aGlzIHByb2R1Y3QuIAoJCQkJCUlmIHlvdSBubyBsb25nZXIgd2lzaCB0byB1c2UgdGhpcyBwcm9kdWN0IG9uIHRoaXMgc2l0ZSB5b3UgbWF5IGRldGFjaCB0aGUgbGljZW5zZSB0byB1c2UgZWxzZXdoZXJlLjxiciAvPgoJCQkJCTxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSI8P3BocCBlY2hvIGVzY191cmwoICRzZWxmX3VybCApOyA/PiI+CgkJCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYWN0aW9uYiIgdmFsdWU9InVubGljZW5zZV9zaXRlIiAvPgoJCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InVzZXJoYXNoIiB2YWx1ZT0iPD9waHAgZWNobyBlc2NfYXR0ciggJHRoaXMtPnBsdWdpbnNbICd1c2VyaGFzaCcgXSApOyA/PiIgLz4KCQkJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ0cnlfa2V5IiB2YWx1ZT0iPD9waHAgZWNobyBlc2NfYXR0ciggJGN1cnJlbnRfcGx1Z2luLT5rZXkgKTsgPz4iIC8+PGJyIC8+CgkJCQkJPGlucHV0IGNsYXNzPSJidXR0b24tc2Vjb25kYXJ5IiB0eXBlPSJzdWJtaXQiIG5hbWU9InN1Ym1pdCIgdmFsdWU9IkRldGFjaCBMaWNlbnNlIGZyb20gU2l0ZSIgLz4KCQkJCQk8L2Zvcm0+CgkJCQkJPD9waHAgCgkJCQkJZWxzZToKCQkJCQkJLy9ObyBMaWNlbnNlCgkJCQkJCT8+CgkJCQkJCTxwPjxsYWJlbD5TdGF0dXM6IDwvbGFiZWw+PHN0cm9uZz5ObyBMaWNlbnNlPC9zdHJvbmc+PGJyIC8+VGhpcyBzaXRlIGlzIGN1cnJlbnRseSBub3QgbGljZW5zZWQuICBQbGVhc2UgZ2VuZXJhdGUgYSBuZXcgbGljZW5zZSBrZXkgZm9yIHRoaXMgc2l0ZS48L3A+CgkJCQkJCTxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSI8P3BocCBlY2hvIGVzY191cmwoICRzZWxmX3VybCApOyA/PiI+CgkJCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImFjdGlvbmIiIHZhbHVlPSJsaWNlbnNlX3NpdGVfbmV3IiAvPgoJCQkJCQk8aW5wdXQgY2xhc3M9ImJ1dHRvbi1wcmltYXJ5IiB0eXBlPSJzdWJtaXQiIG5hbWU9InN1Ym1pdCIgdmFsdWU9IkdlbmVyYXRlIEtleSIgLz4KCQkJCQkJPC9mb3JtPgoJCQkJCQk8P3BocAoJCQkJCWVuZGlmOyAKCQkJCQk/PgoJCQkJCTw/cGhwCgkJCQkJcGJfdXBkYXRlcl9hdHRhY2hfa2V5X2h0bWwoICRzZWxmX3VybCApOwoJCQkJCQoJCQkJCT8+CgkJCQk8L2Rpdj48IS0tIGVuZCB0YWIgMS0tPgoJCQkJPGRpdiBpZD0icGx1Z2luYnVkZHktdGFicy0yIj4KCQkJCQk8aDM+TWFuYWdlIEV4aXN0aW5nIExpY2Vuc2VzPC9oMz4KCQkJCQk8P3BocAoJCQkJCS8qIEV4aXN0aW5nIGxpY2Vuc2VzICovCgkJCQkJaWYgKCBjb3VudCggJGxpY2Vuc2VzICkgPD0gMCApIHsKCQkJCQkJPz4KCQkJCQkJPHA+PHN0cm9uZz5UaGVyZSBhcmUgbm8gbGljZW5zZXMgdG8gbWFuYWdlIHlldC48L3N0cm9uZz48L3A+CgkJCQkJCTw/cGhwCgkJCQkJfQoJCQkJCSRrZXlfY291bnQgPSAwOwoJCQkJCWZvcmVhY2goICRsaWNlbnNlcyBhcyAkbGljZW5zZSApIHsKCQkJCQkJaWYgKCRrZXlfY291bnQgPT0gMCkgewoJCQkJCQkJPz4KCQkJCQkJCTxzdHJvbmc+RXhpc3RpbmcgS2V5cyAmIEFzc29jaWF0ZWQgU2l0ZXM6PC9zdHJvbmc+CgkJCQkJCQk8ZGl2IGNsYXNzPSdyb3VuZGVkJz4KCQkJCQkJCTw/cGhwCgkJCQkJCX0gZWxzZSB7CgkJCQkJCQk/PgoJCQkJCQkJPGRpdiBjbGFzcz0na2V5cyc+CgkJCQkJCQk8P3BocAoJCQkJCQl9CgkJCQkJCQoJCQkJCQlpZiAoICRsaWNlbnNlLT5saWNlbnNlX3N0YXR1cyA9PSAnMScgKSB7CgkJCQkJCQk/PgoJCQkJCQkJPGZvcm0gc3R5bGU9ImZsb2F0OiByaWdodDsiIG1ldGhvZD0icG9zdCIgYWN0aW9uPSI8P3BocCBlY2hvIGVzY191cmwoICRzZWxmX3VybCApOyA/PiI+CgkJCQkJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJhY3Rpb25iIiB2YWx1ZT0idW5saWNlbnNlX3NpdGVfZXhpc3RpbmciIC8+CgkJCQkJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ0cnlfa2V5IiB2YWx1ZT0iPD9waHAgZWNobyBlc2NfYXR0ciggJGxpY2Vuc2UtPmtleSApOyA/PiIgLz4KCQkJCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InVzZXJoYXNoIiB2YWx1ZT0iPD9waHAgZWNobyBlc2NfYXR0ciggJHRoaXMtPnBsdWdpbnNbICd1c2VyaGFzaCcgXSApOyA/PiIgLz4KCQkJCQkJCTxpbnB1dCBjbGFzcz0iYnV0dG9uLXNlY29uZGFyeSIgdHlwZT0ic3VibWl0IiBuYW1lPSJzdWJtaXQiIHZhbHVlPSJEZXRhY2gga2V5IGZyb20gc2l0ZSIgc3R5bGU9ImZsb2F0OiByaWdodDsiIC8+CgkJCQkJCQk8L2Zvcm0+CgkJCQkJCQk8P3BocAoJCQkJCQl9IGVsc2UgewoJCQkJCQkJPz4KCQkJCQkJCTxkaXYgc3R5bGU9J2Zsb2F0OnJpZ2h0Jz4KCQkJCQkJCQk8Zm9ybSBtZXRob2Q9InBvc3QiIGFjdGlvbj0iPD9waHAgZWNobyBlc2NfdXJsKCAkc2VsZl91cmwgKTsgPz4iPgoJCQkJCQkJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ0cnlfa2V5IiB2YWx1ZT0iPD9waHAgZWNobyBlc2NfYXR0ciggJGxpY2Vuc2UtPmtleSApOyA/PiIgLz4KCQkJCQkJCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0idXNlcmhhc2giIHZhbHVlPSI8P3BocCBlY2hvIGVzY19hdHRyKCAkdGhpcy0+cGx1Z2luc1sgJ3VzZXJoYXNoJyBdICk7ID8+IiAvPgoJCQkJCQkJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJhY3Rpb25iIiB2YWx1ZT0ibGljZW5zZV9zaXRlX2V4aXN0aW5nIiAvPgoJCQkJCQkJCQk8aW5wdXQgY2xhc3M9ImJ1dHRvbi1zZWNvbmRhcnkiIHR5cGU9InN1Ym1pdCIgbmFtZT0ic3VibWl0IiB2YWx1ZT0iQXR0YWNoIGtleSB0byB0aGlzIHNpdGUiIC8+CgkJCQkJCQkJPC9mb3JtPgoJCQkJCQkJCTxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSI8P3BocCBlY2hvIGVzY191cmwoICRzZWxmX3VybCApOyA/PiI+CgkJCQkJCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InRyeV9rZXkiIHZhbHVlPSI8P3BocCBlY2hvIGVzY19hdHRyKCAkbGljZW5zZS0+a2V5ICk7ID8+IiAvPgoJCQkJCQkJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ1c2VyaGFzaCIgdmFsdWU9Ijw/cGhwIGVjaG8gZXNjX2F0dHIoICR0aGlzLT5wbHVnaW5zWyAndXNlcmhhc2gnIF0gKTsgPz4iIC8+CgkJCQkJCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImFjdGlvbmIiIHZhbHVlPSJkZWxldGVfZXhwaXJlZCIgLz4KCQkJCQkJCQkJPGlucHV0IGNsYXNzPSJidXR0b24tc2Vjb25kYXJ5IiB0eXBlPSJzdWJtaXQiIG5hbWU9ImRlbGV0ZSIgdmFsdWU9IkRlbGV0ZSB0aGlzIGtleSIgLz4KCQkJCQkJCQk8L2Zvcm0+CgkJCQkJCQk8L2Rpdj4KCQkJCQkJCTw/cGhwCgkJCQkJCX0KCQkJCQkJZWNobyBlc2NfaHRtbCggJGxpY2Vuc2UtPmtleSApIC4nPGJyIC8+JzsKCQkJCQkJZWNobyAnPHNtYWxsPicuIGVzY191cmwoICRsaWNlbnNlLT5zaXRldXJsICkuJzxiciAvPic7CgkJCQkJCWlmICggJGxpY2Vuc2UtPmxpY2Vuc2Vfc3RhdHVzID09ICcxJyApIHsKCQkJCQkJCWVjaG8gJ0FjdGl2ZSc7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQllY2hvICdJbmFjdGl2ZSc7CgkJCQkJCX0KCQkJCQkJZWNobyAnPC9zbWFsbD4nOwoJCQkJCQlpZiAoJGtleV9jb3VudCA+IDApIHsKCQkJCQkJCWVjaG8gJzwvZGl2Pic7CgkJCQkJCX0KCQkJCQkJCgkJCQkJCSRrZXlfY291bnQrKzsKCQkJCQl9IC8vZW5kIGZvcmVhY2ggbGljZW5zZXMKCQkJCQk/PgoJCQkJPC9kaXY+PCEtLSBlbmQgdGFiIDItLT4KCQkJPC9kaXY+PCEtLSBlbmQgdGFiIGNvbnRhaW5lci0tPgoJCjw/cGhwIGVuZGlmOyAvKiBFbmQgaWYgISBhdXRoZW50aWNhdGVkICovID8+Cjw/cGhwIGlmICggJHRoaXMtPmF1dGhlbnRpY2F0ZWQgKSA6ID8+Cgk8Zm9ybSBtZXRob2Q9InBvc3QiIGFjdGlvbj0iPD9waHAgZWNobyBlc2NfdXJsKCAkc2VsZl91cmwgKTsgPz4iPgoJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYWN0aW9uYiIgdmFsdWU9ImxvZ291dCIgLz4KCTxpbnB1dCBjbGFzcz0iYnV0dG9uLXNlY29uZGFyeSIgc3R5bGU9ImRpc3BsYXk6IGJsb2NrOyBmbG9hdDogcmlnaHQ7IG1hcmdpbi1yaWdodDogMTBweDsiIHR5cGU9InN1Ym1pdCIgbmFtZT0ic3VibWl0IiB2YWx1ZT0iTG9nb3V0IiAvPgoJPC9mb3JtPgo8P3BocCBlbmRpZjsgPz4KCTwvZGl2PjwhLS0gLy4gd3JhcC0tPgo8P3BocApkb19hY3Rpb24oJ2FkbWluX2Zvb3RlcicsICcnKTsKZG9fYWN0aW9uKCdhZG1pbl9wcmludF9mb290ZXJfc2NyaXB0cycpOwo/PgoJPC9ib2R5Pgo8L2h0bWw+Cg==
###PACKDATA,FILE_END,/pluginbuddy/lib/updater/licenses.php,importbuddy/pluginbuddy/lib/updater/licenses.php
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/updater.php,importbuddy/pluginbuddy/lib/updater/updater.php

###PACKDATA,FILE_END,/pluginbuddy/lib/updater/updater.php,importbuddy/pluginbuddy/lib/updater/updater.php
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/css/index.php,importbuddy/pluginbuddy/lib/updater/css/index.php

###PACKDATA,FILE_END,/pluginbuddy/lib/updater/css/index.php,importbuddy/pluginbuddy/lib/updater/css/index.php
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/css/tabs.css,importbuddy/pluginbuddy/lib/updater/css/tabs.css
LyogVGFicwotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KLnVpLXRhYnMgeyBib3JkZXItdG9wOiAxcHggc29saWQgI0RGREZERjsgbWFyZ2luLXRvcDogMjBweDsgfSAvKiBwYWRkaW5nOiAuMmVtOyB6b29tOiAxOyAqLwoudWktdGFicyAudWktdGFicy1uYXYgeyB6LWluZGV4OiAxNTsgbGlzdC1zdHlsZTogbm9uZTsgcG9zaXRpb246IHJlbGF0aXZlOyBwYWRkaW5nOiAwcHggMHB4IDBweDsgbWFyZ2luLXRvcDogLTE1cHg7IG1hcmdpbi1sZWZ0OiAxMHB4OyB9Ci51aS10YWJzIC51aS10YWJzLW5hdiBsaSB7IG1hcmdpbjogLTExcHggM3B4IC0xcHggMHB4OyBwb3NpdGlvbjogcmVsYXRpdmU7IGZsb2F0OiBsZWZ0OyBwYWRkaW5nOiAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IH0KLnVpLXRhYnMgLnVpLXRhYnMtbmF2IGxpIGEgeyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURFREVEOyBoZWlnaHQ6IDE5cHg7IGZsb2F0OiBsZWZ0OyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHBhZGRpbmctbGVmdDogMTBweDsgcGFkZGluZy1yaWdodDogMTBweDsgLW1vei1ib3JkZXItcmFkaXVzOiAxMHB4IDEwcHggMHB4IDBweDsgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAxMHB4IDEwcHggMHB4IDBweDsgYm9yZGVyOiAxcHggc29saWQgI0RGREZERjsgb3V0bGluZTogbm9uZTsgcGFkZGluZy10b3A6IDVweDsgfQoudWktdGFicyAudWktdGFicy1uYXYgbGkgYTpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6ICNERkRGREY7IH0KLnVpLXRhYnMgLnVpLXRhYnMtbmF2IGxpLnVpLXRhYnMtc2VsZWN0ZWQgeyAgfSAvKiBwYWRkaW5nLWJvdHRvbTogMHB4OyAqLwoudWktdGFicyAudWktdGFicy1uYXYgbGkudWktdGFicy1zZWxlY3RlZCBhLCAudWktdGFicyAudWktdGFicy1uYXYgbGkudWktc3RhdGUtZGlzYWJsZWQgYSwgLnVpLXRhYnMgLnVpLXRhYnMtbmF2IGxpLnVpLXN0YXRlLXByb2Nlc3NpbmcgYSB7IGhlaWdodDogMjBweDsgY3Vyc29yOiB0ZXh0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRjlGOUY5OyBmb250LXdlaWdodDogYm9sZDsgYm9yZGVyLWJvdHRvbTogMHB4OyBjb2xvcjogIzMzMzMzMzsgfQoudWktdGFicyAudWktdGFicy1uYXYgbGkgYSwgLnVpLXRhYnMudWktdGFicy1jb2xsYXBzaWJsZSAudWktdGFicy1uYXYgbGkudWktdGFicy1zZWxlY3RlZCBhIHsgY3Vyc29yOiBwb2ludGVyOyB9IC8qIGZpcnN0IHNlbGVjdG9yIGluIGdyb3VwIHNlZW1zIG9ic29sZXRlLCBidXQgcmVxdWlyZWQgdG8gb3ZlcmNvbWUgYnVnIGluIE9wZXJhIGFwcGx5aW5nIGN1cnNvcjogdGV4dCBvdmVyYWxsIGlmIGRlZmluZWQgZWxzZXdoZXJlLi4uICovCi51aS10YWJzIC51aS10YWJzLXBhbmVsIHsgcGFkZGluZzogMTZweDsgZGlzcGxheTogYmxvY2s7IGJvcmRlci13aWR0aDogMDsgYmFja2dyb3VuZDogbm9uZTsgfQoudWktdGFicyAudWktdGFicy1oaWRlIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9CgojcGJsb2dvIHsKCXBhZGRpbmc6IDQwcHggMDsKCXRleHQtYWxpZ246IGNlbnRlcjsKfQoKYm9keSB7Cglmb250OiAxNHB4LzEuNCBhcmlhbCwgaGVsdmV0aWNhLCBzYW5zLXNlcmlmOwoJYmFja2dyb3VuZDogI0ZGRkZGRjsKCWNvbG9yOiAjMDAwMDAwOwoJdGV4dC1hbGlnbjogY2VudGVyOwp9CmltZyB7CglkaXNwbGF5OiBpbmxpbmU7Cglib3JkZXI6IDBweDsKfQpociB7Cgljb2xvcjogI0NGQ0ZDRjsKCWJhY2tncm91bmQtY29sb3I6ICNDRkNGQ0Y7CgloZWlnaHQ6IDJweDsKCWJvcmRlcjogMHB4OwoJLW1vei1ib3JkZXItcmFkaXVzOiA1cHg7Cgktd2Via2l0LWJvcmRlci1yYWRpdXM6IDVweDsKfQpoMiB7Cglmb250LWZhbWlseTogR2VvcmdpYSwiVGltZXMgTmV3IFJvbWFuIiwiQml0c3RyZWFtIENoYXJ0ZXIiLFRpbWVzLHNlcmlmOwoJZm9udC1zdHlsZTogaXRhbGljOwoJZm9udC12YXJpYW50OiBub3JtYWw7Cglmb250LXdlaWdodDogbm9ybWFsOwoJZm9udC1zaXplOiAyNHB4OwoJZm9udC1zaXplLWFkanVzdDogbm9uZTsKCWZvbnQtc3RyZXRjaDogbm9ybWFsOwoJLXgtc3lzdGVtLWZvbnQ6IG5vbmU7CgltYXJnaW4tdG9wOiAwcHQ7CgltYXJnaW4tcmlnaHQ6IDBwdDsKCW1hcmdpbi1ib3R0b206IDBwdDsKCW1hcmdpbi1sZWZ0OiAwcHQ7CglwYWRkaW5nLXRvcDogMTRweDsKCXBhZGRpbmctcmlnaHQ6IDE1cHg7CglwYWRkaW5nLWJvdHRvbTogM3B4OwoJcGFkZGluZy1sZWZ0OiAwcHQ7CglsaW5lLWhlaWdodDogMzVweDsKCXRleHQtc2hhZG93OiAjZmZmZmZmOwp9Ci53cmFwIHsKCXRleHQtYWxpZ246IGxlZnQ7Cgl3aWR0aDogNDUwcHg7CglwYWRkaW5nLWxlZnQ6IDE1cHg7CgltYXJnaW4tbGVmdDogYXV0bzsKICAgIG1hcmdpbi1yaWdodDogYXV0bzsKfQpsYWJlbCwgLmxhYmVsIHsKCWZsb2F0OiBsZWZ0OwoJd2lkdGg6IDEwMHB4OwoJZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KLmljb24gewoJdmVydGljYWwtYWxpZ246IC0zcHg7Cn0KLmtleXMgewoJYm9yZGVyLXRvcDogMXB4IGRvdHRlZCAjMEY4MENDOwoJbWFyZ2luLXRvcDogN3B4OwoJcGFkZGluZy10b3A6IDdweDsKfQoucm91bmRlZCB7CgliYWNrZ3JvdW5kLWNvbG9yOiAjRjlGOUY5OwoJbWFyZ2luLXJpZ2h0OiA0MHB4OwoJcGFkZGluZzogMTVweDsKCWJvcmRlcjogMXB4IHNvbGlkICM4RkQyRkY7CgktbW96LWJvcmRlci1yYWRpdXM6IDE1cHg7Cgktd2Via2l0LWJvcmRlci1yYWRpdXM6IDE1cHg7Cn0K
###PACKDATA,FILE_END,/pluginbuddy/lib/updater/css/tabs.css,importbuddy/pluginbuddy/lib/updater/css/tabs.css
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/images/Thumbs.db,importbuddy/pluginbuddy/lib/updater/images/Thumbs.db

###PACKDATA,FILE_END,/pluginbuddy/lib/updater/images/Thumbs.db,importbuddy/pluginbuddy/lib/updater/images/Thumbs.db
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/images/pluginbuddy.jpg,importbuddy/pluginbuddy/lib/updater/images/pluginbuddy.jpg

###PACKDATA,FILE_END,/pluginbuddy/lib/updater/images/pluginbuddy.jpg,importbuddy/pluginbuddy/lib/updater/images/pluginbuddy.jpg
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/images/pluginbuddy.png,importbuddy/pluginbuddy/lib/updater/images/pluginbuddy.png

###PACKDATA,FILE_END,/pluginbuddy/lib/updater/images/pluginbuddy.png,importbuddy/pluginbuddy/lib/updater/images/pluginbuddy.png
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/js/index.php,importbuddy/pluginbuddy/lib/updater/js/index.php

###PACKDATA,FILE_END,/pluginbuddy/lib/updater/js/index.php,importbuddy/pluginbuddy/lib/updater/js/index.php
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/js/jquery.tools.min.js,importbuddy/pluginbuddy/lib/updater/js/jquery.tools.min.js
LyohCiAqIGpRdWVyeSBUb29scyB2MS4yLjUgLSBUaGUgbWlzc2luZyBVSSBsaWJyYXJ5IGZvciB0aGUgV2ViCiAqIAogKiB0YWJzL3RhYnMuanMKICogCiAqIE5PIENPUFlSSUdIVFMgT1IgTElDRU5TRVMuIERPIFdIQVQgWU9VIExJS0UuCiAqIAogKiBodHRwOi8vZmxvd3BsYXllci5vcmcvdG9vbHMvCiAqIAogKi8KKGZ1bmN0aW9uKGEpe2EudG9vbHM9YS50b29sc3x8e3ZlcnNpb246InYxLjIuNSJ9LGEudG9vbHMudGFicz17Y29uZjp7dGFiczoiYSIsY3VycmVudDoiY3VycmVudCIsb25CZWZvcmVDbGljazpudWxsLG9uQ2xpY2s6bnVsbCxlZmZlY3Q6ImRlZmF1bHQiLGluaXRpYWxJbmRleDowLGV2ZW50OiJjbGljayIscm90YXRlOiExLGhpc3Rvcnk6ITF9LGFkZEVmZmVjdDpmdW5jdGlvbihhLGMpe2JbYV09Y319O3ZhciBiPXsiZGVmYXVsdCI6ZnVuY3Rpb24oYSxiKXt0aGlzLmdldFBhbmVzKCkuaGlkZSgpLmVxKGEpLnNob3coKSxiLmNhbGwoKX0sZmFkZTpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuZ2V0Q29uZigpLGQ9Yy5mYWRlT3V0U3BlZWQsZT10aGlzLmdldFBhbmVzKCk7ZD9lLmZhZGVPdXQoZCk6ZS5oaWRlKCksZS5lcShhKS5mYWRlSW4oYy5mYWRlSW5TcGVlZCxiKX0sc2xpZGU6ZnVuY3Rpb24oYSxiKXt0aGlzLmdldFBhbmVzKCkuc2xpZGVVcCgyMDApLHRoaXMuZ2V0UGFuZXMoKS5lcShhKS5zbGlkZURvd24oNDAwLGIpfSxhamF4OmZ1bmN0aW9uKGEsYil7dGhpcy5nZXRQYW5lcygpLmVxKDApLmxvYWQodGhpcy5nZXRUYWJzKCkuZXEoYSkuYXR0cigiaHJlZiIpLGIpfX0sYzthLnRvb2xzLnRhYnMuYWRkRWZmZWN0KCJob3Jpem9udGFsIixmdW5jdGlvbihiLGQpe2N8fChjPXRoaXMuZ2V0UGFuZXMoKS5lcSgwKS53aWR0aCgpKSx0aGlzLmdldEN1cnJlbnRQYW5lKCkuYW5pbWF0ZSh7d2lkdGg6MH0sZnVuY3Rpb24oKXthKHRoaXMpLmhpZGUoKX0pLHRoaXMuZ2V0UGFuZXMoKS5lcShiKS5hbmltYXRlKHt3aWR0aDpjfSxmdW5jdGlvbigpe2EodGhpcykuc2hvdygpLGQuY2FsbCgpfSl9KTtmdW5jdGlvbiBkKGMsZCxlKXt2YXIgZj10aGlzLGc9Yy5hZGQodGhpcyksaD1jLmZpbmQoZS50YWJzKSxpPWQuanF1ZXJ5P2Q6Yy5jaGlsZHJlbihkKSxqO2gubGVuZ3RofHwoaD1jLmNoaWxkcmVuKCkpLGkubGVuZ3RofHwoaT1jLnBhcmVudCgpLmZpbmQoZCkpLGkubGVuZ3RofHwoaT1hKGQpKSxhLmV4dGVuZCh0aGlzLHtjbGljazpmdW5jdGlvbihjLGQpe3ZhciBpPWguZXEoYyk7dHlwZW9mIGM9PSJzdHJpbmciJiZjLnJlcGxhY2UoIiMiLCIiKSYmKGk9aC5maWx0ZXIoIltocmVmKj0iK2MucmVwbGFjZSgiIyIsIiIpKyJdIiksYz1NYXRoLm1heChoLmluZGV4KGkpLDApKTtpZihlLnJvdGF0ZSl7dmFyIGs9aC5sZW5ndGgtMTtpZihjPDApcmV0dXJuIGYuY2xpY2soayxkKTtpZihjPmspcmV0dXJuIGYuY2xpY2soMCxkKX1pZighaS5sZW5ndGgpe2lmKGo+PTApcmV0dXJuIGY7Yz1lLmluaXRpYWxJbmRleCxpPWguZXEoYyl9aWYoYz09PWopcmV0dXJuIGY7ZD1kfHxhLkV2ZW50KCksZC50eXBlPSJvbkJlZm9yZUNsaWNrIixnLnRyaWdnZXIoZCxbY10pO2lmKCFkLmlzRGVmYXVsdFByZXZlbnRlZCgpKXtiW2UuZWZmZWN0XS5jYWxsKGYsYyxmdW5jdGlvbigpe2QudHlwZT0ib25DbGljayIsZy50cmlnZ2VyKGQsW2NdKX0pLGo9YyxoLnJlbW92ZUNsYXNzKGUuY3VycmVudCksaS5hZGRDbGFzcyhlLmN1cnJlbnQpO3JldHVybiBmfX0sZ2V0Q29uZjpmdW5jdGlvbigpe3JldHVybiBlfSxnZXRUYWJzOmZ1bmN0aW9uKCl7cmV0dXJuIGh9LGdldFBhbmVzOmZ1bmN0aW9uKCl7cmV0dXJuIGl9LGdldEN1cnJlbnRQYW5lOmZ1bmN0aW9uKCl7cmV0dXJuIGkuZXEoail9LGdldEN1cnJlbnRUYWI6ZnVuY3Rpb24oKXtyZXR1cm4gaC5lcShqKX0sZ2V0SW5kZXg6ZnVuY3Rpb24oKXtyZXR1cm4gan0sbmV4dDpmdW5jdGlvbigpe3JldHVybiBmLmNsaWNrKGorMSl9LHByZXY6ZnVuY3Rpb24oKXtyZXR1cm4gZi5jbGljayhqLTEpfSxkZXN0cm95OmZ1bmN0aW9uKCl7aC51bmJpbmQoZS5ldmVudCkucmVtb3ZlQ2xhc3MoZS5jdXJyZW50KSxpLmZpbmQoImFbaHJlZl49I10iKS51bmJpbmQoImNsaWNrLlQiKTtyZXR1cm4gZn19KSxhLmVhY2goIm9uQmVmb3JlQ2xpY2ssb25DbGljayIuc3BsaXQoIiwiKSxmdW5jdGlvbihiLGMpe2EuaXNGdW5jdGlvbihlW2NdKSYmYShmKS5iaW5kKGMsZVtjXSksZltjXT1mdW5jdGlvbihiKXtiJiZhKGYpLmJpbmQoYyxiKTtyZXR1cm4gZn19KSxlLmhpc3RvcnkmJmEuZm4uaGlzdG9yeSYmKGEudG9vbHMuaGlzdG9yeS5pbml0KGgpLGUuZXZlbnQ9Imhpc3RvcnkiKSxoLmVhY2goZnVuY3Rpb24oYil7YSh0aGlzKS5iaW5kKGUuZXZlbnQsZnVuY3Rpb24oYSl7Zi5jbGljayhiLGEpO3JldHVybiBhLnByZXZlbnREZWZhdWx0KCl9KX0pLGkuZmluZCgiYVtocmVmXj0jXSIpLmJpbmQoImNsaWNrLlQiLGZ1bmN0aW9uKGIpe2YuY2xpY2soYSh0aGlzKS5hdHRyKCJocmVmIiksYil9KSxsb2NhdGlvbi5oYXNoJiZlLnRhYnM9PSJhIiYmYy5maW5kKCJbaHJlZj0iK2xvY2F0aW9uLmhhc2grIl0iKS5sZW5ndGg/Zi5jbGljayhsb2NhdGlvbi5oYXNoKTooZS5pbml0aWFsSW5kZXg9PT0wfHxlLmluaXRpYWxJbmRleD4wKSYmZi5jbGljayhlLmluaXRpYWxJbmRleCl9YS5mbi50YWJzPWZ1bmN0aW9uKGIsYyl7dmFyIGU9dGhpcy5kYXRhKCJ0YWJzIik7ZSYmKGUuZGVzdHJveSgpLHRoaXMucmVtb3ZlRGF0YSgidGFicyIpKSxhLmlzRnVuY3Rpb24oYykmJihjPXtvbkJlZm9yZUNsaWNrOmN9KSxjPWEuZXh0ZW5kKHt9LGEudG9vbHMudGFicy5jb25mLGMpLHRoaXMuZWFjaChmdW5jdGlvbigpe2U9bmV3IGQoYSh0aGlzKSxiLGMpLGEodGhpcykuZGF0YSgidGFicyIsZSl9KTtyZXR1cm4gYy5hcGk/ZTp0aGlzfX0pKGpRdWVyeSk7Cg==
###PACKDATA,FILE_END,/pluginbuddy/lib/updater/js/jquery.tools.min.js,importbuddy/pluginbuddy/lib/updater/js/jquery.tools.min.js
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/css/images/blue.png,importbuddy/pluginbuddy/lib/updater/css/images/blue.png
iVBORw0KGgoAAAANSUhEUgAAAnoAAABcCAYAAAD5wBgOAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAACmBJREFUeNrs3V1o3eUdB/Dn5LWxajpdRhJpt9YXTNYlNsR2IGM4x4o3NpjCnIwK6oqtV5PBYBeB5HID2YU6sW6IgmiRwOhFQLxwlA3WZiawuGRUV3VLMutbW7Vp0pez5zn21CR9We2N/v//zwcezjn/3P36/f3ze55zTlpXLpdD1dDQ0H3xYVtcPXGtCkBWfBLXaFzPDwwM7Fr+Q72NzJIBx+LaF9dLMROPnycTD8eHrXH1xnWlcp3jcFyvxfVMXM9VL5bSoBeLd1t8vrOrq+veuEJbW1toampSMsiI+fn5MDMzEyYmJsLY2NgL8dIT8Ua5V28js2TFwsJCmJ6eDpOTk2F0dHRxJu5Imejt7b27o6MjtLe3h8bGRgVbZm5uLszOzobx8fHUV0/GS4/F9XrdmZ/v7OvrqzQVkD3pprd27drqumd4eDhd3qu3kVmyoqGh4Wwm1qxZU8lEHPL2lUqlV/r7+0NnZ6ciXUTaEK1bt66yVq9e/dDIyEi6vKM0ODj4QHd399NbtmwJJ0+dDm8enAnvfXg0nDx5UtUgI+pqa8LXr2kO169tD/V1tWHPnj3plGR77O2n9DYySxbU1taGa792Vbhx3XWLM/HIpk2bHt28eXNYOHEyvBEz8eFHRyv5YFlP1dWFb1zbHG66/rrK6927d4epqamtNfH5/Rs2bKhcfOOt6TB76ENNBRmTbnr/fe+jyi/G5ExPP6i3kVmy4tSpU+HQ+4eXZ2J7T09P5fWBN/9T+bkh7wI9FXtl5t0PwptvL+2pNOj1pve7k0PvHVEpyLBDH3zWw62trenhFr2NzJLlTNTW1t7c0tIS0vcJ0uku/9+7hw5XHtPnW6OeNOg1pOO+5PRpUzJkWbWHz/S03kZmyWQm0uleyoI8XH5P1dfXp4crapQEACCf6pa8MvZBPultZBaZKGSdlgx6pXJJgSCH9DYyi0wUs05O9MBOGGQWmchpnZzogZ0wyCwykdM6LR30SooIuWx8vY3MIhOFrJO3bqEI9DYyi0wUsk7euoUi7PD0NjKLTBSyTt66hSI0vt5GZslWAs55LROXWrqaCw96jkUhp/Q2MotMFLJOTvSgCBs8vY3MIhOFrJPP6EERGl9vI7PIRCHr5EQP7IRBZvlKKZ/ntUxcXu8Y9MAvTZBZZKIIg15QRMhr56sBMotMFLBOTvTAThhkFpnIS5186xbcIEFmkYli1KnuYlMgkM8dHsgsMpHXOpUvMuj56jLks/H1NjKLTBSyTt66hSI0vt5GZpEJg55vtEBu75BqgMwiE4Wo03n+r9tyuawwkBOL+1lvI7NkclYJ5bNZSI+lIBdftKeq9SsNDg6qHgBAHodmuycAgHxa8hm9oaGhXfGhP65VaQhUHsiMtGM7EteegYGBbct/qLeRWTLicFwvx0z8+DyZeDE+/CiuZpm4YE+l+u2O66HqxcqJXixeuvDLrq6ub8UV2traQlNTk5JBRszPz4eZmZkwMTERxsbG3omXfh1vlI/rbWSWrFhYWAjT09NhcnIyjI6OLs7EL+Lzn/f29rZ3dHSE9vb20NjYqGDLzM3NhdnZ2TA+Pp766h/x0q/i+mN10DvY19dXaSog29IvzuHh4XfiDfKbehuZJcuZiE+/UyqVjvT394fOzk6FuUT79+8PIyMjadj7dl1sqme6u7srTTV3/ET4/Yuvhr/87UD4+NM5lYKMWHlFY/juhhvDz37y/bB+/fpw8ODBNbG3n9XbyCxZsaKxIWzqvj7s2PaDs5kYGxt7duPGjZUh78jHx8Ku518NoxP/Cp8em1ewZa5a2RS+t/GmsOOnPwy33nprql/n1NTUb2pvv/32Z++8887G5ubm8LvnXgkv7/17WDhxUsUgQ06cOBUO/vtQ+OjIXPzleUNYuXJlejvshtjbDXobmSULTp46Fd6efn95Jtbdddddten5b/8wEvbu/2clO5wr9cqBt96Nm6SF0LP+W6GhoSGdjN6U/qreVen97uRPf51SKciwvfs+6+HW1tbKoYneRmbJciZqa2sbWlpawqk4BP559IDiXIJq76TPt0bXVP58cl1d3dlpEMj2jm5xT+ttZJYsZuLY3EIlC9U8zC84xfuiPVVfX58elv0/GQAA5IZBDwAgp+qMfWBLBzKLTOSzTksGvVLZH5qGPNLbyCwyUcw6mY8BAHLKW7dQBHobmUUmClmnpYOeY1HIJ72NzCITxSjTsjot/Yye+kAu6W1kFpkohuUHn0tP9ErKCPm8Q+ptZBaZKIJyyZcxAAAKYelbt6ZlyOlGWG8js2QpAOVzXsvE5fWOEz0AgJxacqJX9lFHyCW9jcwiE0UpVM2FB70aNYRc0tvILDJRDKVQvvCgZ1oGO2GQWWQiy5OeEz2wEwaZRSbyOec50QM7YZBZZCKvk97SEz3fugUAyCl/Rw+KsMHT28gsMlHIOi39L9Ac8EFO6W1kFpkohPJFBr3S8r9EDeRkh6e3kVlkohB1WjYPVwa9crlsWoa8bObK5fM819vILNnKRDULnz+XicupX2lwcNCIDACQQ6XFOykAAPJjyWf0hoaG7osP2+LqiWuV8kBmfBLXaFzPDwwM7Fr+Q72NzJIBx+LaF9dLMROPnycTD8eHrXH1xnWlcp3jcFyvxfVMXM9VL1ZO9GLxbovPd3Z1dd0bV2hrawtNTU1KBhkxPz8fZmZmwsTERBgbG3shXnoi3ij36m1klqxYWFgI09PTYXJyMoyOji7OxB0pE729vXd3dHSE9vb20NjYqGDLzM3NhdnZ2TA+Pp766sl46bG4Xq+e6O3s6+urNBWQPemmt3bt2uq6Z3h4OF3eq7eRWbKioaHhbCbWrFlTyUQc8vaVSqVX+vv7Q2dnpyJdRNoQrVu3rrJWr1790MjISLq8I30Z44Hu7u6nt2zZUvmGxpEjR8Lx48fD6dOnVQ0yoqamJqxYsSJcffXVled79uxJpyTbY28/pbeRWbIg/aHflInm5ubFmXhk06ZNj27evLmSg5SJdBosE+fvqTTspfolu3fvDlNTU1vTid79GzZsqFw8evRo5eivWnAgG9IvxWrvrlq1KqSejjfIB/U2MkuWpME+/XsvysT2np6eys+qg79MXLinjh07VqlN2kCl+sVB78E06PWm97sXFxjIprTTTVpbW9PDLXobmSXLmaitrb25paXl7HWZuLRhOQ166fOtUU8a9Brq6j7/8q0iQvad6Wm9jcySSel0KmWhmof0Wh6+mPr6+vRwhT8zDQCQ103U4hemZcgnvY3MIhPFrNOSQS99YwPIH72NzCITBj3TMtgJg8wiEwY9wA0SZBaZMOgBbpAgs8jElz/oef8b8klvI7PIhEHPtAx2wiCzyIRBD3CDBJlFJgx6gBskyCwy8eUPet7/hnzS28gsMmHQMy2DnTDILF+5f//0WiYMeoBfmsgsMqFOBj1wgwSZRSbyz6AHbpAgs8iEQQ9wgwSZRSYMeoAbJMgsMmHQA9wgQWaRCYMe4AaJzCITGPQAvY3MIhMY9MANEmQWmcgp/58IAIBBDwCALPmfAAMAG4Npnhqhk74AAAAASUVORK5CYII=
###PACKDATA,FILE_END,/pluginbuddy/lib/updater/css/images/blue.png,importbuddy/pluginbuddy/lib/updater/css/images/blue.png
###PACKDATA,FILE_START,/pluginbuddy/lib/updater/css/images/index.php,importbuddy/pluginbuddy/lib/updater/css/images/index.php

###PACKDATA,FILE_END,/pluginbuddy/lib/updater/css/images/index.php,importbuddy/pluginbuddy/lib/updater/css/images/index.php
###PACKDATA,FILE_START,/controllers/pages/server_info/cron.php,importbuddy/controllers/pages/server_info/cron.php

###PACKDATA,FILE_END,/controllers/pages/server_info/cron.php,importbuddy/controllers/pages/server_info/cron.php
###PACKDATA,FILE_START,/controllers/pages/server_info/database.php,importbuddy/controllers/pages/server_info/database.php
PGJyPjw/cGhwCmlmICggIWlzc2V0KCAkcGFyZW50X2NsYXNzICkgKSB7CgkkcGFyZW50X2NsYXNzID0gJHRoaXM7Cn0KaWYgKCBkZWZpbmVkKCAncGx1Z2luYnVkZHlfaW1wb3J0YnVkZHknICkgKSB7CgkvLyRwYXJlbnRfY2xhc3MtPmFkbWluX3NjcmlwdHMoKTsKfQoKCgoKCgoKCgoKCgovLyR0YWJsZV9saXN0ID0gYXJyYXkoKTsKPz4KCjx0YWJsZSBjbGFzcz0id2lkZWZhdCI+Cgk8dGhlYWQ+CgkJPHRyIGNsYXNzPSJ0aGVhZCI+CgkJCTw/cGhwCgkJCQllY2hvICc8dGg+JywgX18oJ0RhdGFiYXNlIFRhYmxlJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICksJzwvdGg+JywKCQkJCQkgJzx0aD4nLCBfXygnU3RhdHVzJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICksICc8L3RoPicsCgkJCQkJICc8dGg+JywgX18oJ1NldHRpbmdzJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICksICc8L3RoPicsCgkJCQkJICc8dGg+JywgX18oJ1VwZGF0ZWQgLyBDaGVja2VkJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICksJzwvdGg+JywKCQkJCQkgJzx0aD4nLCBfXygnUm93cycsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCAnPC90aD4nLAoJCQkJCSAnPHRoPicsIF9fKCdTaXplJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICksICc8L3RoPicsCgkJCQkJICc8dGg+JywgX18oJ0V4Y2x1ZGVkIFNpemUnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwgJzwvdGg+JzsKCQkJPz4KCQk8L3RyPgoJPC90aGVhZD4KCTx0Zm9vdD4KCQk8dHIgY2xhc3M9InRoZWFkIj4KCQkJPD9waHAKCQkJCWVjaG8gJzx0aD4nLCBfXygnRGF0YWJhc2UgVGFibGUnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwnPC90aD4nLAoJCQkJCSAnPHRoPicsIF9fKCdTdGF0dXMnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwgJzwvdGg+JywKCQkJCQkgJzx0aD4nLCBfXygnU2V0dGluZ3MnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwgJzwvdGg+JywKCQkJCQkgJzx0aD4nLCBfXygnVXBkYXRlZCAvIENoZWNrZWQnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwnPC90aD4nLAoJCQkJCSAnPHRoPicsIF9fKCdSb3dzJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICksICc8L3RoPicsCgkJCQkJICc8dGg+JywgX18oJ1NpemUnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwgJzwvdGg+JywKCQkJCQkgJzx0aD4nLCBfXygnRXhjbHVkZWQgU2l6ZScsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCAnPC90aD4nOwoJCQk/PgoJCTwvdHI+Cgk8L3Rmb290PgoJPHRib2R5PgoJCTw/cGhwCgkJZ2xvYmFsICR3cGRiOwoJCSRwcmVmaXggPSAkd3BkYi0+cHJlZml4OwoJCSRwcmVmaXhfbGVuZ3RoID0gc3RybGVuKCAkd3BkYi0+cHJlZml4ICk7CgkJCgkJJGFkZGl0aW9uYWxfaW5jbHVkZXMgPSBleHBsb2RlKCAiXG4iLCBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ215c3FsZHVtcF9hZGRpdGlvbmFsX2luY2x1ZGVzJ10gKTsKCQlhcnJheV93YWxrKCAkYWRkaXRpb25hbF9pbmNsdWRlcywgY3JlYXRlX2Z1bmN0aW9uKCcmJHZhbCcsICckdmFsID0gdHJpbSgkdmFsKTsnKSk7IAoJCSRhZGRpdGlvbmFsX2V4Y2x1ZGVzID0gZXhwbG9kZSggIlxuIiwgcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydteXNxbGR1bXBfYWRkaXRpb25hbF9leGNsdWRlcyddICk7CgkJYXJyYXlfd2FsayggJGFkZGl0aW9uYWxfZXhjbHVkZXMsIGNyZWF0ZV9mdW5jdGlvbignJiR2YWwnLCAnJHZhbCA9IHRyaW0oJHZhbCk7JykpOyAKCgkJCgkJJHRvdGFsX3NpemUgPSAwOwoJCSR0b3RhbF9zaXplX3dpdGhfZXhjbHVzaW9ucyA9IDA7CgkJJHRvdGFsX3Jvd3MgPSAwOwoJCSRyZXN1bHQgPSBteXNxbF9xdWVyeSgiU0hPVyBUQUJMRSBTVEFUVVMiKTsKCQl3aGlsZSggJHJzID0gbXlzcWxfZmV0Y2hfYXJyYXkoICRyZXN1bHQgKSApIHsKCQkJJGV4Y2x1ZGVkID0gdHJ1ZTsgLy8gRGVmYXVsdC4KCQkJCgkJCS8vIFRBQkxFIFNUQVRVUy4KCQkJJHJlc3VsdGIgPSBteXNxbF9xdWVyeSgiQ0hFQ0sgVEFCTEUgYHskcnNbJ05hbWUnXX1gIik7CgkJCXdoaWxlKCAkcnNiID0gbXlzcWxfZmV0Y2hfYXJyYXkoICRyZXN1bHRiICkgKSB7CgkJCQlpZiAoICRyc2JbJ01zZ190eXBlJ10gPT0gJ3N0YXR1cycgKSB7CgkJCQkJJHN0YXR1cyA9ICRyc2JbJ01zZ190ZXh0J107CgkJCQl9CgkJCX0KCQkJbXlzcWxfZnJlZV9yZXN1bHQoICRyZXN1bHRiICk7CgkJCQoJCQkvLyBGaXggdXAgcm93IGNvdW50IGFuZCBhdmVyYWdlIHJvdyBsZW5ndGggZm9yIElubm9EQiBlbmdpbmUgd2hpY2ggcmV0dXJucyBpbmFjY3VyYXRlCgkJCS8vIChhbmQgY2hhbmdpbmcpIHZhbHVlcyBmb3IgdGhlc2UKCQkJaWYgKCAnSW5ub0RCJyA9PT0gJHJzWyAnRW5naW5lJyBdICkgewoJCQkKCQkJCWlmICggZmFsc2UgIT09ICggJHJlc3VsdGMgPSBteXNxbF9xdWVyeSggIlNFTEVDVCBDT1VOVCgxKSBGUk9NIGB7JHJzWyAnTmFtZScgXX1gIiApICkgKSB7CgkJCQkKCQkJCQlpZiAoIGZhbHNlICE9PSAoICRyb3cgPSBteXNxbF9mZXRjaF9yb3coICRyZXN1bHRjICkgKSApIHsKCQkJCQkKCQkJCQkJaWYgKCAwIDwgKCAkcnNbICdSb3dzJyBdID0gJHJvd1sgMCBdICkgKSB7CgkJCQkJCQoJCQkJCQkJJHJzWyAnQXZnX3Jvd19sZW5ndGgnIF0gPSAoICRyc1sgJ0RhdGFfbGVuZ3RoJyBdIC8gJHJzWyAnUm93cycgXSApOwoJCQkJCQkJCgkJCQkJCX0KCQkJCQkJCgkJCQkJfQoJCQkJCQoJCQkJCW15c3FsX2ZyZWVfcmVzdWx0KCAkcmVzdWx0YyApOwoJCQkJCQoJCQkJfQoJCQkJCgkJCX0KCQkJCgkJCS8vIFRBQkxFIFNJWkUuCgkJCSRzaXplID0gKCAkcnNbJ0RhdGFfbGVuZ3RoJ10gKyAkcnNbJ0luZGV4X2xlbmd0aCddICk7CgkJCSR0b3RhbF9zaXplICs9ICRzaXplOwoJCQkKCQkJCgkJCS8vIEhBTkRMRSBFWENMVVNJT05TLgoJCQlpZiAoIHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snYmFja3VwX25vbndwX3RhYmxlcyddID09IDAgKSB7IC8vIE9ubHkgbWF0Y2hpbmcgcHJlZml4LgoJCQkJaWYgKCAoIHN1YnN0ciggJHJzWydOYW1lJ10sIDAsICRwcmVmaXhfbGVuZ3RoICkgPT0gJHByZWZpeCApIE9SICggaW5fYXJyYXkoICRyc1snTmFtZSddLCAkYWRkaXRpb25hbF9pbmNsdWRlcyApICkgKSB7CgkJCQkJaWYgKCAhaW5fYXJyYXkoICRyc1snTmFtZSddLCAkYWRkaXRpb25hbF9leGNsdWRlcyApICkgewoJCQkJCQkkdG90YWxfc2l6ZV93aXRoX2V4Y2x1c2lvbnMgKz0gJHNpemU7CgkJCQkJCSRleGNsdWRlZCA9IGZhbHNlOwoJCQkJCX0KCQkJCX0KCQkJfSBlbHNlIHsgLy8gQWxsIHRhYmxlcy4KCQkJCWlmICggIWluX2FycmF5KCAkcnNbJ05hbWUnXSwgJGFkZGl0aW9uYWxfZXhjbHVkZXMgKSApIHsKCQkJCQkkdG90YWxfc2l6ZV93aXRoX2V4Y2x1c2lvbnMgKz0gJHNpemU7CgkJCQkJJGV4Y2x1ZGVkID0gZmFsc2U7CgkJCQl9CgkJCX0KCQkJCgkJCQoJCQkKCQkJCgkJCQoJCQkvLyBPVVRQVVQgVEFCTEUgUk9XLgoJCQllY2hvICc8dHIgY2xhc3M9ImVudHJ5LXJvdyBhbHRlcm5hdGUiJzsKCQkJaWYgKCAkZXhjbHVkZWQgPT09IHRydWUgKSB7CgkJCQllY2hvICcgc3R5bGU9ImJhY2tncm91bmQ6ICNmY2M5Yzk7Iic7CgkJCX0KCQkJZWNobyAnPic7CgkJCWVjaG8gJwk8dGQ+JyAuICRyc1snTmFtZSddOwoJCQllY2hvICcJPGRpdiBjbGFzcz0icm93LWFjdGlvbnMiPgoJCQkJCQk8YSBocmVmPSInIC4gcGJfYmFja3VwYnVkZHk6OmFqYXhfdXJsKCAnZGJfY2hlY2snICkgLiAnJnRhYmxlPScgLiBiYXNlNjRfZW5jb2RlKCAkcnNbJ05hbWUnXSApIC4gJyYjMDM4O1RCX2lmcmFtZT0xJiMwMzg7d2lkdGg9NjQwJiMwMzg7aGVpZ2h0PTYwMCIgY2xhc3M9InRoaWNrYm94IiB0aXRsZT0iQ2hlY2sgZGF0YWJhc2UgdGFibGUgZm9yIGFueSBlcnJvcnMgb3IgY29ycnVwdGlvbi4iPkNoZWNrPC9hPgoJCQkJCQl8CgkJCQkJCTxhIGhyZWY9IicgLiBwYl9iYWNrdXBidWRkeTo6YWpheF91cmwoICdkYl9yZXBhaXInICkgLiAnJnRhYmxlPScgLiBiYXNlNjRfZW5jb2RlKCAkcnNbJ05hbWUnXSApIC4gJyYjMDM4O1RCX2lmcmFtZT0xJiMwMzg7d2lkdGg9NjQwJiMwMzg7aGVpZ2h0PTYwMCIgY2xhc3M9InRoaWNrYm94IiB0aXRsZT0iUmVwYWlyIHRhYmxlIHRoYXQgaGFzIGJlZW4gY29ycnVwdGVkLiBPbmx5IG5lZWRlZCBpZiB0aGUgc3RhdHVzIG9yIGNoZWNrIHJlc3BvbnNlIGluZGljYXRlZCBkYW1hZ2UuIj5SZXBhaXI8L2E+CgkJCQkJPC9kaXY+CgkJCQknOwoJCQllY2hvICc8L3RkPic7CgkJCWVjaG8gJwk8dGQ+JyAuICRzdGF0dXMgLiAnPC90ZD4nOwoJCQllY2hvICcJPHRkPkVuZ2luZTogJyAuICRyc1snRW5naW5lJ10gLiAnPGJyPkNvbGxhdGlvbjogJyAuICRyc1snQ29sbGF0aW9uJ10gLiAnPC90ZD4nOwoJCQkKCQkJZWNobyAnCTx0ZD5VcGRhdGVkOiAnOwoJCQlpZiAoICRyc1snVXBkYXRlX3RpbWUnXSA9PSAnJyApIHsKCQkJCV9lKCAnVW5hdmFpbGFibGUnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKTsKCQkJfSBlbHNlIHsKCQkJCWVjaG8gJHJzWydVcGRhdGVfdGltZSddOwoJCQl9CgkJCWVjaG8gJzxicj5DaGVja2VkOiAnOwoJCQlpZiAoICRyc1snQ2hlY2tfdGltZSddID09ICcnICkgewoJCQkJX2UoICdVbmF2YWlsYWJsZScsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApOwoJCQl9IGVsc2UgewoJCQkJZWNobyAkcnNbJ0NoZWNrX3RpbWUnXTsKCQkJfQoJCQllY2hvICc8L3RkPic7CgkJCQoJCQllY2hvICcJPHRkPicgLiAkcnNbJ1Jvd3MnXSAuICc8L3RkPic7CgkJCWVjaG8gJwk8dGQ+JyAuIHBiX2JhY2t1cGJ1ZGR5OjokZm9ybWF0LT5maWxlX3NpemUoICRzaXplICkgLiAnPC90ZD4nOwoJCQlpZiAoICRleGNsdWRlZCA9PT0gdHJ1ZSApIHsKCQkJCWVjaG8gJwk8dGQ+PHNwYW4gY2xhc3M9InBiX2xhYmVsIHBiX2xhYmVsLWltcG9ydGFudCI+RXhjbHVkZWQ8L3NwYW4+PC90ZD4nOwoJCQl9IGVsc2UgewoJCQkJZWNobyAnCTx0ZD4nIC4gcGJfYmFja3VwYnVkZHk6OiRmb3JtYXQtPmZpbGVfc2l6ZSggJHNpemUgKSAuICc8L3RkPic7CgkJCX0KCQkJCgkJCQoJCQkKCQkJCQkJCgkJCQoJCQkKCQkJJHRvdGFsX3Jvd3MgKz0gJHJzWydSb3dzJ107CgkJCWVjaG8gJzwvdHI+JzsKCQl9CgkJZWNobyAnPHRyIGNsYXNzPSJlbnRyeS1yb3cgYWx0ZXJuYXRlIj4nOwoJCWVjaG8gJwk8dGQ+Jm5ic3A7PC90ZD4nOwoJCWVjaG8gJwk8dGQ+Jm5ic3A7PC90ZD4nOwoJCWVjaG8gJwk8dGQ+Jm5ic3A7PC90ZD4nOwoJCWVjaG8gJzx0ZD48Yj4nLF9fKCdUT1RBTFMnLCdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCc6PC9iPjwvdGQ+JzsKCQllY2hvICc8dGQ+PGI+JyAuICR0b3RhbF9yb3dzIC4gJzwvYj48L3RkPic7CgkJZWNobyAnPHRkPjxiPicgLiBwYl9iYWNrdXBidWRkeTo6JGZvcm1hdC0+ZmlsZV9zaXplKCAkdG90YWxfc2l6ZSApIC4gJzwvYj48L3RkPic7CgkJZWNobyAnPHRkPjxiPicgLiBwYl9iYWNrdXBidWRkeTo6JGZvcm1hdC0+ZmlsZV9zaXplKCAkdG90YWxfc2l6ZV93aXRoX2V4Y2x1c2lvbnMgKSAuICc8L2I+PC90ZD4nOwoJCWVjaG8gJzwvdHI+JzsKCQkKCQlwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ3N0YXRzJ11bJ2RiX3NpemUnXSA9ICR0b3RhbF9zaXplOwoJCXBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snc3RhdHMnXVsnZGJfc2l6ZV9leGNsdWRlZCddID0gJHRvdGFsX3NpemVfd2l0aF9leGNsdXNpb25zOwoJCXBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1snc3RhdHMnXVsnZGJfc2l6ZV91cGRhdGVkJ10gPSB0aW1lKCk7CgkJcGJfYmFja3VwYnVkZHk6OnNhdmUoKTsKCQkKCQl1bnNldCggJHRvdGFsX3NpemUgKTsKCQl1bnNldCggJHRvdGFsX3Jvd3MgKTsKCQlteXNxbF9mcmVlX3Jlc3VsdCggJHJlc3VsdCApOwoJCT8+Cgk8L3Rib2R5Pgo8L3RhYmxlPjxicj4=
###PACKDATA,FILE_END,/controllers/pages/server_info/database.php,importbuddy/controllers/pages/server_info/database.php
###PACKDATA,FILE_START,/controllers/pages/server_info/index.php,importbuddy/controllers/pages/server_info/index.php
PD9waHAKLy8gU2lsZW5jZSBpcyBnb2xkZW4uCj8+
###PACKDATA,FILE_END,/controllers/pages/server_info/index.php,importbuddy/controllers/pages/server_info/index.php
###PACKDATA,FILE_START,/controllers/pages/server_info/permissions.php,importbuddy/controllers/pages/server_info/permissions.php
PGJyPjw/cGhwCiR0ZXN0cyA9IGFycmF5KCk7CgoKJHRoaXNfdGVzdCA9IGFycmF5KAoJCQkJJ3RpdGxlJwkJCT0+CQknLycsCgkJCQknc3VnZ2VzdGlvbicJPT4JCSc8PSA3NTUnLAoJCQkJJ3ZhbHVlJwkJCT0+CQlzdWJzdHIoIHNwcmludGYoICclbycsIEBmaWxlcGVybXMoIEFCU1BBVEggLiAnLycgKSApLCAtNCApLAoJCQkpOwppZiAoICFAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy8nICkgfHwgc3Vic3RyKCBzcHJpbnRmKCAnJW8nLCBAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy8nICkgKSwgLTQgKSA+IDc1NSApIHsKCSR0aGlzX3Rlc3RbJ3N0YXR1cyddID0gX18oJ1dBUk5JTkcnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKTsKfSBlbHNlIHsKCSR0aGlzX3Rlc3RbJ3N0YXR1cyddID0gX18oJ09LJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICk7Cn0KYXJyYXlfcHVzaCggJHRlc3RzLCAkdGhpc190ZXN0ICk7CgoKJHRoaXNfdGVzdCA9IGFycmF5KAoJCQkJJ3RpdGxlJwkJCT0+CQknL3dwLWluY2x1ZGVzLycsCgkJCQknc3VnZ2VzdGlvbicJPT4JCSc8PSA3NTUnLAoJCQkJJ3ZhbHVlJwkJCT0+CQlzdWJzdHIoIHNwcmludGYoICclbycsIEBmaWxlcGVybXMoIEFCU1BBVEggLiAnL3dwLWluY2x1ZGVzLycgKSApLCAtNCApLAoJCQkpOwppZiAoICFAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy93cC1pbmNsdWRlcy8nICkgfHwgc3Vic3RyKCBzcHJpbnRmKCAnJW8nLCBAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy93cC1pbmNsdWRlcy8nICkgKSwgLTQgKSA+IDc1NSApIHsKCSR0aGlzX3Rlc3RbJ3N0YXR1cyddID0gX18oJ1dBUk5JTkcnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKTsKfSBlbHNlIHsKCSR0aGlzX3Rlc3RbJ3N0YXR1cyddID0gX18oJ09LJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICk7Cn0KYXJyYXlfcHVzaCggJHRlc3RzLCAkdGhpc190ZXN0ICk7CgoKJHRoaXNfdGVzdCA9IGFycmF5KAoJCQkJJ3RpdGxlJwkJCT0+CQknL3dwLWFkbWluLycsCgkJCQknc3VnZ2VzdGlvbicJPT4JCSc8PSA3NTUnLAoJCQkJJ3ZhbHVlJwkJCT0+CQlzdWJzdHIoIHNwcmludGYoICclbycsIEBmaWxlcGVybXMoIEFCU1BBVEggLiAnL3dwLWFkbWluLycgKSApLCAtNCApLAoJCQkpOwppZiAoICFAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy93cC1hZG1pbi8nICkgfHwgc3Vic3RyKCBzcHJpbnRmKCAnJW8nLCBAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy93cC1hZG1pbi8nICkgKSwgLTQgKSA+IDc1NSApIHsKCSR0aGlzX3Rlc3RbJ3N0YXR1cyddID0gX18oJ1dBUk5JTkcnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKTsKfSBlbHNlIHsKCSR0aGlzX3Rlc3RbJ3N0YXR1cyddID0gX18oJ09LJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICk7Cn0KYXJyYXlfcHVzaCggJHRlc3RzLCAkdGhpc190ZXN0ICk7CgoKJHRoaXNfdGVzdCA9IGFycmF5KAoJCQkJJ3RpdGxlJwkJCT0+CQknL3dwLWFkbWluL2pzLycsCgkJCQknc3VnZ2VzdGlvbicJPT4JCSc8PSA3NTUnLAoJCQkJJ3ZhbHVlJwkJCT0+CQlzdWJzdHIoIHNwcmludGYoICclbycsIEBmaWxlcGVybXMoIEFCU1BBVEggLiAnL3dwLWFkbWluL2pzLycgKSApLCAtNCApLAoJCQkpOwppZiAoICFAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy93cC1hZG1pbi9qcy8nICkgfHwgc3Vic3RyKCBzcHJpbnRmKCAnJW8nLCBAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy93cC1hZG1pbi9qcy8nICkgKSwgLTQgKSA+IDc1NSApIHsKCSR0aGlzX3Rlc3RbJ3N0YXR1cyddID0gX18oJ1dBUk5JTkcnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKTsKfSBlbHNlIHsKCSR0aGlzX3Rlc3RbJ3N0YXR1cyddID0gX18oJ09LJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICk7Cn0KYXJyYXlfcHVzaCggJHRlc3RzLCAkdGhpc190ZXN0ICk7CgoKJHRoaXNfdGVzdCA9IGFycmF5KAoJCQkJJ3RpdGxlJwkJCT0+CQknL3dwLWNvbnRlbnQvdGhlbWVzLycsCgkJCQknc3VnZ2VzdGlvbicJPT4JCSc8PSA3NTUnLAoJCQkJJ3ZhbHVlJwkJCT0+CQlzdWJzdHIoIHNwcmludGYoICclbycsIEBmaWxlcGVybXMoIEFCU1BBVEggLiAnL3dwLWNvbnRlbnQvdGhlbWVzLycgKSApLCAtNCApLAoJCQkpOwppZiAoICFAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy93cC1jb250ZW50L3RoZW1lcy8nICkgfHwgc3Vic3RyKCBzcHJpbnRmKCAnJW8nLCBAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy93cC1jb250ZW50L3RoZW1lcy8nICkgKSwgLTQgKSA+IDc1NSApIHsKCSR0aGlzX3Rlc3RbJ3N0YXR1cyddID0gX18oJ1dBUk5JTkcnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKTsKfSBlbHNlIHsKCSR0aGlzX3Rlc3RbJ3N0YXR1cyddID0gX18oJ09LJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICk7Cn0KYXJyYXlfcHVzaCggJHRlc3RzLCAkdGhpc190ZXN0ICk7CgoKJHRoaXNfdGVzdCA9IGFycmF5KAoJCQkJJ3RpdGxlJwkJCT0+CQknL3dwLWNvbnRlbnQvcGx1Z2lucy8nLAoJCQkJJ3N1Z2dlc3Rpb24nCT0+CQknPD0gNzU1JywKCQkJCSd2YWx1ZScJCQk9PgkJc3Vic3RyKCBzcHJpbnRmKCAnJW8nLCBAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy93cC1jb250ZW50L3BsdWdpbnMvJyApICksIC00ICksCgkJCSk7CmlmICggIUBmaWxlcGVybXMoIEFCU1BBVEggLiAnL3dwLWNvbnRlbnQvcGx1Z2lucy8nICkgfHwgc3Vic3RyKCBzcHJpbnRmKCAnJW8nLCBAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy93cC1jb250ZW50L3BsdWdpbnMvJyApICksIC00ICkgPiA3NTUgKSB7CgkkdGhpc190ZXN0WydzdGF0dXMnXSA9IF9fKCdXQVJOSU5HJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICk7Cn0gZWxzZSB7CgkkdGhpc190ZXN0WydzdGF0dXMnXSA9IF9fKCdPSycsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApOwp9CmFycmF5X3B1c2goICR0ZXN0cywgJHRoaXNfdGVzdCApOwoKCiR0aGlzX3Rlc3QgPSBhcnJheSgKCQkJCSd0aXRsZScJCQk9PgkJJy93cC1jb250ZW50LycsCgkJCQknc3VnZ2VzdGlvbicJPT4JCSc8PSA3NTUnLAoJCQkJJ3ZhbHVlJwkJCT0+CQlzdWJzdHIoIHNwcmludGYoICclbycsIEBmaWxlcGVybXMoIEFCU1BBVEggLiAnL3dwLWNvbnRlbnQvJyApICksIC00ICksCgkJCSk7CmlmICggIUBmaWxlcGVybXMoIEFCU1BBVEggLiAnL3dwLWNvbnRlbnQvJyApIHx8IHN1YnN0ciggc3ByaW50ZiggJyVvJywgQGZpbGVwZXJtcyggQUJTUEFUSCAuICcvd3AtY29udGVudC8nICkgKSwgLTQgKSA+IDc1NSApIHsKCSR0aGlzX3Rlc3RbJ3N0YXR1cyddID0gX18oJ1dBUk5JTkcnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKTsKfSBlbHNlIHsKCSR0aGlzX3Rlc3RbJ3N0YXR1cyddID0gX18oJ09LJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICk7Cn0KYXJyYXlfcHVzaCggJHRlc3RzLCAkdGhpc190ZXN0ICk7CgoKJHRoaXNfdGVzdCA9IGFycmF5KAoJCQkJJ3RpdGxlJwkJCT0+CQknL3dwLWNvbnRlbnQvdXBsb2Fkcy8nLAoJCQkJJ3N1Z2dlc3Rpb24nCT0+CQknPD0gNzU1JywKCQkJCSd2YWx1ZScJCQk9PgkJc3Vic3RyKCBzcHJpbnRmKCAnJW8nLCBAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy93cC1jb250ZW50L3VwbG9hZHMvJyApICksIC00ICksCgkJCSk7CmlmICggIUBmaWxlcGVybXMoIEFCU1BBVEggLiAnL3dwLWNvbnRlbnQvdXBsb2Fkcy8nICkgfHwgc3Vic3RyKCBzcHJpbnRmKCAnJW8nLCBAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy93cC1jb250ZW50L3VwbG9hZHMvJyApICksIC00ICkgPiA3NTUgKSB7CgkkdGhpc190ZXN0WydzdGF0dXMnXSA9IF9fKCdXQVJOSU5HJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICk7Cn0gZWxzZSB7CgkkdGhpc190ZXN0WydzdGF0dXMnXSA9IF9fKCdPSycsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApOwp9CmFycmF5X3B1c2goICR0ZXN0cywgJHRoaXNfdGVzdCApOwoKCiR0aGlzX3Rlc3QgPSBhcnJheSgKCQkJCSd0aXRsZScJCQk9PgkJJy93cC1pbmNsdWRlcy8nLAoJCQkJJ3N1Z2dlc3Rpb24nCT0+CQknPD0gNzU1JywKCQkJCSd2YWx1ZScJCQk9PgkJc3Vic3RyKCBzcHJpbnRmKCAnJW8nLCBAZmlsZXBlcm1zKCBBQlNQQVRIIC4gJy93cC1pbmNsdWRlcy8nICkgKSwgLTQgKSwKCQkJKTsKaWYgKCAhQGZpbGVwZXJtcyggQUJTUEFUSCAuICcvd3AtaW5jbHVkZXMvJyApIHx8IHN1YnN0ciggc3ByaW50ZiggJyVvJywgQGZpbGVwZXJtcyggQUJTUEFUSCAuICcvd3AtaW5jbHVkZXMvJyApICksIC00ICkgPiA3NTUgKSB7CgkkdGhpc190ZXN0WydzdGF0dXMnXSA9IF9fKCdXQVJOSU5HJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICk7Cn0gZWxzZSB7CgkkdGhpc190ZXN0WydzdGF0dXMnXSA9IF9fKCdPSycsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApOwp9CmFycmF5X3B1c2goICR0ZXN0cywgJHRoaXNfdGVzdCApOwoKPz4KCjx0YWJsZSBjbGFzcz0id2lkZWZhdCI+Cgk8dGhlYWQ+CgkJPHRyIGNsYXNzPSJ0aGVhZCI+CgkJCTw/cGhwIAoJCQkJZWNobyAnPHRoPicsIF9fKCdSZWxhdGl2ZSBQYXRoJywnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwnPC90aD4nLAoJCQkJCSAnPHRoPicsIF9fKCdTdWdnZXN0aW9uJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICksICc8L3RoPicsCgkJCQkJICc8dGg+JywgX18oJ1ZhbHVlJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICksICc8L3RoPicsCgkJCQkJLy8gJzx0aD4nLCBfXygnUmVzdWx0JywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICksICc8L3RoPicsCgkJCQkJICc8dGggc3R5bGU9IndpZHRoOiA2MHB4OyI+JywgX18oJ1N0YXR1cycsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCAnPC90aD4nOwoJCQk/PgoJCTwvdHI+Cgk8L3RoZWFkPgoJPHRmb290PgoJCTx0ciBjbGFzcz0idGhlYWQiPgoJCQk8P3BocCAKCQkJCWVjaG8gJzx0aD4nLCBfXygnUmVsYXRpdmUgUGF0aCcsJ2l0LWwxMG4tYmFja3VwYnVkZHknICksJzwvdGg+JywKCQkJCQkgJzx0aD4nLCBfXygnU3VnZ2VzdGlvbicsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCAnPC90aD4nLAoJCQkJCSAnPHRoPicsIF9fKCdWYWx1ZScsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCAnPC90aD4nLAoJCQkJCS8vICc8dGg+JywgX18oJ1Jlc3VsdCcsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCAnPC90aD4nLAoJCQkJCSAnPHRoIHN0eWxlPSJ3aWR0aDogNjBweDsiPicsIF9fKCdTdGF0dXMnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwgJzwvdGg+JzsKCQkJPz4KCQk8L3RyPgoJPC90Zm9vdD4KCTx0Ym9keT4KCQk8P3BocAoJCWZvcmVhY2goICR0ZXN0cyBhcyAkdGhpc190ZXN0ICkgewoJCQllY2hvICc8dHIgY2xhc3M9ImVudHJ5LXJvdyBhbHRlcm5hdGUiPic7CgkJCWVjaG8gJwk8dGQ+JyAuICR0aGlzX3Rlc3RbJ3RpdGxlJ10gLiAnPC90ZD4nOwoJCQllY2hvICcJPHRkPicgLiAkdGhpc190ZXN0WydzdWdnZXN0aW9uJ10gLiAnPC90ZD4nOwoJCQllY2hvICcJPHRkPicgLiAkdGhpc190ZXN0Wyd2YWx1ZSddIC4gJzwvdGQ+JzsKCQkJLy9lY2hvICcJPHRkPicgLiAkdGhpc190ZXN0WydzdGF0dXMnXSAuICc8L3RkPic7CgkJCWVjaG8gJwk8dGQ+JzsKCQkJaWYgKCAkdGhpc190ZXN0WydzdGF0dXMnXSA9PSBfXygnT0snLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSApIHsKCQkJCS8vZWNobyAnPGRpdiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzIyRUU1QjsgYm9yZGVyOiAxcHggc29saWQgI0UyRTJFMjsiPiZuYnNwOyZuYnNwOyZuYnNwOzwvZGl2Pic7CgkJCQllY2hvICc8c3BhbiBjbGFzcz0icGJfbGFiZWwgcGJfbGFiZWwtc3VjY2VzcyI+UGFzczwvc3Bhbj4nOwoJCQl9IGVsc2VpZiAoICR0aGlzX3Rlc3RbJ3N0YXR1cyddID09IF9fKCdGQUlMJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKSB7CgkJCQkvL2VjaG8gJzxkaXYgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNDRjMzMzM7IGJvcmRlcjogMXB4IHNvbGlkICNFMkUyRTI7Ij4mbmJzcDsmbmJzcDsmbmJzcDs8L2Rpdj4nOwoJCQkJZWNobyAnPHNwYW4gY2xhc3M9InBiX2xhYmVsIHBiX2xhYmVsLWltcG9ydGFudCI+RmFpbDwvc3Bhbj4nOwoJCQl9IGVsc2VpZiAoICR0aGlzX3Rlc3RbJ3N0YXR1cyddID09IF9fKCdXQVJOSU5HJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgKSB7CgkJCQkvL2VjaG8gJzxkaXYgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRUZGN0Y7IGJvcmRlcjogMXB4IHNvbGlkICNFMkUyRTI7Ij4mbmJzcDsmbmJzcDsmbmJzcDs8L2Rpdj4nOwoJCQkJZWNobyAnPHNwYW4gY2xhc3M9InBiX2xhYmVsIHBiX2xhYmVsLXdhcm5pbmciPldhcm5pbmc8L3NwYW4+JzsKCQkJfSBlbHNlIHsKCQkJCWVjaG8gJ3Vua25vd24nOwoJCQl9CgkJCWVjaG8gJwk8L3RkPic7CgkJCWVjaG8gJzwvdHI+JzsKCQl9CgkJPz4KCTwvdGJvZHk+CjwvdGFibGU+Cgo8YnI+PGJyPg==
###PACKDATA,FILE_END,/controllers/pages/server_info/permissions.php,importbuddy/controllers/pages/server_info/permissions.php
###PACKDATA,FILE_START,/controllers/pages/server_info/remote_sends.php,importbuddy/controllers/pages/server_info/remote_sends.php
PD9waHAKCnBiX2JhY2t1cGJ1ZGR5OjokY2xhc3Nlc1snY29yZSddLT50cmltX3JlbW90ZV9zZW5kX3N0YXRzKCk7CgokcmVtb3RlX3NlbmRzID0gYXJyYXlfcmV2ZXJzZSggcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydyZW1vdGVfc2VuZHMnXSApOyAvLyBSZXZlcnNlIGFycmF5IHNvIG1vc3QgcmVjZW50IGlzIGZpcnN0LgoKJHNlbmRzID0gYXJyYXkoKTsKLy9lY2hvICc8cHJlPicgLiBwcmludF9yKCAkcmVtb3RlX3NlbmRzLCB0cnVlICkgLiAnPC9wcmU+JzsKZm9yZWFjaCggJHJlbW90ZV9zZW5kcyBhcyAkcmVtb3RlX3NlbmQgKSB7CgkKCS8vIFNldCB1cCBzb21lIHZhcmlhYmxlcyBiYXNlZCBvbiB3aGV0aGVyIGZpbGUgZmluaXNoZWQgc2VuZGluZyB5ZXQgb3Igbm90LgoJaWYgKCAkcmVtb3RlX3NlbmRbJ2ZpbmlzaF90aW1lJ10gPiAwICkgeyAvLyBGaW5pc2hlZCBzZW5kaW5nLgoJCSR0aW1lX2FnbyA9IHBiX2JhY2t1cGJ1ZGR5OjokZm9ybWF0LT50aW1lX2FnbyggJHJlbW90ZV9zZW5kWydmaW5pc2hfdGltZSddICkgLiAnIGFnbzsgPGI+dG9vayAnOwoJCSRkdXJhdGlvbiA9IHBiX2JhY2t1cGJ1ZGR5OjokZm9ybWF0LT50aW1lX2R1cmF0aW9uKCAkcmVtb3RlX3NlbmRbJ2ZpbmlzaF90aW1lJ10gLSAkcmVtb3RlX3NlbmRbJ3N0YXJ0X3RpbWUnXSApIC4gJzwvYj4nOwoJCSRmaW5pc2hfdGltZSA9IHBiX2JhY2t1cGJ1ZGR5OjokZm9ybWF0LT5kYXRlKCBwYl9iYWNrdXBidWRkeTo6JGZvcm1hdC0+bG9jYWxpemVfdGltZSggJHJlbW90ZV9zZW5kWydmaW5pc2hfdGltZSddICkgKTsKCX0gZWxzZSB7IC8vIERpZCBub3QgZmluaXNoICh5ZXQ/KS4KCQkkdGltZV9hZ28gPSBwYl9iYWNrdXBidWRkeTo6JGZvcm1hdC0+dGltZV9hZ28oICRyZW1vdGVfc2VuZFsnc3RhcnRfdGltZSddICkgLiAnIGFnbzsgPGI+dW5maW5pc2hlZDwvYj4nOwoJCSRkdXJhdGlvbiA9ICcnOwoJCSRmaW5pc2hfdGltZSA9ICc8c3BhbiBjbGFzcz0iZGVzY3JpcHRpb24iPlVua25vd248L3NwYW4+JzsKCX0KCQoJLy8gSGFuZGxlIHNob3dpbmcgc2VudCBJbXBvcnRCdWRkeSAoaWYgc2VudCkuCglpZiAoIGlzc2V0KCAkcmVtb3RlX3NlbmRbJ3NlbmRfaW1wb3J0YnVkZHknXSApICYmICggJHJlbW90ZV9zZW5kWydzZW5kX2ltcG9ydGJ1ZGR5J10gPT09IHRydWUgKSApIHsKCQkkc2VuZF9pbXBvcnRidWRkeSA9ICc8YnI+PHNwYW4gY2xhc3M9ImRlc2NyaXB0aW9uIiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDEwcHg7Ij4rIGltcG9ydGJ1ZGR5LnBocDwvc3Bhbj4nOwoJfSBlbHNlIHsKCQkkc2VuZF9pbXBvcnRidWRkeSA9ICcnOwoJfQoJCgkvLyBTaG93IGZpbGUgc2l6ZSAoaWYgYXZhaWxhYmxlKS4KCWlmICggaXNzZXQoICRyZW1vdGVfc2VuZFsnZmlsZV9zaXplJ10gKSApIHsKCQkkZmlsZV9zaXplID0gJzxicj48c3BhbiBjbGFzcz0iZGVzY3JpcHRpb24iIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweDsiPlNpemU6ICcgLiBwYl9iYWNrdXBidWRkeTo6JGZvcm1hdC0+ZmlsZV9zaXplKCAkcmVtb3RlX3NlbmRbJ2ZpbGVfc2l6ZSddICkgLiAnPC9zcGFuPic7Cgl9IGVsc2UgewoJCSRmaWxlX3NpemUgPSAnJzsKCX0KCQoJLy8gU3RhdHVzIHZlcmJhZ2UgJiBzdHlsaW5nIGJhc2VkIG9uIHNlbmQgc3RhdHVzLgoJaWYgKCAkcmVtb3RlX3NlbmRbJ3N0YXR1cyddID09ICdzdWNjZXNzJyApIHsKCQkkc3RhdHVzID0gJzxzcGFuIGNsYXNzPSJwYl9sYWJlbCBwYl9sYWJlbC1zdWNjZXNzIj5TdWNjZXNzPC9zcGFuPic7Cgl9IGVsc2VpZiAoICRyZW1vdGVfc2VuZFsnc3RhdHVzJ10gPT0gJ3RpbWVvdXQnICkgewoJCSRzdGF0dXMgPSAnPHNwYW4gY2xhc3M9InBiX2xhYmVsIHBiX2xhYmVsLXdhcm5pbmciPkluIHByb2dyZXNzIG9yIHRpbWVkIG91dDwvc3Bhbj4nOwoJfSBlbHNlaWYgKCAkcmVtb3RlX3NlbmRbJ3N0YXR1cyddID09ICdtdWx0aXBhcnQnICkgewoJCSRzdGF0dXMgPSAnPHNwYW4gY2xhc3M9InBiX2xhYmVsIHBiX2xhYmVsLWluZm8iPk11bHRpcGFydCB0cmFuc2Zlcjwvc3Bhbj4nOwoJCWlmICggaXNzZXQoICRyZW1vdGVfc2VuZFsnX211bHRpcGFydF9zdGF0dXMnXSApICkgewoJCQkkc3RhdHVzIC49ICc8YnI+JyAuICRyZW1vdGVfc2VuZFsnX211bHRpcGFydF9zdGF0dXMnXTsKCQl9Cgl9IGVsc2UgewoJCSRzdGF0dXMgPSAnPHNwYW4gY2xhc3M9InBiX2xhYmVsIHBiX2xhYmVsLWltcG9ydGFudCI+JyAuIHVjZmlyc3QoICRyZW1vdGVfc2VuZFsnc3RhdHVzJ10gKSAuICc8L3NwYW4+JzsKCX0KCQoJLy8gRGV0ZXJtaW5lIGRlc3RpbmF0aW9uLgoJaWYgKCBpc3NldCggcGJfYmFja3VwYnVkZHk6OiRvcHRpb25zWydyZW1vdGVfZGVzdGluYXRpb25zJ11bJHJlbW90ZV9zZW5kWydkZXN0aW5hdGlvbiddXSApICkgeyAvLyBWYWxpZCBkZXN0aW5hdGlvbi4KCQkkZGVzdGluYXRpb24gPSBwYl9iYWNrdXBidWRkeTo6JG9wdGlvbnNbJ3JlbW90ZV9kZXN0aW5hdGlvbnMnXVskcmVtb3RlX3NlbmRbJ2Rlc3RpbmF0aW9uJ11dWyd0aXRsZSddIC4gJyAoJyAuIHBiX2JhY2t1cGJ1ZGR5Ojokb3B0aW9uc1sncmVtb3RlX2Rlc3RpbmF0aW9ucyddWyRyZW1vdGVfc2VuZFsnZGVzdGluYXRpb24nXV1bJ3R5cGUnXSAuICcpJzsKCX0gZWxzZSB7IC8vIEludmFsaWQgZGVzdGluYXRpb24gKGJlZW4gZGVsZXRlZCBzaW5jZSBzZW5kPykuCgkJJGRlc3RpbmF0aW9uID0gJzxzcGFuIGNsYXNzPSJkZXNjcmlwdGlvbiI+VW5rbm93bjwvc3Bhbj4nOwoJfQoJCgkvLyBQdXNoIGludG8gYXJyYXkuCgkkc2VuZHNbXSA9IGFycmF5KAoJCWJhc2VuYW1lKCAkcmVtb3RlX3NlbmRbJ2ZpbGUnXSApIC4gJGZpbGVfc2l6ZSAuICRzZW5kX2ltcG9ydGJ1ZGR5LAoJCSRkZXN0aW5hdGlvbiwKCQl1Y2ZpcnN0KCAkcmVtb3RlX3NlbmRbJ3RyaWdnZXInXSApLAoJCSdTdGFydDogJyAuIHBiX2JhY2t1cGJ1ZGR5OjokZm9ybWF0LT5kYXRlKCBwYl9iYWNrdXBidWRkeTo6JGZvcm1hdC0+bG9jYWxpemVfdGltZSggICRyZW1vdGVfc2VuZFsnc3RhcnRfdGltZSddICkgKSAuICc8YnI+JyAuCgkJJ0ZpbmlzaDogJyAuICRmaW5pc2hfdGltZSAuICc8YnI+JyAuCgkJJzxzcGFuIGNsYXNzPSJkZXNjcmlwdGlvbiI+JyAuICR0aW1lX2FnbyAgLiAkZHVyYXRpb24gLiAnPC9zcGFuPicsCgkJJHN0YXR1cywKCSk7Cn0gLy8gRW5kIGZvcmVhY2guCgoKaWYgKCBjb3VudCggJHNlbmRzICkgPT0gMCApIHsKCWVjaG8gJzxicj4nIC4gX18oICdUaGVyZSBoYXZlIGJlZW4gbm8gcmVjZW50IGZpbGUgdHJhbnNmZXJzLicsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApIC4gJzxicj4nOwp9IGVsc2UgewoJcGJfYmFja3VwYnVkZHk6OiR1aS0+bGlzdF90YWJsZSgKCQkkc2VuZHMsCgkJYXJyYXkoCgkJCSdhY3Rpb24nCQk9PglwYl9iYWNrdXBidWRkeTo6cGFnZV91cmwoKSwKCQkJJ2NvbHVtbnMnCQk9PglhcnJheSgKCQkJCV9fKCAnQmFja3VwIEZpbGUnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwKCQkJCV9fKCAnRGVzdGluYXRpb24nLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwKCQkJCV9fKCAnVHJpZ2dlcicsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLAoJCQkJX18oICdUcmFuc2ZlciBUaW1lJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgLiAnIDxpbWcgc3JjPSInIC4gcGJfYmFja3VwYnVkZHk6OnBsdWdpbl91cmwoKSAuICcvaW1hZ2VzL3NvcnRfZG93bi5wbmciIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjogMHB4OyIgdGl0bGU9IlNvcnRlZCBtb3N0IHJlY2VudCBzdGFydGVkIGZpcnN0Ij4nLAoJCQkJX18oICdTdGF0dXMnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwKCQkJCSksCgkJCSdjc3MnCQkJPT4JCSd3aWR0aDogMTAwJTsnLAoJCSkKCSk7Cn0KCj8+PGJyPg==
###PACKDATA,FILE_END,/controllers/pages/server_info/remote_sends.php,importbuddy/controllers/pages/server_info/remote_sends.php
###PACKDATA,FILE_START,/controllers/pages/server_info/server.php,importbuddy/controllers/pages/server_info/server.php

###PACKDATA,FILE_END,/controllers/pages/server_info/server.php,importbuddy/controllers/pages/server_info/server.php
###PACKDATA,FILE_START,/controllers/pages/server_info/site_size.php,importbuddy/controllers/pages/server_info/site_size.php
PD9waHAKcGJfYmFja3VwYnVkZHk6OmxvYWRfc2NyaXB0KCAnaWNpY2xlLmpzJyApOwpwYl9iYWNrdXBidWRkeTo6bG9hZF9zY3JpcHQoICdpY2ljbGVfc2V0dXAuanMnICk7CnBiX2JhY2t1cGJ1ZGR5Ojpsb2FkX3N0eWxlKCAnaml0X2Jhc2UuY3NzJyApOwpwYl9iYWNrdXBidWRkeTo6bG9hZF9zdHlsZSggJ2ppdF9pY2ljbGUuY3NzJyApOwo/Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CglqUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkgewoJCWpRdWVyeSgnI3BiX2ljaWNsZWxhdW5jaCcpLmNsaWNrKGZ1bmN0aW9uKGUpIHsKCQkJalF1ZXJ5KCcjcGJfaW5mb3Zpc19jb250YWluZXInKS5zbGlkZVRvZ2dsZSgpOwoJCQlqUXVlcnkucG9zdCggJzw/cGhwIGVjaG8gcGJfYmFja3VwYnVkZHk6OmFqYXhfdXJsKCAnaWNpY2xlJyApOyA/PicsIAoJCQkJZnVuY3Rpb24oIGRhdGEgKSB7CgkJCQkJalF1ZXJ5KCcjaW5mb3ZpcycpLmh0bWwoJycpOwoJCQkJCWljaWNsZV9pbml0KCBkYXRhICk7CgkJCQl9CgkJCSk7CgkJfSk7CgkJCgkJalF1ZXJ5KCAnLnBiX2JhY2t1cGJ1ZGR5X3NpdGVfc2l6ZV9saXN0aW5nX2J1dHRvbicgKS5jbGljayggZnVuY3Rpb24oKSB7CgkJCWpRdWVyeSggJyNwYl9iYWNrdXBidWRkeV9zaXRlX3NpemVfbGlzdGluZ19pbnRybyA+IC5wYl9iYWNrdXBidWRkeV9sb2FkaW5nJyApLnNob3coKTsKCQkJalF1ZXJ5LnBvc3QoICc8P3BocCBlY2hvIHBiX2JhY2t1cGJ1ZGR5OjphamF4X3VybCggJ3NpdGVfc2l6ZV9saXN0aW5nJyApOyA/PicsIAoJCQkJZnVuY3Rpb24oIGRhdGEgKSB7CgkJCQkJalF1ZXJ5KCAnI3BiX2JhY2t1cGJ1ZGR5X3NpdGVfc2l6ZV9saXN0aW5nX2NvbnRlbnQnICkuaHRtbCggZGF0YSApOwoJCQkJCWpRdWVyeSggJyNwYl9iYWNrdXBidWRkeV9zaXRlX3NpemVfbGlzdGluZ19pbnRybyA+IC5wYl9iYWNrdXBidWRkeV9sb2FkaW5nJyApLmhpZGUoKTsKCQkJCQlqUXVlcnkoICcjcGJfYmFja3VwYnVkZHlfc2l0ZV9zaXplX2xpc3RpbmdfaW50cm8nICkuc2xpZGVVcCgpOwoJCQkJCWpRdWVyeSggJyNwYl9iYWNrdXBidWRkeV9zaXRlX3NpemVfbGlzdGluZ19jb250ZW50JyApLnNsaWRlRG93bigpOwoJCQkJfQoJCQkpOwoJCQlqUXVlcnkoICdwYl9iYWNrdXBidWRkeV9sb2FkaW5nJyApLmhpZGUoKTsKCQl9ICk7CgkJCgl9KTsKPC9zY3JpcHQ+CgoKPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCSNwYl9iYWNrdXBidWRkeV9zZXJ2ZXJpbmZvX2V4Y2x1c2lvbnM6Oi13ZWJraXQtc2Nyb2xsYmFyIHsKCQktd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7CgkJd2lkdGg6IDExcHg7CgkJaGVpZ2h0OiAxMXB4OwoJfQoJCgkKCSNwYl9iYWNrdXBidWRkeV9zZXJ2ZXJpbmZvX2V4Y2x1c2lvbnM6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHsKCQlib3JkZXItcmFkaXVzOiA4cHg7CgkJYm9yZGVyOiAycHggc29saWQgd2hpdGU7IC8qIHNob3VsZCBtYXRjaCBiYWNrZ3JvdW5kLCBjYW4ndCBiZSB0cmFuc3BhcmVudCAqLwoJCWJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjUpOwoJfeKAiwo8L3N0eWxlPgoKCjw/cGhwIGVjaG8gJzxkaXYgY2xhc3M9InBiX2h0aXRsZSI+JyAuIF9fKCAnRGlyZWN0b3J5IFNpemUgTWFwJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICkgLiAnPC9kaXY+PGJyPic7Pz4KPD9waHAgX2UoJ1RoaXMgb3B0aW9uIGRpc3BsYXlzIGFuIGludGVyYWN0aXZlIGdyYXBoaWNhbCByZXByZXNlbnRhdGlvbiBvZiBkaXJlY3RvcmllcyBhbmQgdGhlIGNvcnJlc3BvbmRpbmcgc2l6ZSBvZiBhbGwgY29udGVudHMgd2l0aGluLCBpbmNsdWRpbmcgc3ViZGlyZWN0b3JpZXMuClRoaXMgaXMgdXNlZnVsIGZvciBmaW5kaW5nIHdoZXJlIHNwYWNlIGlzIGJlaW5nIHVzZWQuIERpcmVjdG9yeSBib3hlcyBhcmUgc2NhbGVkIGJhc2VkIG9uIHNpemUuIENsaWNrIG9uIGEgZGlyZWN0b3J5IGJveCB0byBtb3ZlIGFyb3VuZC4gTm90ZSB0aGF0IHRoaXMKaXMgYSBDUFUgaW50ZW5zaXZlIHByb2Nlc3MgYW5kIG1heSB0YWtlIGEgd2hpbGUgdG8gbG9hZCBhbmQgZXZlbiB0aW1lIG91dCBvbiBzb21lIHNlcnZlcnMuIFNsb3dlciBjb21wdXRlcnMgbWF5IGhhdmUgdHJvdWJsZSBuYXZpZ2F0aW5nIHRoZSBpbnRlcmFjdGl2ZSBtYXAuJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICk7Cj8+CjxwPjxhIGlkPSJwYl9pY2ljbGVsYXVuY2giIGNsYXNzPSJidXR0b24gc2Vjb25kYXJ5LWJ1dHRvbiIgc3R5bGU9Im1hcmdpbi10b3A6IDNweDsiPjw/cGhwIF9lKCdEaXNwbGF5IERpcmVjdG9yeSBTaXplIE1hcCcsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApOz8+PC9hPjwvcD4KCjxsaW5rIHR5cGU9InRleHQvY3NzIiBocmVmPSI8P3BocCBlY2hvIHBiX2JhY2t1cGJ1ZGR5OjpwbHVnaW5fdXJsKCk7ID8+L2Nzcy9qaXRfYmFzZS5jc3MiIHJlbD0ic3R5bGVzaGVldCIgLz4KPGxpbmsgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ijw/cGhwIGVjaG8gcGJfYmFja3VwYnVkZHk6OnBsdWdpbl91cmwoKTsgPz4vY3NzL2ppdF9pY2ljbGUuY3NzIiByZWw9InN0eWxlc2hlZXQiIC8+CgoKPGRpdiBzdHlsZT0iZGlzcGxheTogbm9uZTsiIGlkPSJwYl9pbmZvdmlzX2NvbnRhaW5lciI+Cgk8ZGl2IHN0eWxlPSJiYWNrZ3JvdW5kOiAjMUExQTFBOyI+CgkJPGRpdiBpZD0iaW5mb3ZpcyI+CgkJCTxiciAvPjxiciAvPgoJCQk8ZGl2IHN0eWxlPSJtYXJnaW46IDMwcHg7Ij4KCQkJCTxoNCBzdHlsZT0iY29sb3I6ICNGRkZGRkY7Ij48aW1nIHNyYz0iPD9waHAgZWNobyBwYl9iYWNrdXBidWRkeTo6cGx1Z2luX3VybCgpOyA/Pi9pbWFnZXMvbG9hZGluZ19sYXJnZV9kYXJrYmcuZ2lmIiBzdHlsZT0idmVydGljYWwtYWxpZ246IC05cHg7IiAvPiA8P3BocCBfZSgnTG9hZGluZyAuLi4gUGxlYXNlIHdhaXQgLi4uJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICk7Pz48L2g0PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KCTwvZGl2PgoJCgk8bGFiZWwgZm9yPSJzLW9yaWVudGF0aW9uIj48P3BocCBfZSgnT3JpZW50YXRpb24nLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKTs/PjogPC9sYWJlbD4KCTxzZWxlY3QgbmFtZT0icy1vcmllbnRhdGlvbiIgaWQ9InMtb3JpZW50YXRpb24iPgoJCTxvcHRpb24gdmFsdWU9ImgiIHNlbGVjdGVkPjw/cGhwIF9lKCdob3Jpem9udGFsJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICk7Pz48L29wdGlvbj4KCQk8b3B0aW9uIHZhbHVlPSJ2Ij48P3BocCBfZSgndmVydGljYWwnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKTs/Pjwvb3B0aW9uPgoJPC9zZWxlY3Q+CgkKCTxsYWJlbCBmb3I9ImktbGV2ZWxzLXRvLXNob3ciPjw/cGhwIF9lKCdNYXggbGV2ZWxzJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICk7Pz46IDwvbGFiZWw+Cgk8c2VsZWN0ICBpZD0iaS1sZXZlbHMtdG8tc2hvdyIgbmFtZT0iaS1sZXZlbHMtdG8tc2hvdyIgc3R5bGU9IndpZHRoOiA1MHB4Ij4KCQk8b3B0aW9uPmFsbDwvb3B0aW9uPgoJCTxvcHRpb24+MTwvb3B0aW9uPgoJCTxvcHRpb24+Mjwvb3B0aW9uPgoJCTxvcHRpb24gc2VsZWN0ZWQ9InNlbGVjdGVkIj4zPC9vcHRpb24+CgkJPG9wdGlvbj40PC9vcHRpb24+CgkJPG9wdGlvbj41PC9vcHRpb24+Cgk8L3NlbGVjdD4KCgk8YSBpZD0idXBkYXRlIiBjbGFzcz0idGhlbWUgYnV0dG9uIHdoaXRlIj48P3BocCBfZSgnR28gVXAnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKTs/PjwvYT4KPC9kaXY+CgoKCjw/cGhwCiRkaXJfYXJyYXkgPSBhcnJheSgpOwokaWNpY2xlX2FycmF5ID0gYXJyYXkoKTsKJHRpbWVfc3RhcnQgPSBtaWNyb3RpbWUodHJ1ZSk7CgovL2VjaG8gJzxwcmU+JyAuICR0aGlzLT5idWlsZF9pY2ljbGUoIEFCU1BBVEgsIEFCU1BBVEgsICcnICkgLiAnPC9wcmU+JzsKCgoKCgoKCgoKCgplY2hvICc8YnI+JzsKZWNobyAnPGRpdiBjbGFzcz0icGJfaHRpdGxlIj4nIC4gX18oJ0RpcmVjdG9yeSBTaXplIExpc3RpbmcnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSAuICc8L2Rpdj48YnI+JzsKZWNobyAnPGEgbmFtZT0icGJfYmFja3VwYnVkZHlfZGlyX3NpemVfbGlzdGluZyI+Jm5ic3A7PC9hPic7CgplY2hvICc8ZGl2IGlkPSJwYl9iYWNrdXBidWRkeV9zaXRlX3NpemVfbGlzdGluZ19pbnRybyI+JzsKCWVjaG8gX18oJ1RoaXMgb3B0aW9uIGRpc3BsYXlzIGEgY29tcHJlaGVuc2l2ZSBsaXN0aW5nIG9mIGRpcmVjdG9yaWVzIGFuZCB0aGUgY29ycmVzcG9uZGluZyBzaXplIG9mIGFsbCBjb250ZW50cyB3aXRoaW4sIGluY2x1ZGluZyBzdWJkaXJlY3Rvcmllcy4gIFRoaXMgaXMgdXNlZnVsIGZvciBmaW5kaW5nIHdoZXJlIHNwYWNlIGlzIGJlaW5nIHVzZWQuIE5vdGUgdGhhdCB0aGlzIGlzIGEgQ1BVIGludGVuc2l2ZSBwcm9jZXNzIGFuZCBtYXkgdGFrZSBhIHdoaWxlIHRvIGxvYWQgYW5kIGV2ZW4gdGltZSBvdXQgb24gc29tZSBzZXJ2ZXJzLicsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApOwoJZWNobyAnPGJyIC8+PGJyIC8+PGEgY2xhc3M9InBiX2JhY2t1cGJ1ZGR5X3NpdGVfc2l6ZV9saXN0aW5nX2J1dHRvbiBidXR0b24gc2Vjb25kYXJ5LWJ1dHRvbiIgc3R5bGU9Im1hcmdpbi10b3A6IDNweDsiPicsIF9fKCdEaXNwbGF5IERpcmVjdG9yeSBTaXplIExpc3RpbmcnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwnPC9hPiAnOwoJZWNobyAnPHNwYW4gY2xhc3M9InBiX2JhY2t1cGJ1ZGR5X2xvYWRpbmciIHN0eWxlPSJkaXNwbGF5OiBub25lOyBtYXJnaW4tbGVmdDogMTBweDsiPjxpbWcgc3JjPSInIC4gcGJfYmFja3VwYnVkZHk6OnBsdWdpbl91cmwoKSAuICcvaW1hZ2VzL2xvYWRpbmcuZ2lmIiBhbHQ9IicgLiBfXygnTG9hZGluZy4uLicsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApIC4gJyIgdGl0bGU9IicgLiBfXygnTG9hZGluZy4uLicsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApIC4gJyIgd2lkdGg9IjE2IiBoZWlnaHQ9IjE2IiBzdHlsZT0idmVydGljYWwtYWxpZ246IC0zcHg7IiAvPjwvc3Bhbj4nOwplY2hvICc8L2Rpdj4nOwplY2hvICc8ZGl2IGlkPSJwYl9iYWNrdXBidWRkeV9zaXRlX3NpemVfbGlzdGluZ19jb250ZW50IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPjwvZGl2Pic7CmVjaG8gJzxicj4nOwo/Pgo=
###PACKDATA,FILE_END,/controllers/pages/server_info/site_size.php,importbuddy/controllers/pages/server_info/site_size.php
###PACKDATA,FILE_START,/controllers/pages/server_info.php,importbuddy/controllers/pages/server_info.php
PD9waHAKaWYgKCAhZGVmaW5lZCggJ1BCX0lNUE9SVEJVRERZJyApICkgeyAvLyBOT1QgSU4gSU1QT1JUQlVERFk6CglwYl9iYWNrdXBidWRkeTo6bG9hZF9zY3JpcHQoICdhZG1pbi5qcycgKTsKCQoJCgkKCXBiX2JhY2t1cGJ1ZGR5OjokdWktPnRpdGxlKCBfXyggJ1NlcnZlciBJbmZvcm1hdGlvbicsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApIC4gJyAnIC4gcGJfYmFja3VwYnVkZHk6OnZpZGVvKCAnN05JN29lUHZ4WmcnLCBfXyggJ1NlcnZlciBpbmZvcm1hdGlvbicsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCBmYWxzZSApICk7CglwYl9iYWNrdXBidWRkeTo6JGNsYXNzZXNbJ2NvcmUnXS0+dmVyc2lvbnNfY29uZmlybSgpOwoJCgkKCWVjaG8gJzxicj48YnI+JzsKCXBiX2JhY2t1cGJ1ZGR5OjokdWktPnN0YXJ0X3RhYnMoCgkJJ2dldHRpbmdfc3RhcnRlZCcsCgkJYXJyYXkoCgkJCWFycmF5KAoJCQkJJ3RpdGxlJwkJPT4JCV9fKCAnU2VydmVyJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICksCgkJCQknc2x1ZycJCT0+CQknc2VydmVyJywKCQkJKSwKCQkJYXJyYXkoCgkJCQkndGl0bGUnCQk9PgkJX18oICdEYXRhYmFzZScsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLAoJCQkJJ3NsdWcnCQk9PgkJJ2RhdGFiYXNlJywKCQkJKSwKCQkJYXJyYXkoCgkJCQkndGl0bGUnCQk9PgkJX18oICdGaWxlcycsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLAoJCQkJJ3NsdWcnCQk9PgkJJ2ZpbGVzJywKCQkJKSwKCQkJYXJyYXkoCgkJCQkndGl0bGUnCQk9PgkJX18oICdUb29scycsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLAoJCQkJJ3NsdWcnCQk9PgkJJ3Rvb2xzJywKCQkJKSwKCQkpLAoJCSd3aWR0aDogMTAwJTsnCgkpOwoJZWNobyAnPGJyPic7CgkKCQoJCglwYl9iYWNrdXBidWRkeTo6JHVpLT5zdGFydF90YWIoICdzZXJ2ZXInICk7CgkJCgkJcmVxdWlyZV9vbmNlKCAnc2VydmVyX2luZm8vc2VydmVyLnBocCcgKTsKCQkKCQkKCQlyZXF1aXJlX29uY2UoICdzZXJ2ZXJfaW5mby9wZXJtaXNzaW9ucy5waHAnICk7CgkJCgkJCgkJJHdwX3VwbG9hZF9kaXIgPSB3cF91cGxvYWRfZGlyKCk7CgkJJHdwX3NldHRpbmdzID0gYXJyYXkoKTsKCQkKCQlpZiAoIGlzc2V0KCAkd3BfdXBsb2FkX2RpclsncGF0aCddICkgKSB7CgkJCSR3cF9zZXR0aW5nc1tdID0gYXJyYXkoICdVcGxvYWQgRmlsZSBQYXRoJywgJHdwX3VwbG9hZF9kaXJbJ3BhdGgnXSwgJ3dwX3VwbG9hZF9kaXIoKScgKTsKCQl9CgkJaWYgKCBpc3NldCggJHdwX3VwbG9hZF9kaXJbJ3VybCddICkgKSB7CgkJCSR3cF9zZXR0aW5nc1tdID0gYXJyYXkoICdVcGxvYWQgVVJMJywgJHdwX3VwbG9hZF9kaXJbJ3VybCddLCAnd3BfdXBsb2FkX2RpcigpJyApOwoJCX0KCQlpZiAoIGlzc2V0KCAkd3BfdXBsb2FkX2Rpclsnc3ViZGlyJ10gKSApIHsKCQkJJHdwX3NldHRpbmdzW10gPSBhcnJheSggJ1VwbG9hZCBTdWJkaXJlY3RvcnknLCAkd3BfdXBsb2FkX2Rpclsnc3ViZGlyJ10sICd3cF91cGxvYWRfZGlyKCknKTsKCQl9CgkJaWYgKCBpc3NldCggJHdwX3VwbG9hZF9kaXJbJ2Jhc2V1cmwnXSApICkgewoJCQkkd3Bfc2V0dGluZ3NbXSA9IGFycmF5KCAnVXBsb2FkIEJhc2UgVVJMJywgJHdwX3VwbG9hZF9kaXJbJ2Jhc2V1cmwnXSwgJ3dwX3VwbG9hZF9kaXIoKScgKTsKCQl9CgkJaWYgKCBpc3NldCggJHdwX3VwbG9hZF9kaXJbJ2Jhc2VkaXInXSApICkgewoJCQkkd3Bfc2V0dGluZ3NbXSA9IGFycmF5KCAnVXBsb2FkIEJhc2UgRGlyZWN0b3J5JywgJHdwX3VwbG9hZF9kaXJbJ2Jhc2VkaXInXSwgJ3dwX3VwbG9hZF9kaXIoKScgKTsKCQl9CgkJJHdwX3NldHRpbmdzW10gPSBhcnJheSggJ1NpdGUgVVJMJywgc2l0ZV91cmwoKSwgJ3NpdGVfdXJsKCknICk7CgkJJHdwX3NldHRpbmdzW10gPSBhcnJheSggJ0hvbWUgVVJMJywgaG9tZV91cmwoKSwgJ2hvbWVfdXJsKCknICk7CgkJCgkJLy8gTXVsdGlzaXRlIGV4dHJhczoKCQkkd3Bfc2V0dGluZ3NfbXVsdGlzaXRlID0gYXJyYXkoKTsKCQlpZiAoIGlzX211bHRpc2l0ZSgpICkgewoJCQkkd3Bfc2V0dGluZ3NbXSA9IGFycmF5KCAnTmV0d29yayBTaXRlIFVSTCcsIG5ldHdvcmtfc2l0ZV91cmwoKSwgJ25ldHdvcmtfc2l0ZV91cmwoKScgKTsKCQkJJHdwX3NldHRpbmdzW10gPSBhcnJheSggJ05ldHdvcmsgSG9tZSBVUkwnLCBuZXR3b3JrX2hvbWVfdXJsKCksICduZXR3b3JrX2hvbWVfdXJsKCknICk7CgkJfQoJCQoJCS8vIERpc3BsYXkgV1Agc2V0dGluZ3MuLgoJCXBiX2JhY2t1cGJ1ZGR5OjokdWktPmxpc3RfdGFibGUoCgkJCSR3cF9zZXR0aW5ncywKCQkJYXJyYXkoCgkJCQknYWN0aW9uJwkJCQkJPT4JcGJfYmFja3VwYnVkZHk6OnBhZ2VfdXJsKCksCgkJCQknY29sdW1ucycJCQkJCT0+CWFycmF5KAoJCQkJCQkJCQkJCQkJX18oICdVUkxzICYgUGF0aHMnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwKCQkJCQkJCQkJCQkJCV9fKCAnVmFsdWUnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwKCQkJCQkJCQkJCQkJCV9fKCAnT2J0YWluZWQgdmlhJywgJ2l0LWwxMG4tYmFja3VwYnVkZHknICksCgkJCQkJCQkJCQkJCSksCgkJCQknY3NzJwkJCQkJCT0+CQknd2lkdGg6IDEwMCU7JywKCQkJKQoJCSk7CgkJCgkJCglwYl9iYWNrdXBidWRkeTo6JHVpLT5lbmRfdGFiKCk7CgkKCQoJCgkvLyBUaGlzIHBhZ2UgY2FuIHRha2UgYSBiaXQgdG8gcnVuLgoJLy8gUnVucyBBRlRFUiBzZXJ2ZXIgaW5mb3JtYXRpb24gaXMgZGlzcGxheWVkIHNvIHdlIGNhbiB2aWV3IHRoZSBkZWZhdWx0IGxpbWl0cyBmb3IgdGhlIHNlcnZlci4KCXBiX2JhY2t1cGJ1ZGR5OjpzZXRfZ3JlZWR5X3NjcmlwdF9saW1pdHMoKTsKCQoJCgkKCXBiX2JhY2t1cGJ1ZGR5OjokdWktPnN0YXJ0X3RhYiggJ2RhdGFiYXNlJyApOwoJCQoJCXJlcXVpcmVfb25jZSggJ3NlcnZlcl9pbmZvL2RhdGFiYXNlLnBocCcgKTsKCQkKCXBiX2JhY2t1cGJ1ZGR5OjokdWktPmVuZF90YWIoKTsKCQoJCgkKCXBiX2JhY2t1cGJ1ZGR5OjokdWktPnN0YXJ0X3RhYiggJ2ZpbGVzJyApOwoJCQoJCXBiX2JhY2t1cGJ1ZGR5OjokdWktPnN0YXJ0X21ldGFib3goIF9fKCAnU2l0ZSBTaXplIE1hcCcsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApIC4gJyAnIC5wYl9iYWNrdXBidWRkeTo6dmlkZW8oICdYZlp5LTdEZGJTMCM2NycsIF9fKCAnU2l0ZSBTaXplIE1hcCcsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCBmYWxzZSApLCB0cnVlLCAnd2lkdGg6IDEwMCU7JyApOwoJCXJlcXVpcmVfb25jZSggJ3NlcnZlcl9pbmZvL3NpdGVfc2l6ZS5waHAnICk7CgkJcGJfYmFja3VwYnVkZHk6OiR1aS0+ZW5kX21ldGFib3goKTsKCQkKCQkKCXBiX2JhY2t1cGJ1ZGR5OjokdWktPmVuZF90YWIoKTsKCQoJCgkKCXBiX2JhY2t1cGJ1ZGR5OjokdWktPnN0YXJ0X3RhYiggJ3Rvb2xzJyApOwoJCQoJCXBiX2JhY2t1cGJ1ZGR5OjokdWktPnN0YXJ0X21ldGFib3goIF9fKCAnV29yZFByZXNzIFNjaGVkdWxlZCBBY3Rpb25zIChDUk9OKScsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApIC4gJyAnIC5wYl9iYWNrdXBidWRkeTo6dmlkZW8oICc3Tkk3b2VQdnhaZyM5NCcsIF9fKCAnV29yZFByZXNzIFNjaGVkdWxlZCBBY3Rpb25zIChDUk9OKScsICdpdC1sMTBuLWJhY2t1cGJ1ZGR5JyApLCBmYWxzZSApLCB0cnVlLCAnd2lkdGg6IDEwMCU7JyApOwoJCXJlcXVpcmVfb25jZSggJ3NlcnZlcl9pbmZvL2Nyb24ucGhwJyApOwoJCXBiX2JhY2t1cGJ1ZGR5OjokdWktPmVuZF9tZXRhYm94KCk7CgkJCgkJZWNobyAnPGEgbmFtZT0iZGF0YWJhc2VfcmVwbGFjZSI+PC9hPic7CgkJcGJfYmFja3VwYnVkZHk6OiR1aS0+c3RhcnRfbWV0YWJveCggJ0FkdmFuY2VkOiAnIC4gX18oICdEYXRhYmFzZSBNYXNzIFRleHQgUmVwbGFjZW1lbnQnLCAnaXQtbDEwbi1iYWNrdXBidWRkeScgKSwgdHJ1ZSwgJ3dpZHRoOiAxMDAlOycgKTsKCQlwYl9iYWNrdXBidWRkeTo6bG9hZF92aWV3KCAnX3NlcnZlcl90b29scy1kYXRhYmFzZV9yZXBsYWNlJyApOwoJCXBiX2JhY2t1cGJ1ZGR5OjokdWktPmVuZF9tZXRhYm94KCk7CgkJCglwYl9iYWNrdXBidWRkeTo6JHVpLT5lbmRfdGFiKCk7CgkKCQoJZWNobyAnPGJyIHN0eWxlPSJjbGVhcjogYm90aDsiPjxicj48YnI+JzsKCXBiX2JhY2t1cGJ1ZGR5OjokdWktPmVuZF90YWJzKCk7CgkKCQoJCgkvLyBIYW5kbGVzIHRoaWNrYm94IGF1dG8tcmVzaXppbmcuIEtlZXAgYXQgYm90dG9tIG9mIHBhZ2UgdG8gYXZvaWQgaXNzdWVzLgoJaWYgKCAhd3Bfc2NyaXB0X2lzKCAnbWVkaWEtdXBsb2FkJyApICkgewoJCXdwX2VucXVldWVfc2NyaXB0KCAnbWVkaWEtdXBsb2FkJyApOwoJCXdwX3ByaW50X3NjcmlwdHMoICdtZWRpYS11cGxvYWQnICk7Cgl9CgkKfSBlbHNlIHsgLy8gSU5TSURFIElNUE9SVEJVRERZOgoJaWYgKCBwYl9iYWNrdXBidWRkeTo6X0dFVCggJ3NraXBfc2VydmVyaW5mbycgKSA9PSAnJyApIHsgLy8gR2l2ZSBhIHdvcmthcm91bmQgdG8gc2tpcCB0aGlzLgoJCXJlcXVpcmVfb25jZSggJ3NlcnZlcl9pbmZvL3NlcnZlci5waHAnICk7Cgl9IGVsc2UgewoJCWVjaG8gJ3tTa2lwcGluZyBTZXJ2ZXIgSW5mby4gc2VjdGlvbiBiYXNlZCBvbiBxdWVyeXN0cmluZy59JzsKCX0KfQo/Pg==
###PACKDATA,FILE_END,/controllers/pages/server_info.php,importbuddy/controllers/pages/server_info.php
###PACKDATA,FILE_START,/destinations/stash/lib/class.itx_helper.php,importbuddy/classes/class.itx_helper.php

###PACKDATA,FILE_END,/destinations/stash/lib/class.itx_helper.php,importbuddy/classes/class.itx_helper.php
###PACKDATA,FILE_START,/destinations/_s3lib/aws-sdk/lib/requestcore/LICENSE,importbuddy/lib/requestcore/LICENSE
Q29weXJpZ2h0IChjKSAyMDA2LTIwMTAgUnlhbiBQYXJtYW4sIEZvbGVlbyBJbmMuLCBhbmQgY29udHJpYnV0b3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgoKUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0IG1vZGlmaWNhdGlvbiwgYXJlCnBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucyBhcmUgbWV0OgoKCSogUmVkaXN0cmlidXRpb25zIG9mIHNvdXJjZSBjb2RlIG11c3QgcmV0YWluIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLCB0aGlzIGxpc3Qgb2YKCSAgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLgoKCSogUmVkaXN0cmlidXRpb25zIGluIGJpbmFyeSBmb3JtIG11c3QgcmVwcm9kdWNlIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLCB0aGlzIGxpc3QKCSAgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIHRoZSBkb2N1bWVudGF0aW9uIGFuZC9vciBvdGhlciBtYXRlcmlhbHMKCSAgcHJvdmlkZWQgd2l0aCB0aGUgZGlzdHJpYnV0aW9uLgoKCSogTmVpdGhlciB0aGUgbmFtZSBvZiBSeWFuIFBhcm1hbiwgRm9sZWVvIEluYy4gbm9yIHRoZSBuYW1lcyBvZiBpdHMgY29udHJpYnV0b3JzIG1heSBiZSB1c2VkIHRvCgkgIGVuZG9yc2Ugb3IgcHJvbW90ZSBwcm9kdWN0cyBkZXJpdmVkIGZyb20gdGhpcyBzb2Z0d2FyZSB3aXRob3V0IHNwZWNpZmljIHByaW9yIHdyaXR0ZW4KCSAgcGVybWlzc2lvbi4KClRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgIkFTIElTIiBBTkQgQU5ZIEVYUFJFU1MKT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkKQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUlMKQU5EIENPTlRSSUJVVE9SUyBCRSBMSUFCTEUgRk9SIEFOWSBESVJFQ1QsIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SCkNPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IKU0VSVklDRVM7IExPU1MgT0YgVVNFLCBEQVRBLCBPUiBQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORCBPTiBBTlkKVEhFT1JZIE9GIExJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IKT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UgT0YgVEhJUyBTT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRQpQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS4K
###PACKDATA,FILE_END,/destinations/_s3lib/aws-sdk/lib/requestcore/LICENSE,importbuddy/lib/requestcore/LICENSE
###PACKDATA,FILE_START,/destinations/_s3lib/aws-sdk/lib/requestcore/README.md,importbuddy/lib/requestcore/README.md
IyBSZXF1ZXN0Q29yZQoKUmVxdWVzdENvcmUgaXMgYSBsaWdodHdlaWdodCBjVVJMLWJhc2VkIEhUVFAgcmVxdWVzdC9yZXNwb25zZSBjbGFzcyB0aGF0IGxldmVyYWdlcyBNdWx0aUN1cmwgZm9yIHBhcmFsbGVsIHJlcXVlc3RzLgoKIyMjIFBFQVIgSFRUUF9SZXF1ZXN0PwoKUmVxdWVzdENvcmUgd2FzIHdyaXR0ZW4gYXMgYSByZXBsYWNlbWVudCBmb3IgW1BFQVIgSFRUUF9SZXF1ZXN0XShodHRwOi8vcGVhci5waHAubmV0L2h0dHBfcmVxdWVzdC8pLiBXaGlsZSBQRUFSIEhUVFBfUmVxdWVzdCBpcyBmdWxsLWZlYXR1cmVkIGFuZCBoZWF2eSwgUmVxdWVzdENvcmUgZmVhdHVyZXMgb25seSB0aGUgZXNzZW50aWFscyBhbmQgaXMgdmVyeSBsaWdodHdlaWdodC4gSXQgYWxzbyBsZXZlcmFnZXMgdGhlIGJhdGNoIHJlcXVlc3Qgc3VwcG9ydCBpbiBjVVJMJ3MgYGN1cmxfbXVsdGlfZXhlYygpYCB0byBlbmFibGUgbXVsdGktdGhyZWFkZWQgcmVxdWVzdHMgdGhhdCBmaXJlIGluIHBhcmFsbGVsLgoKIyMjIFJlZmVyZW5jZSBhbmQgRG93bmxvYWQKCllvdSBjYW4gZmluZCB0aGUgY2xhc3MgcmVmZXJlbmNlIGF0IDxodHRwOi8vc2t5enl4LmdpdGh1Yi5jb20vcmVxdWVzdGNvcmUvPi4gWW91IGNhbiBnZXQgdGhlIGNvZGUgZnJvbSA8aHR0cDovL2dpdGh1Yi5jb20vc2t5enl4L3JlcXVlc3Rjb3JlPi4KCiMjIyBMaWNlbnNlIGFuZCBDb3B5cmlnaHQKClRoaXMgY29kZSBpcyBDb3B5cmlnaHQgKGMpIDIwMDgtMjAxMCwgUnlhbiBQYXJtYW4uIEhvd2V2ZXIsIEknbSBsaWNlbnNpbmcgdGhpcyBjb2RlIGZvciBvdGhlcnMgdG8gdXNlIHVuZGVyIHRoZSBbU2ltcGxpZmllZCBCU0QgbGljZW5zZV0oaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9ic2QtbGljZW5zZS5waHApLgo=
###PACKDATA,FILE_END,/destinations/_s3lib/aws-sdk/lib/requestcore/README.md,importbuddy/lib/requestcore/README.md
###PACKDATA,FILE_START,/destinations/_s3lib/aws-sdk/lib/requestcore/cacert.pem,importbuddy/lib/requestcore/cacert.pem

###PACKDATA,FILE_END,/destinations/_s3lib/aws-sdk/lib/requestcore/cacert.pem,importbuddy/lib/requestcore/cacert.pem
###PACKDATA,FILE_START,/destinations/_s3lib/aws-sdk/lib/requestcore/requestcore.class.php,importbuddy/lib/requestcore/requestcore.class.php

###PACKDATA,FILE_END,/destinations/_s3lib/aws-sdk/lib/requestcore/requestcore.class.php,importbuddy/lib/requestcore/requestcore.class.php
###PACKDATA,END
*/









